hey gang welcome to your second CSS grid tutorial and in this video I'm going to introduce you to the concept of columns [Music] alright so in the last video we said that CSS grid gives us the ability to create these grids and place them on a web page then we can nest elements inside this grid and place the elements onto the grid for like so now this grid has two directions it has rows going across and columns going down this video is going to focus on the columns so this example uses eight columns but if you wanted to you could have two columns ten columns 20 columns there's no limit as to how small or how large you want your grid to be in terms of how many columns you want in it so the idea is that we create this grid and we set out the number of columns and the width of each column then we can play content onto those columns and say hey I want you to span three columns in width or four columns and width also in this example every column has the same width but in your grid you don't have to use the same width for every single column you could have some columns that are three times the width of the other column alright and we're going to see all this in a minute so I've already created an index dot HTML file and inside we have this div with an ID of content this is going to serve as the actual grid the grid of rapper if you like and then all the elements that were placing onto the grid go inside it so we have these nine divs right here and each one of them has a number inside of it so we can see which one they are on the web page I've also added some very simple styles at the top up here so the body tag sets a color of white for all the font a font family I've no need to of semi bold and it aligns all of the text to the center the content which is going to act as the grid wrapper has a max width of 960 and imagine of zero and Auto so it senses it on the page then we style the divs themselves so each div is going to have a background of this kind of light blue color and a padding of 30 pixels however each even child div is going to have a background of this kind of charcoal gray color so this looks something like this in the browser at the minute each one of these is a div which takes up 100% in width as default because it's a block-level element and each other div as a different color so we can identify them easily all right so now let's create a grid out of this thing right here we want to say that this is the grid and these are the elements we want to place on the grid right so to make a grid the first thing we need to do is take this rapper this content and say we want it to display as grid that's simple display grid now this is a grid if we save it and view it in a browser nothing much is going to change all we're doing here is saying that this is going to be a grid but we still need to define our columns inside this grid visit the minute it doesn't really have any columns it's just one element on top of another but say for example we want to give this grid four columns or three columns even so that each row across has three elements in it right so the way we do this is by using a property called grid - template - columns okay now we can define our different columns inside this property now I said we're going to use three columns and I want each column to be roughly the same width so I'm going to say 33.3% for the first column 33.3% for the second column and 33.3% for the third column so right here we say we want three columns because we provided three numbers and each column is going to be the same width 33.3% they add up to just nearly 100% so if I save this now view this in a browser we can see that while we've made this grid with three columns going across so each element sits inside one of these columns and then it automatically creates a new row when it needs to because we have nine elements but there's only three columns right so I did say that we could make each different column a different width we don't always have to have the same width for each column so let's try that we'll say the first column is going to be 30% in width the second column 20% in width and the third column is going to be 50% in width save that and now we can see it's still split up into three columns but they all have different widths and automagically these elements have been placed into the positions one two three four five six inside this grid okay so if we leave it like this then by default each element is going to take up the column that it is assigned to right so the first one is assigned to 30% the second one assigned to 20% the third one to 50 then we restart we've gone to a new row the fourth one to thirty fifth to 22 sixth to 50 etc alright so that's using percentages but typically what we do now with CSS grid is use a different unit and that's called fractional zop fractions right so I'm going to get rid of this in fact I'll just comment it out so we can see it there later on and underneath and we're going to create the same property grid - template columns to say which columns we want in this grid and this time I'm going to use fractions so say again we want three columns or the same width well we'd say one fraction so fr4 fraction one fraction and one fraction so we're saying we want all of the columns to be the same fraction in width the same fraction of the overall grid if you like so if I save this and view it in a browser you can see each column has the same width awesome but if we were to change this and say we want this middle column to have a different width it's going to be two fractions and what this means is okay I want this to be twice as long as this column right this is two fractions of the overall width this is one fraction of the overall width so let's review this in a browser and we can see now this middle column is twice as big it stretches twice as far is two fractional x' alright so I want to show you one more thing so let's comment this dude out again and underneath I'm going to do exactly the same property I'm just keeping it okay so you guys can see as we go along so great - templates - columns again and this time I'm going to use a repeat function and what repeat function allows us to do is say we want to repeat something X amount of times and also say what we want to repeat so I want to repeat this three times because we want three columns and then I'm going to say 1fr so that is the same as saying what if I what if I one of our let's just see this works and we get exactly the same now the reason this is cool is because say we want 10 columns or 9 columns I can say repeat this known times 1 fr and now we get a grid with 9 columns so it just makes writing out the columns much easier so I'll be using this a little bit as we go through this series now there we go that is grid template columns this property let's just define how many columns we want in our grid and how wide each column should be then automatically the elements get placed into each different column in order so if the first column is 10% in width then this will have a width of 10% of its two fractional will have a width of 2 fractional x' etc etc okay so that's columns for you very basic to begin with in the next video we're going to talk about rows and how we can take this into the two dimensional realm what would be		
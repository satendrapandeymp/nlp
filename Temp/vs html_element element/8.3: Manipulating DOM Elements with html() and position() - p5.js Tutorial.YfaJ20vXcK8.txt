so in the previous video I looked at how you can use the p5.js create blank functions to create HTML elements on the page create an h1 element create a paragraph created paragraph create a paragraph each one using dynamic content like a random number so what I want to look at now is how you can start to manipulate these elements on the fly and a big topic of that is how to manipulate the style of those elements change their font change their color a highlight then when the mouse is over them those pieces I'm going to sort of like dip a toe into this I'm going to leave all the style stuff for an entire separate video I'm going to look at two pieces of functionality one is moving their position on the page and two is changing the content of the element itself so first let's just think about positioning on the page for a second so I've no idea what I'm about to draw whose it's going to start at this is not a good pen it's going to start as a rectangle so if this is the page you can see there was this h1 element then there was a paragraph element then there was a canvas was there is a canvas element another h1 and another paragraph so one thing you'll notice about hTML is it you know flows in this very intuitive way like a document each thing added to the page sits below the other thing there's some padding some margin you know what we're looking at is a sort of default styling of the page so there's really two things there's like you can think of layout and styling ink I know there's a blurry line between those two things but this is one of the things that you can do with Dom elements with HTML elements is something known as absolute positioning now often so the positioning sits like a terrible idea so you want to be careful here I'm going to look at lots of different ways of thinking about the flow of the page later but more what I want to just what I want to show you is this a little bit of functionality of how you might act on one of these elements and the piece of functionality to piece of functionality to show you is the position function and the HTML function the HTML the position function applies absolute positioning to an element so I could like just stick this element over on top of the canvas or over here the HTML function deals with the content that's appearing so I could change the header from saying I am making it my favorite numbers to my favorite colors so these are the two pieces of functionality that I want to look at but we're missing kind of a crucial detail here when I say there's a position function in an HTML function what do I call it on well I want to call it on the object associated with that h1 element or the object associated with that paragraph element or the object associated with that canvas where is that object in the code I don't see it well here's a little secret for you it's not such a secret but something that I just didn't bother to mention before the create functions make an object an object that holds all the information about that element and allows you to execute functions on that element I'm just not using that object but I could make a variable called canvas I could make a variable called h1 and I could say canvas equals create canvas h1 equals the create element so what I'm doing here is I'm saying make that canvas and store all the information associated with that canvas in this particular variable make that h1 element and store all the information about that element in that h1 variable and where do you call position where do you call HTML you call it on that object so these aren't functions just like lying around for you to just say you've got to say something dot position something dot HTML now honestly I don't know if I'm doing such a good job with this probably this something dot style is a function that you ultimately will want to use them most but against style.css a little bit of a bigger topic we'll get to that later so let's look at these as two demonstrations and there's a lot of functions and a lot that we're going to have to look at in videos there's a lot more that we'll see as I get to future and future things so let's start with position so here I am I'm going to say canvas dot position and let's just say 0 0 and see what happens like where is 0 0 on the page look at that now this is sort of this is why absolute positioning can be kind of a bad idea like things are now like the other stuff is not I've got natural flow I don't know what that means but I've got like not match this a terrible war Jane's natural here but I've got the default flow of the page right of the things just sitting next to each other and then I have that I'm overriding that with absolute positioning by using the p5 position function to set the canvas exactly there now if the canvas one thing I could do here which I think it would be interesting is I could change from background to clear clear is a function that instead of drawing a color across the background clears that leaves it transparent hope this works and you can see now the canvas is actually sitting there but all of it is transparent except for the rectangle I drew so that's sort of interesting to see what kinds of strange experiments you might have if you have an HTML page with a big canvas as like an overlay on top of it so that's something you can see here the other thing I might do is I set the background to white and then I might set the and let's put it somewhere else let's put it off to the side at like whoops sorry let's put it at like 400 zero and then let's put this h1 element at 400 comma 100 and you can see here I'm going to take out the clear and I'm going to run this again and we can see here and now this is sort of hard to see what's going on so let me actually not make the background white but just like a kind of nice gray boy I don't really plan this very well and you can see like what's going on now I mean there's all sorts of craziness like this is the stuff that was in the HTML originally then I put the canvas over there let's move it down on the page that'll like be a little bit nicer like 500 pixels down and we'll put this at 600 to be in the middle so you can see like ah now I've got now I'm getting somewhere like this is the default flow of the HTML elements and then the absolute position this canvas and this other header down there what happens when I start clicking those other paragraphs are getting added without absolute positioning so they're up there so you can see there's a lot of possibilities here and how you can start like strangely arranging things on the page by letting things flow in the sort of document way versus absolutely positioning now there's two things that I want to mention here wait more than two but two that us around number one is this is interesting because the canvas is now positioned where the canvas is positioned at the coordinate 400-500 that pixel coordinate is the pixel coordinate of the entire page but remember the rectangle is that 100/100 that location is relative to the canvas itself so as you're moving the canvas around it still retains its own coordinate system so now there's two coordinate systems to think about if you using absolute positioning the coordinate system of the full-page and the coordinate system of the canvas only now let's do some things here - I'm going to leave this off for a second and I'm going to just reload the page like this you can see I've put the canvas down there on the bottom right let's look at one other piece of functionality which is the kind of lost - steam here a little bit but look at this HTML function so what do you do with that function that function changes the content of an element so let me come back over here and I'm going to add here in mouse press so what I'm going to do is I'm going to say I'm going to start this h1 element with just the text weighting and now I run it you can see I've got the HTML element the the one that I created the canvas down there now when I click mousepressed I'm going to say h1 HTML now I will show you my favorite number so when I create the element I give it default content or the starting content waiting when I click the mouse I change its content to this other text this is another thing that you can do to manipulate the elements on the fly so let me run this you can see it says waiting as soon as I click the mouse it changes to now I'll show you my favorite numbers and those other elements are added as well so these are two pieces of functionality that you can use you can use the position function - absolute position elements along the page kind of regardless of what the sort of what the default flow document flow of the page is and you can also use the HTML function to change a piece of content at a given time now there's a two more things I always say - that I'm thinking of here one is what if you wanted to change the content of up there I am making a video right well that's not an element that I made in my JavaScript so I don't have a reference to it right that element if you recall is just written in to the HTML file itself so there is a way to do that I'm leaving that for a later video right now in what you're able to do if you're just following these along exactly is you're you're going to want it the elements that you want to manipulate make those elements in JavaScript the elements that you don't need to manipulate leave those in the HTML and you're going to see that that line between those two things is going to get absolutely erased but sort of worth looking at for that's sort of a restriction in terms of what I've shown you so far the other thing that I think is worth noting is that remember there's an animation loop going on here for the canvas for example if I add var X equals 100 VAR y equals 100 and then I draw the rectangle at those locations and I say you know x equals x plus random negative 5 5 so now here in the draw loop you can see look there's an animation going on here where that canvas is animating but it's not just that the canvas is animation animating this draw loop is happening over and over and over and over and over again so let's look at something like kind of strange that I can do what if I said in here h1 position X comma Y now is that h1 going to appear where's that h1 going to appear is it going to appear on top of the rectangle right the rectangle is drawn at an X Y and the header h1 the thing is now drawn at the X Y they should be on top of each other no the answer is not true because remember Dom elements their position is relative to the entire page things you're drawing on the canvas are relative to just the canvas itself so that one element will be at 100 100 relative the top-left corner of the page the rectangle Braille to the top left corner of the canvas so let me run this again and you can see look at that waiting is now jiggling that text is now jiggling up there as well so in the same way that you apply variables to things that you draw on animate in the canvas you can apply those variables to things that you might want to move or animate or change on the page and so with that I'm going to stop this video now and then in the next video I want to look at events so binding events tying events to those Dom elements I think that's all the next thing on my list let me look here whatever I'll I'll figure it out what I get that I think that's what it is um but for you if you're looking for an exercise to do right now right first you add it stuff to the HTML page then you get made HTML elements in JavaScript now see if you can animate those Dom elements animate your canvas by using position or change the content what if you made Dom elements content a random number every frame or what if you displayed the XY location of something in your canvas as a text element on the page or paragraph element so those are some things you can try ok and stop		
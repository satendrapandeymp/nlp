if there's one thing that we've learned from working drafts it's that nothing is certain at first it looked as though no elements from HTML 4 would be deprecated something that caused a bit of a stir based on some of the rarely used legacy tags such as the font tag that have long ago seen their functionality be replaced by CSS using the font tag for example is a bad practice so the argument was why let it continue as usual it's never that simple one of the reasons that html5 won out over XHTML 2 is that it's designed to be backwards compatible XHTML 2.0 sought to enforce well-written code by using very harsh error handling if a page returned an error based on syntax the user agent was to stop parsing the page altogether the problem with this is the early versions of HTML didn't quantify error handling at all as such it was common for user agents to tolerate badly written code and still rendered the page so for years web designers developers and applications were able to get away with writing very poor HTML of course I'm not talking about you just all those other guys by suddenly requiring user agents to enforce these strict error handling rules millions of older web pages would suddenly stop working so that leaves us with a bit of a catch-22 html5 is written so that no document type definition is given it's just to be rendered as an HTML file because of this if browser still have to know what the font tag is and render it properly for older pages what's to stop somebody from using it well in short nothing to address this quandary html5 addresses its specifications to two audiences authors and user agents the specification clearly states that certain elements are not to be used deprecated if you will while instructing user agents to still support them for legacy files problem solved yeah well we'll see in the meantime here are the tags that are to be deprecated in html5 and that should not be used to author html5 content the base font big Center font s strike TT and you or underlined tags have all been removed due to their presentational nature chances are that you're currently performing all of these tasks through CSS so you'll probably never notice their absence however if you're still underlying code with the u element it is time to stop another set of tags will remove due to accessibility and usability concerns the frame frame set and no frame elements have been removed hopefully driving a stake into the heart of frame based layouts everywhere the acronym applet is index and directory elements have also been removed this was due to very low usage of the tags or in the case of the directory and applet other tags that best handle their functionality now for the most part you probably won't miss most of these elements a more noticeable change is the removal of several tag attributes for various reasons here are a few of the more notable ones the Rev and character set attributes have been removed from the link and a tags the image tag sees the long description and named attributes removed version has been removed from the HTML tag and in one of the most contentious removals the abbreviation attribute has been removed from the table header element and the scope attribute removed from the table data element presentational attributes have been stripped away as well some of the highlights include the align attribute being stripped from all block level elements the background attribute from the body tag the H space and V space attributes on the image tag and the type attribute from lists tables have really seen a great deal of change in regard to stripped attributes the background color attributes has been stripped from the table table data table row table header and body tags the border cell spacing and cell padding attributes from the table tag itself and the height and width attribute has been removed from the table data and table header tags also the vertical align attribute has been removed from table elements as well keep in mind that HTML 5 is a working draft many of these changes are still under debate and it remains to be seen if they will remain deprecated or if other current and attributes will join them		
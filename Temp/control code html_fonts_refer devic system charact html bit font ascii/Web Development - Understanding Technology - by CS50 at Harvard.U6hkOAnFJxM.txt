web-development so you know how the internet works and how there's all these computers on the internet somehow interconnected and they support protocols like TCP IP and there's wires and wireless and so we have that is to say an infrastructure bio which we can get data to and from computers or to and from clients and servers indeed that's the relationship we're gonna look at today when we look at web development the process of developing websites and keep in mind that the web is just one of many services that the internet supports today the Internet of course supports email and and video conferencing and all sorts of other applications but the web itself is one specific application or service that runs atop the Internet in other words into students that an Internet exists so that we can get data from point A to point B and on top of that then do we do we layer a whole bunch of functionality that allows us to click and browse and view information atop the Internet so let's consider the scenario at hand odds are if you're browsing their web you're using a web browser and on a desktop or laptop it might look a little something like this on a phone of course it might look a little smaller and web browsers can even be found on home console gaming consoles and the like these days but we'll assume that the essence of a web browser is something like this top the browser is a space to type in a an address or a URL or Uniform Resource locator and that's generally something that starts with HTTP colon slash slash or HTTP colon slash slash and then the address with a domain name of a website that you want to visit and odds are there's a back button maybe a forward but in a reload button and a few other features as well but what are you doing when you type in something like example.com or google.com or facebook.com or any number of other domain names into a web browser well you're sending a request from your computer be it a laptop desktop or phone from your device to some remote server point be so to speak and that servers purpose in life is to look at your request so to speak figure out what it is you want and then respond to that request accordingly recall in fact when we've sent requests on the internet for for cats like this one here we send some kind of request in a virtual envelope if and on the outside of that envelope was the address of the server but not the domain name like google.com but rather the IP address and a port number at TCP port number and then my return IP address as well and so inside of that envelope is some kind of request for a very specific resource like a cat and then in the envelope that comes back from the server from for instance Google Images is going to be the cat itself in the form of maybe one or two or three or more packets if everything has been fragmented and sequenced but what specifically is inside of this envelope and where is it coming from well what is a webserver for a server it's just a device that looks a little something like this odds are you don't have one of these in your home odds are if you have a computer at home or at work it's a more traditional laptop or desktop but this too is a computer this is a server it just happens to be kind of flat it's what's called a rack server and a rack server is just a server that has a CPU and a motherboard and RAM and hard drives and other devices as well and it just tends to be kind of squished down into either a 1.5 inch height or maybe a three inch height or some other multiple typically of 1.5 inches and it just slides into literally a rack and this is so that system administrators and companies more generally can squeeze a lot of these servers into one small footprint so you just stack one on top of the other like trays in a cafeteria and behind on the back of these servers are all sorts of ports into which you can connect wires and cables that can interconnect all of these devices indeed if your company are is running a web server odds are it doesn't have just one of these odds are it has one of many of these inside of a data center or some kind of perhaps more likely a wiring closet where you actually keep your devices but this might look this might be a particularly clean and fancy version and behind each of these doors is is tens of if not dozens of servers depending on their actual size so that's what a web server actually is but what is it that you're sending to any one of these web servers well you're sending a request inside of this envelope and you're sending a request very specifically for whatever resource it is you care about maybe it's today's news maybe it's some surf maybe is in fact that cat and the language in which this request is written inside of this envelope is going to be in a in what's called HTTP hypertext Transfer Protocol and this Transfer Protocol is really just a set of conventions recall that mandate how a computer speaks to another computer when it wants to request information off of the World Wide Web meanwhile if I want to request a cat specifically my request my instead look like this where I'm getting / cat jpg if that's indeed the name of the file name and by the way I speak HTTP version 1.1 so that's what's in the request that I sent to the server what is it that comes back from the server well odds are it contains a bunch of text and then the actual response of the message that are requested so specifically inside of the envelope that say comes back from Google if I'm requesting that particular image is gonna be a message that hopefully says HTTP slash 1.1 which is just a reiteration of the language or the protocol being spoken 200 okay where 200 means literally everything is ok here is satisfaction of your particular request so we actually never really see this message because it's inside of this envelope or kind of written on the inside in what are called HTTP headers little lines of text that the server adds to its envelope that's coming back to you that contains information like this so that the browser knows whether to show the remaining contents of the envelope or to actually display some kind of error message in fact there's a whole bunch of these so-called HTTP status codes that indicate whether the envelope you're getting back from a web server is indeed a successful response 200 ok is one you most never really see because it means all as well and so instead you would actually see the category salts or something else on the screen but you might also see a status code or at least your browser might that's number 301 or 302 and these indicate that your browser should actually redirect you to some other URL and we'll see that in a bit you might see 304 which means not modified this is actually a clever mechanism whereby a web server the same tie to save time and save bandwidth bytes it can actually respond to your request for that cat and say David you requested this cat just a little bit ago the cat it's not been modified I'm not gonna waste time sending it to you again you should check your cache in other words browsers will very often cache files keep copies of them after you've requested them so if you revisit that same webpage they don't have to waste time and bytes actually re requesting them and so the server can indicate you don't need to read request this file it's not in fact been modified meanwhile if something kind of goes wrong your browser might get back a 401 or 403 response which indicate that you're not authorized or you're forbidden from accessing the resource maybe you have to login by some mechanism or maybe you're just not allowed to access that file or directory' now odds are there's at least one on this list that all of us have seen all too often 404 not found you've ever wondered why your browser sometimes tells you this fairly cryptic number 404 that's just because the folks who designed HTTP this protocol decided sometime ago that the number 404 if a server sends it to a browser is like a numeric oh that just says whatever you requested is not found so I would get back that number inside of that envelope if cat dot JPEG did not exist on the server and therefore could not be found finally perhaps the worst of these is 500 internal server error this is not your fault so if you ever see this is not something you did it's something the programmer of the website did because he or she did not in fact implement the website correctly now there's any number of other responses that you might see some of them even a little more low-level than these but those in the worlds were programming or using api's application programming interfaces might actually see more status codes than these but these are perhaps the most common user facing ones that you and I might see when visiting a web site so what else is inside of this envelope in addition to those so-called HTTP headers those numeric codes with a few words that indicate exactly what the status of this envelope is what else ideally should be inside of this envelope well if it's a cat like cat dot JPEG it will literally be the bytes composing that JPEG a whole bunch of zeros and ones they can be opened in a browser or Photoshop or some other graphics program but if it's a request initially for a web page like Google's homepage or cnn.com or your Facebook newsfeed or even your Gmail inbox where you actually expect to see not just one thing but many things a lot of text a lot of graphics that is a more proper webpage well how is it that the web server goes about fitting all of that information in here well it turns out what's typically inside of these responses below the HTTP status code so to speak is this a language called HTML and HTML or hypertext markup language is it a programming language because it doesn't give us the ability to command the computer to do things it doesn't have what it's called control flow like loops and and conditions and variables and other such things it rather is a markup language in that literal sense whereby you can mark up data information in your web page and tell the browser really had to display it how to structure it how to format it so it's kind of like a formatting language not a programming language and here is perhaps the simplest web page that you might write in this language called HTML and even if you've never seen this before odds are your eyes can notice some patterns I see a whole bunch of angled brackets as they're called I see a whole bunch of closed angled brackets I see a lot of symmetry like I see two mentions of HTML two mentions of head two mentions of body plus this thing up here as well and I also see the repeated phrase hello world so if you want to guess you'd be right in thinking maybe this is a web page that quite simply says to the user hello world now why actually is that well turns out that a web page does follow this exact same standard format if you want to make a website for users or customers on the world wide web what does that mean you have to do well you have to actually implement the website by writing HTML like this and you can use most any program for this on Windows you can use notepad on Mac OS you can use TextEdit but the reality is those programs aren't really designed for making web pages so there's fancier programs still you can use programs like atom or sublime text or which are more sophisticated text editor and there's even more fancy programs that even hide a lot of these details from you and just let you click and drag and drop and create HTML without actually understanding it but our goal here is to Adid understand this underlying language but at the end of the day it's just text so so long as you have a program even Microsoft Word can you start to make webpages now you wouldn't use Microsoft Word necessarily since it's gonna save it typically in the wrong format but the point is all you need is a computer with a keyboard in some way of typing out text now let's consider what's going on here notice the symmetry I start the document first of all with this a document type declaration which is just kind of something you should copy and paste for now and it just indicates hey browser here comes a web page written in HTML version 5 aka HTML 5 which is the latest version of this particular language then below that is one of these open brackets as we'll call them the word HTML hypertext markup language then a space then Lang equals quote unquote en what is that well this is just an indication to the browser that the language the human language in which this page is going to be written is going to be en which is a universal code for English and there's two character or even three character codes for every spoken language in the world now here notice is open bracket head close bracket and then what I'll call the opposite of this open bracket slash head close bracket and so here's the first instance of some symmetry let's start thinking about this tag as meaning let's open the head of my web page let's think of this tag is closing the head of my web page or starting and stopping however you want to think about it but inside of the head of my web page is apparently going to be this a title Open bracket title close bracket then just some words hello world which could be anything and then Open bracket slash title close bracket which is the opposite of that open tag for title now notice that there's this nesting I started over here with HTML inside of and indented inside of that is head then inside of an indented inside of that is title and then just to be kind of neat about it I put the close title tag here on the same line turns out the browser won't particularly care but this was such a short phrase that I felt I would just do it on one line but I could have put the title on its own line and the clue Oh on its own line as well but more on those kinds of details in the bit and then that's it for the head now I encountered the so-called body of my page closed body inside of which is hello world with us again some indentation and then lastly closed HTML so notice the symmetry happens in the opposite order when you're closing the tags the first tag I opened so to speak is the last tag I closed and again notice the symmetry I don't just do one after the other and so I'm getting deed gonna start calling these things tags HTML is a tag based markup language where a tag is generally open bracket some word closed bracket but sometimes these tags have what we'll call attributes sort of configuration details that allow us to influence the behavior of a tag and this attribute length short for language equals en is a configuration of the body of the page so that the browser knows or rather the whole page so that the browser knows oh this HTML file is written in the human language known as English and so this way Chrome and Firefox and edge and other browsers don't necessarily have to infer from any of the text on the page what language it is because as you may have noticed browsers today might sometimes prompt you to translate English to French or Spanish or Japanese or some other language if they detect the web page is in some other language that you yourself might not speak so this is just making sure that the web browser knows exactly what language you intend for this page to be written in so that's it but what is this page actually going to look like in the end well let me go ahead and open up on my Mac a very simple program called TextEdit and I'm going to go ahead and literally right out this exact same webpage Open bracket exclamation point doc type HTML Open bracket HTML Lang equals English and then I'm going to get ahead of myself here just so I don't forget I'm gonna do Open bracket slash HTML to close that tag and then I'm gonna go inside of it and do what I recall being the head of the page and let me go ahead and preemptively close the head tag and now in here I recall there being title so hello world and now close title but again if I really wanted to I could put these tags on their own line but it's not gonna matter so I'm just gonna leave it a little tighter like that now pull over the head of my page was what the body so I'm gonna go ahead and open the body of my page close the body of my page and then just redundantly put hello world the sort of standard go-to message so that's it I did all I did was open up a text editor on my computer TextEdit on a Mac could be notepad.exe on Windows or any number of other programs I haven't yet saved it but the point is that this shall be a webpage I just need to save it so let me go ahead through file save let me go ahead and save it onto my desktop for instance as hello and notice on a Mac at least TextEdit is presumptuously trying to save it as text because that's all it is but I'm gonna go ahead and override that - dot HTML also common is dot HTM but more common is HTML and I'm gonna go ahead now and save the file now text that it's gonna be a little obnoxious and say you have used the extension dot HTML at the end of the name the standard extension is dot txt well here's where after taking a course like this you should know better than the computer and even though apples trying to help coax you toward a more common solution nope we want to use HTML now odds are notepad on windows won't prompt you in the same way but the point is that you understand better hopefully now what it is we're trying to do because you do want to save this as a webpage and it turns out that the standard file extension to use for a webpage is indeed going to be dot HTML and now all I'm gonna go would do is take a look at my desktop where I save this file and indeed there is a file called hello dot HTML I'm gonna go ahead and double click it and voila the most uninteresting web page you can imagine in fact let's zoom in on this just so we can see exactly what's going on and there's a few things of note so one notice in the top corner of my browser's tab is apparently the title of the webpage so this is how you can think of a web page it has both the head which is the very top of the page and then a body which is like 99% of the contents of a page typically so the head really is just this top part potentially which minimally for now just has a title the body of the web page meanwhile is down here and that is where all of my content is ultimately gonna go but for now my only content is hello world now up here you see kind of a funky URL doesn't start with HTTP or HTTPS because I've not yet put this file on a server like the server's we saw earlier rather this file literally lives on my own laptops desktop and so it's in my users folder Jay Harvard folder which is my username right now and it's desktop and the file is called hello dot HTML and curiously the URL starts with file colon slash slash slash which indicates that the file is indeed local to my computer so I've made a web page yes but I haven't made web I haven't put it on a web server so no one else on the Internet could actually access this web page unless they physically walk over to my Mac here and pull up this file but that's ok because there do exist web hosts as they're called and we can certainly go if we want and buy our own domain name ultimately and drag and drop these files into some server elsewhere in the world but for now we'll focus on just web development on a local computer and actually writing the code that drives them so that's the simplest of web pages so up until now we've been using TextEdit a super simple text editor for actually writing HTML but it's not all that designed for writing web pages and indeed as we saw when we tried to save the file it also didn't really understand what it was we're trying to do well it turns out there's better software out there still free that you can download on a Mac or PC or other operating systems and one such text editor as these things are called is called Adam and in fact if I go ahead and open up Adam after having downloaded and installed it on my Mac I'll actually see an interface quite like this that's a little more colorful certainly at first glance and it also allows me to hope in multiple files at once along the left-hand side here in fact for today I've prepared a number of examples in advance sort of a Julia Child style and indeed here is hello dot HTML pre written by me and opened in this other program called Adam now there's only one other change I made to it but you'll see the color is the most glaring difference at the moment but this isn't in the file itself and indeed if I open this hello dot HTML in my browser I wouldn't see any of these colors the colors are just here for me the human to better this English different features of this file for mothers so for instance all of my tags and angle brackets are apparently being displayed by Adam just on its own in blue all of my text like hello world in hello world are being displayed in grey and then in big green color are my attributes value so that they really jump out at me and now there's one other detail in this file that I didn't type up a moment ago and that's these lines here up top well turns out that HTML supports not just tags that we've been using to structure the page it also supports what are called comments and if you write Open bracket exclamation point - - and then some words and then the opposite of that which isn't really the opposite because we're missing the exclamation point but - - angle bracket you can actually put in your webpage a comment like this say hello it says hello to the world wide web and this is really just meant for you later on if you forget what this files for there is a sentence reminding you but more commonly is it used for colleagues you might have or other people who might look at your code your HTML code so that they to know what you intend for this webpage to do without there having to read through all of the actual code itself so this file would open up identically in a browser but of course it doesn't really do anything of interest all it does is display hello world and the whole web is about linking and clicking and nowadays dragging and going - all over the World Wide Web how do we take a step toward that kind of dynamism well let me go ahead and do this let me go ahead and create a new file and as before I'm gonna start this file with doctype HTML open bracket HTML close HTML let me have the head of the web page and then close the head of my web page and then my title which this time and notice among Adams features like a lot of text editors like it is to actually try to help you finish your fall and here it's prompting me do you mean title and indeed yes and I can let it auto complete a lot of the words I'm gonna type but for now I'm gonna do hello comma world closed title and indeed let it finish my thought for me now down here recalls the body of my webpage and I'm going to go had enclosed the body of my webpage and a moment ago recall we had hello world but this shall be our first example involving links so I'm gonna retitle this I don't want this page to say hello world I want it quite simply to say you link not all that interesting but the interesting parts gonna be down here suppose that I'm making a web page maybe for Harvard for their home page and I want to invite the users to visit Harvard on the web I might say something like visit Harvard on the web period now of course this is not all that interesting because indeed if I open this file in a browser I will just see this visit Harvard on the web and that is not all that interesting cuz what's your user gonna do odds are he or she know how he's gonna open up Google search for Harvard and pull up Harvard on the web but what if we can help lead our user there so let me actually go ahead and change this let me open up atom again and let me go ahead and change this to just say how bout visit Harvard and how do I make Harvard a link to some other destination well it turns out there are other tags besides these there's the anchor tag abbreviated a and that tag will actually create a link for us that looks a little something like this so start anchor tag close anchor tag again abbreviated is just a if I go back to the browser I don't see any difference yet indeed it still just says visit Harvard on the web but that's because I've changed and saved the file but I've not reloaded the browser so if I go ahead and chrome here and click reload and any browser that you might use similarly has a reload button somewhere and click reload indeed the page has now changed to match my text file but it's still not a link and so even though I've said put an anchor here I actually need to tell the browser where to anchor this text to so it turns out and you would only know this from of a class or reading a book or some online reference but the anchor tag takes a whole bunch of attributes and indeed Adams trying to complete my thought here for me and I'm actually going to go ahead and choose the second of the suggestions atria for Hyper reference and I'm going to go ahead and specify this equals quote unquote HTTP colon slash slash ww Harvard you slash save so now notice I still have a tag it's opened and it's closed and indeed it has an attribute now just as before so just for good measure let me go ahead now and make sure the world knows this is an English version of my page so now I have two attributes on the page the first of which modifies the HTML tag the second of which modifies the anchor tag and now this attribute has a hyper reference which is an actual URL and if I go and reload the browser now notice the perhaps familiar if dated blue text that's also underlined thereby signifying visually that this is now a link to some other page and sure enough and this is gonna be a little small to see if I hover over this with my cursor notice way down here do you see in your browser's left-hand corner most likely whether it's Chrome or any other the destination URL that clicking this link will lead you to let's try it three two one click and voila I'm now at Harvard's home page and indeed the URL has changed to be exactly that of course if I hit back I go back to where I was but I now have a web page that's still not on the internet it's still living only on my own Mac here but that doesn't mean we can't link to websites on the actual Internet just as we did but what's going on here it became purple that seems a little strange it was blue now it's purple what does that mean well this is a common default convention by browsers to just indicate to you the human that you've already visited this link so especially early on in the web when pages might just be formatted with bunches and bunches of links can get pretty tedious and pretty hard to remember which ones have you visited so search engines these days and even our own little web site might change the color of links to indicate visually to you which ones you've actually seen and it's the browser that's keeping track of those clicks so as an aside there's an interesting privacy implication there right the browser is now keeping track of what links you visited just so we can make them purple that means some other human potentially can come sit down at your computer and if you've not cleared your cache so to speak and and reset your browser odds are realize some of that information might still be accessible as well let's open another example and rather than type this one out from scratch let me go ahead and just open up image dot HTML an example I've put together here in advance now notice at the top there's kind of a spoiler this is grumpy cat and more academically this demonstrates images so indeed the web is filled with images on webpages not just text certainly so what do you notice that's different here with this example the comment up top is certainly different but the HTML tag seems the same the head is the same the title is a little different it's just as image but that's not really that interesting but there's two new things in the body one appears in dark gray to be another comment and that's just my attribution so that I and the rest of the world knows my citation for where I got what you're about to see and now notice below that this image tag Open bracket IMG so again the authors of the web were pretty succinct early on so just like we have a four anchor we have IMG for image you don't want to spell the whole thing out but you can still say image open bracket image alt equals grumpy cat more on that in a moment source equals cat jpg and then notice this curiosity slash closed bracket so whereas every other tag we've seen so far has an Open bracket some word closed bracket then some stuff then Open bracket slash that same word closed bracket this image tag seems to be empty in some sense it just hasn't a start tag but it kind of sort of has an end tag inside of it all in one and this is actually deliberate because unlike head and title and body which have the semantics of hey browser here comes my pages head hey browser here comes my pages title hey browser here comes my pages body all of which can eventually stop hey browser that's it for the title hey browser that's it for the head hey browser that's it for the body of my web page images are kind of there or not there it's not like you can say hey browser here comes in it's just gonna be there all at once or not at all there's no notion really of starting and stopping as there is with these other tags which might contain multiple pieces of information or multiple words or multiple characters so we're gonna go ahead and just for good measure close that image tag even though it's not strictly necessary by putting the slash inside of the open tag now you can perhaps guess that this is going to embed ultimately a cat whose file name is cat dot JPEG and that happens to be a file that I downloaded in advance from this URL here and then put it in the same folder as this file image dot HTML just by dragging it on my hard drive to where I intend for it to be in HTML I'm specifying now that the source of this image SRC short for source is going to be that file named cat jpg if that cat lived elsewhere I could put off the name of the folder it's in or folders then it's in if it's on the web itself I could put HTTP colon slash slash something and actually give a full path to it but I made a copy of this cat put it in my same folder so I can just cut describe it by its name all its meanwhile is a good thing for accessibility because for folks who might be visiting a webpage can't physically see the cat for lack of site they can at least using technology like screen readers which will actually read to them the words on the page we can describe to them an alternative version of this image that is literally grumpy cat so that that software can recite to them verbally grumpy cat so that even though they too will be disappointed in what they're seeing I'm visiting my super simple page they'll at least know what is there based on that alternative text so we can have both side by side so that we know what it is we're embedding here so spoiler let's take a look at a grumpy cat let me go ahead into my folder open up image dot HTML and voila there is a very grumpy cat staring back at probably very disappointed humans all right so we've seen now a whole bunch of basic tags like body and HTML and head and title and so forth we've seen a four anchor and we've seen image or IMG for images as well both of which have some requisite attributes what else can we do in HTML let's go ahead and look at this example here paragraph Stud HTML which has a whole bunch of seemingly not in text that I just whipped up and notice I've got three paragraphs of text both of all three of which are pretty long and so just like a book I formatted things pretty nicely by hitting Enter a couple of times and indenting so that it kind of reads like a chapter in a book so again this is paragraphs HTML but when I open this page I actually get this really long chunk of text and in fact given that it's in Latin or fake Latin like text here it's actually not clear where the paragraphs are supposed to be but I do know they're supposed to be three and yet this is just one big blob of text with no line breaks actually in there so a sanity check it turns out that most any browser allows you to view its source code in the browser itself you don't even need a text editor you can't change it this way but you can at least see it so generally you can right-click or control-click on a webpage and choose something like view page source which is going to show you the actual HTML so let's do that and sure enough here is chrome showing me the source code for this web page and you can see the nice indentation and the line breaks the fact that I have these gaps between lines here actually in the file and yet if we look back into the browser's actual rendering of the page all of those line breaks are being ignored so what's going on well hTML is a pretty literal language it is only going to do what you tell it to do or really the browser is only gonna do what hTML tells it to do so if I've not said hey browser put a paragraph here it's not gonna really know what I want because indeed we've seen this convention of humans like me having a lot of carriage returns or our new lines and files or a lot of indentation really just to keep the page pretty printed as I said nicely formatted so it's very human readable but computers don't care how neat your code actually is they just need to know top to bottom left to right what it is they need to do hey browser here comes web page hey browser here comes the head hey browser here comes the title they just need these instructions or commands in the form of HTML tags so it turns out that there are actually tags in HTML that allow us to address this problem we need to be more explicit with the browser and so indeed what I'm going to go headand do here is open a paragraph tag open bracket p and indent that and then i'm gonna go ahead and close the paragraph thereby signifying thats it browser for the paragraph then I'm gonna head open another one and indent that block of code inside of it really just to keep things neat and then I'm gonna go ahead and close this one then I'm going to go ahead and open one more indent this final paragraph and then down here I'm going to go ahead and close this and so even though the contents of the page haven't changed I still just have those exact three paragraphs and I still have some visual space between them now I have a more emphatic semantic command in the form of these P tags saying hey browser start a paragraph end a paragraph hey browser start a new paragraph in the paragraph and so forth so if I now go back to my browser and reload this same page now I get the three paragraphs that I actually intend so on the one hand hTML is very tolerant of whitespace and tabs and space and character tab characters in the life because that lends itself to readability of code but of course it complicates things in the sense that we have to be ever more careful to be super explicit with the browser to tell it what we want it to do now what about formatting I mean my god this page is still no more interesting than it was before well let me go ahead and open up an example I did make in advance as well called headings HTML this one doesn't have quite as many words but it does have more tags it has an h1 tag an h2 tag h3 h4 h5 and h6 which is heading 1 through heading 6 now it turns out browsers years ago just decided that they would have some standard tags for headings like the chapters in a page or the sections in a in a book or the subsections or the sub sub sections each of which it's generally still prominent and kind of bold typically by default but gets a little small order a little smaller and a little smaller and so indeed just to give you a sense of what these things look like here let me go ahead and open this up in a browser headings dot HTML and sure enough one two three four five six it's still bold and you still see all six of the words but they get smaller and smaller the idea being that these are generally going to be headers a top of text in like a book or chapters or the like so we have those now in our tool kit well else can we do it turns out if I open up lists dot HTML the browser's also support automated lists so if I want in unordered lists with just a whole bunch of bullets as this convention I can open up ul close brackets and then I can have a whole bunch of list items or Li tags list item foo bar and Baz where foo bar and Baz are just silly words the computer scientists tend to use when they need just a placeholder word like like an algebra you have x and y and z so then I close each of these list items I close the unordered list let's see what this looks like if I go ahead and open up in a browser list dot HTML I sure enough see fubar and bass but the browser has very nicely for me giving me three bullets but you know what unordered list kind of suggests that there should be other types of lists in the world like ordered lists and sure enough if I go back into my text editor and just change ul to o L and then resave my file go back to the browser reload the page can you guess what's probably gonna happen I've gone from an unordered list to an ordered list let me go ahead and hit reload aha the browser is taking care of the numbering for me so just a marginally nice feature but now one I don't have to think about because now it just does the numbering for me all right so what else might I do on a web page well let me go ahead and open up table dot HTML which looks a little more overwhelming at first glance now turns out that it's pretty common on the web to lay out data tabular ly with rows and columns like a spreadsheet well how do you go about doing that because that's seemingly such a complex layout well we can have in our body a table tag as it's called thankfully one tie another tag that actually says what it means TR damn it we're back to cryptic tags TR for table row just more succinct and writing table row TD table data and then down here close table row close tabled close table and inside of this a whole bunch of close table data's as well so what is this doing and how well if you think about what a table is it's a whole bunch of rows one after the other one atop the other on down table data is like columns or really cells in the page and so this says hey browser here comes a table hey browser here comes the first row in the table hey browser here's some data hey browser here's some data hey browser here's some data hey browser that's it for the first row so that's one two three pieces of data or really one two three columns or cells in that first row hey browser here comes a second row thought that thought hey browser here comes a third row thought that thought hey browser here comes a fourth row dot dot dot and notice I was careful to make sure that each of my rows has three table data so that everything lines up as intended and notice just for fun I put some numbers in the middle there plus an asterisk and then a zero and then a sharp sign and let me go ahead and open up now table dot HTML and voila you'll be very disappointed to see the simplest of telephone keypads that you might have on your your home phone or cell phone these days but it's laid out tabular Lee with everything neatly in rows and columns and that's just a single number but I can actually do something more interesting actually have words and phrases and more complexity still but my gosh this is still just so so underwhelming I mean we started off with just hello world we ramp things up and we gave ourselves a link to Harvard edu and then we ramp things up further with grumpy cat and then we kind of got into the weeds of some of these additional tags so we have more of a vocabulary now more tools in our toolkit but how do we actually start to make websites a little more dynamic where they can indeed take input from a user well for this let's first try to figure out how google.com itself works and then see if we can't reimplementation i'm at WWE girl calm and yet I'm not exactly there I made WWE Google calm via HTTP colon slash slash but I didn't type HTTP colon slash HTTP colon slash slash I didn't type www.google.com so what's actually going on there well it turns out that the World Wide Web does need to use fully formed URLs in order to bring you to the right place whether it starts with HTTP HTTPS or even file colon slash slash browsers today though in so far is they're pretty much used for browsing the world wide web take some liberties and so if you just type in google.com most browsers will assume that you want HTTP colon slash slash google.com because HTTP again is the protocol that your browser is gonna speak with that server as opposed to an email protocol or videoconferencing or chat protocol or something else the browser's just presumptuously but pretty reasonably by design and I'm assuming what protocol it is you want moreover some browsers are even helpful when it comes to this prefix WW which is still very common as the sub domain or host name for web sites so that they're not just Google com it's WWE Google com really just for branding purposes also for some technical purposes for some privacy purposes but really it's just convention for the most part for humans to start their websites with the prefix WW for world wide web but it's not strictly necessary but browsers will sometimes if google.com for instance didn't lead somewhere will presumptuously prepend WWF or you or the server itself will tell you mmm don't go to google calm calm so we can actually see all of this ambiguity in practice as follows here I have in this black and white window a so-called terminal window on my Mac and Windows and Linux and other operating systems have these two and I'm gonna run what's called the command line program just because it's enlightening here for our purposes called curl which is a program that really pretends to be a browser it pretends this it actually does send a textual message in one of those virtual envelopes to a server and it shows us what's coming back in raw form so it's not a browser there's no URL bar for me to type things into I can only type into this black and white window but it's going to let me send an envelope to a server and then get back a response envelope and see what's actually inside of it without actually rendering the web page so I'm gonna do this as follows let me go ahead and curl Google enter and you'll see that the following HTML came back and it's not even quite like what we've seen thus far it's actually all in capital letters which is actually a little dated right now but this is fine you'll notice that this is weird Google has moved 301 moved but recall that 301 was one of those status codes earlier that I said does mean that the browser should revisit some other URL and indeed we see this document has moved to WWE Google comm with an HTTP colon slash slash explicit prefix moreover let me do this let me rerun this command with a dash capital I command-line arguments this shows me not the body of the response but rather the HTTP headers so notice what's different this is what ultimately is inside of the envelope that that came back from Google that's ultimately what we care about but recall that also inside of these envelopes are one or more HTTP headers among which are the status code like 200 ok or 301 moved permanently as we see here so by rerunning this same command curl with - I I get to see really deep inside of the envelope like what all of these HTTP headers are - which humans don't normally see because they're really just meant for browsers but they do in seeing them help us understand what's going on so what are the headers that are coming back in Google's envelope well HTTP 1.1 301 moved permanently that's interesting Google is kind of packed up and gone elsewhere but where to a location so this second line is a second HTTP header that's tucked somewhere in that envelope for my browser and it says hey browser go to this URL instead don't just go to Google com go to WWE Google com using HTTP why just because Google says so their server has been configured by Google's employees to redirect users to the URL that has the W W just because probably partly for marketing reasons partly for technical reasons but that is what the server is saying there's other information there too the content type of this message is text slash HTML it happens to you something called utf-8 or Unicode in this case a superset of ascii happens to say the exact date and time that this request was sent out when the response expires indeed notice Google is telling us that we can keep this response in our memory in our computer's RAM for like a month and then you know don't ask me this question again for a month Google is gonna just keep saying the same thing and then there's some lower level technical more technical HTTP headers there that will wave our hands out for now but my browser might find those helpful all right so if Google is telling me that it literally moved permanently per the 301 status code and its new location is this URL here well let's go to that URL here let me go ahead and start over and do curl HTTP colon slash slash www.google.com/mapmaker actually be used with HTML and CSS in conjunction to create a web page but if I scroll up high enough you'll start to see eventually ah interesting you'll start to see some actual HTML in the page and indeed if I now rerun the same command but with - capital I so I get the headers notice ah this time it's 200 okay and the server has actually responded rather than redirecting me somewhere else altogether alright so that's what's deep inside of the envelope these HTTP headers let's go back now to a higher level to the actual browser that's making these requests and see what URL is being requested and what that very first get request is let me go ahead and search for my favorite cats enter and you'll notice at the top now the URL has changed to be a pretty long sequence of characters and honestly I don't even know what most of these characters mean or do it's really up to Google to understand that but I do know that I'm looking for cats and frankly sometimes when I get curious and try to start poking around on web sites I might just start tinkering to see if I can understand what's going on so I'm gonna go ahead and delete most of the URL I'm gonna go ahead and delete even more of the URL and distill it to just this here HTTP colon slash slash wwq Google com search and indeed it seems Chrome here has redirected me to HTTPS so they think in curtain connection is also sick and secure which we did not see with the command line version of curl so slash search question mark Q equals cats let me hit enter seems like the exact same search results so curiously even though Google upon searching for cats previously used a super long URL much of which I didn't understand looks like that's not strictly all necessary it looks like it is sufficient information to get search results on cats to just have a URL that looks like this now this is useful because I'm gonna use this information to make my own search engine let me go ahead and start in Adam let me go ahead and create a file that's ultimately called search dot HTML let me start it as usual with a doctype let me then start the body the web page itself with Open bracket HTML let me have a head up here and closed head and then in here a title and I'll go ahead and call this search just so I remember which page is which in here is gonna be my body and close body and now I need to introduce a new tag this one being in HTML form some kind of text boxes and maybe check boxes and buttons and radio buttons and the like that'll allow me to actually submit information from my page to Google's and I know from practice that form takes an action attribute which in this case it's gonna be I'm going to go out on a limb here and do Google wwo comm slash search and that's it and I'm gonna use the method called get it turns out that there are different types of requests you can make of web pages the default or perhaps most common is get and we've literally seen that keyword before here it's written in lowercase but in other context it's written in caps get me slash HTTP 1.1 was that earliest message we saw so here I see a iteration of using that method and this is in contrast with post and puts and patch and deletes that are also supported but not generally used by us humans in the same way inside of this form I'm gonna introduce one other tag called input I'm gonna give this input a name of Q and the type of this input is going to be text and that's it I'm gonna go ahead and open and close the tag all in one fell swoop because there's really gonna be nothing inside of this input by definition meanwhile and have one other input type this one's gonna be a submission type and its value or the label on it is gonna be just search so we've not seen some of these tags before but you can perhaps infer what's gonna happen here's a hey browser here comes a form hey browser give me an input of type text hey browser give me an input of type submit and this one by convention is gonna be a button so this would seem to give me what this would seem to give me if I open up search dot HTML wow I have to kind of look all the way up the top to see it a super simple text box a super simple search button and that's it but what's magical now about this example and by the fact because of the fact that I know a bit of HTML now notice what I can do I can go ahead and zoom out and search for cats and then click search and even though I've not implemented a database let alone a web server let alone a web search engine notice that I can just kind of punt that detail to Google and notice wallah so long as I send users to Google I can get them some cats and lest you think this is sort of uh pre-canned let me go ahead and try searching for not just cats but dogs and see if my same form works for other animals and indeed there is the most adorable dog that comes back as well and notice what's happening my web page which is just running on my Mac is written in HTML using an HTML form with an action attribute and a specific method and together the browser is using that HTML form is sufficient information to assemble the URL to which it's and send the user when you into that input text box and click that submit button indeed we end up at google.com slash search question mark Q equals dogs where the question mark means hey browser or rather hey server here come my HTTP parameters as they're called these keys and values a name like Q a key and a value like dog so Q my query equals dogs turns out you have multiple parameters so you might see ampersand sometimes as you did met have noticed earlier that before I deleted them but for our purposes today we just need this one parameter so we're not gonna focus on implementing an actual search engine for now we'll just assume that somewhat else we'll build that for us but let's see if we can't at least make our webpages a little prettier or at least paved the way for making our websites better designed how to do this let me go ahead and open up CSS 0 dot HTML this is now the first of a final series of examples that introduce another language still we've been focusing thus far on HTML hypertext markup language which is all of these tags and attributes and that allows us to structure our webpages and literally tag information on our web pages so that we know what goes where and how to display it but we've seen that browsers default styling is kind of lame it's just like black and white background in text it's a big and bold or small and bold for the headings and it's really not all that interesting I mean my god the font is like Times New Roman by default can't we do better well you can and indeed with modern web development do you have access to not just HTML but also a language called CSS cascading style sheets that allow you in a web page to kind of take the styling the last mile to take the structure from your web page and then tweak it that it looks prettier and it's laid out exactly as you want now how the browser is laying it out by default so how do we do this here is CSS 0 and you'll notice a few new tags header main and footer not to be confused with head which is the top part of the web page header is just semantically the top part of the body main is the main part of the body footer is the bottom most part of the body but we don't have to use these tags we can use other names as well that you might find in a reference or online resource but I have three parts of this page a header main and a footer the first of which says John Harvard second of which says welcome to my home page last of which is my copyright symbol just as a little footer on the page but notice what I've done I've added to each of those tags header main and footer a style attribute which we've not seen before and my style attribute has in green here a bunch of properties as we'll call them these properties are not technically HTML these properties are another language altogether thankfully still looks like English but notice the formatting it's another key value pair paradigm so we've seen in URLs that we have HTTP parameters like Q equals search our Q equals cats or Q equals dogs similarly in CSS not just HTTP if you have this notion of keys and values keys and values but the syntax is different this time we're going to use colons and semicolons to separate things so it turns out in the language called CSS there is a property called font - size after which we put colon after which we put the font size we want turns out that CSS this language supports small and and enlarge and a few other words as well or you can literally put like 16-point PT or 24 px for pixels and a few other measurement systems as well but I'm gonna go ahead and still leave it a little relative and just let the browser figure out what large is text - aligned colon Center is going to Center the text and I've separated these properties with semicolons and this last one is not strictly necessary but I put it there just in case I add any more later meanwhile the main part of my webpage should be medium font size also aligned in the center and then the footer of my webpage should be small also align center so if I go ahead and no and open up CSS 0 dot HTML let's look alright it's still pretty ugly but it's getting there it's now centered as I intend and this fonts a little bit bigger than this than this so it's kind of laid out hierarchically in that way but notice I didn't really do this in the best possible way looks like there's a lot of redundancy here the font size is varying to be sure but what is not varying like text-align:center text-align:center text-align:center that's kind of lame that I've just copied and pasted that all over the place when really I'm not leveraging the hierarchical nature of HTML here it turns out that cascading style sheets do cascade in a couple of different ways one you can actually have multiple CSS files eventually one of which will soon see that can override other such files and so forth but notice they also support some notion of hierarchy it turns out so if you want the header and the main and the footer tags all to be text-align:center well do they have a common ancestor so to speak if you think of a webpage really like a family tree where the roots of the tree is HTML and it has two children head and body and actually you know what we can see this consider this HTML here which was that simplest of web pages with which we began you can actually think of this as kind of like a family tree as follows if you think of the whole document as being this this node so to speak up here below which is the HTML tag or element as it's more generally called and that HTML element has two children head and body and their children in the sense that even though they're both inside of the HTML tag they're both at the same level head is kind of a long side body body is not inside of head and so we can draw them on the same level conceptually meanwhile the head of the page has a title child and the title tag has a hello world string inside of it meanwhile body has a tone string hello world and I've drawn these in different shapes here to convey that they're each a little bit different document is special it refers to the whole file but HTML head title and body are all HTML tags and then these ovals here hello world hello world are just text nodes and indeed this is what a computer scientist would call a tree not unlike a family tree and trees have nodes and in this case when a browser receives a web one of those virtual envelopes and reads it top to bottom left to right what it's really doing underneath the hood is thanks to programming code that web that programmers have written at companies like Google and Microsoft and others they are building up in the computer computer's memory or Ram a tree like data structure that looks if you were to draw it a little bit like this and so notice here that head is a child of HTML just as body is a child of HTML and title is a child of head in the same way so if we go back to the example at hand notice that header and main and footer in this slightly more involved example are all children of what element they're all inside of the same parent called body which suggests an opportunity to factor out so to speak the CSS property that's common to all of these and put it on their parent element so that it kind of cascades downward atop all of those elements and we can see that here this is CSS one dot HTML which is almost the same except it's a little narrower because I removed all of that text-align:center and put it where on the body in its own style tag so this is nice and indeed this is now what distinguishes one page from another being better or worse designed both of these are correct both of them achieve exactly the same goal but honestly this one's a little easier to maintain why because if I open up CSS one dot HTML as I might here you'll notice that I see a whole bunch of text in the center but if I want to go ahead and change that you know what I can just change it in one place to text-align:left reload the page and now it's all the way over on the Left if I go back into the editor and change it now to right reload the page that's what it sounds like when alignment changes on a web page it's now all the way over here on the right the key takeaway though is that I can just change it in one place instead of three places and surely this is a pretty simple web page there's not all that much content there but in actual web pages on the Internet is there many many men more lines of code and so these kinds of design decisions start to make even more sense and save even more time indeed let's consider now an alternative approach still a bad principle at hand here is this I am commingling my web pages content with the presentation thereof the aesthetics thereof and this in computer science and programming specifically it's generally frowned upon to have your data like John Harvard welcome to my home page the actual content you care about intermingled all in the same file let alone the same lines of code with the stylization of that data aligning things in the center making the font large or medium or small it's just a little sloppy plus it makes it harder to collaborate if you are really not good at web design the aesthetics of it but you can certainly make HTML and you can structure webpages and maybe you're a programmer who can generate HTML in some other language well if you want to collaborate with someone who's got a more of an artistic eye and he or she is happy to do all of your CSS and take you the website the final mile you just got to get it to him or her in some structural form well it would be nice frankly to put all of the CSS in one place so that he or she can work independently of you so that you're not literally changing the same lines of code so in CSS to dot HTML do we have a step toward that notice that I've replaced the style attribute in these lines here with a new attribute called class and class I've come up arbitrarily but kind of reasonably with three keywords large medium and small could have called it foo bar and Baz XY and Z but I'm choosing words that describe the kind of class that I want to apply to each of these HTML elements header main and footer indeed if I scroll up notice what's up here now instead of using style as an attribute a curiosity about the style attribute is that it also exists as a style tag and if you have a style tag it should go in the head of your webpage which is why I've scrolled up here and now notice I've done a few different things I have put a few keywords here centered large medium and small each of which I very deliberately started with a dot kind of looks like a typo but it's not turns out the convention in web development is to use a dot and in a word when you wanted to find your own class your own set of properties with which to stylize a webpage so I have arbitrarily but again pretty reasonably I think come up with some keywords centered large medium small and put dots in front of them so that those are classes that are now added to the browser's vocabulary specifically if I use the centered class it's gonna make whatever it's applied to text-align:center if I use the large class it's gonna make the font size of its contents large medium medium small small so I've kind of given myself new puzzle pieces of some sort new building blocks I can use to create a more well-designed web page because notice what I've done not just in those tags but even in the body I've now specified that the class of the body should be centered use all of the properties associated with centered the header should be class large use all of the properties associated with the class of large medium and small same thing so the end result frankly it's not all that surprising it looks exactly the same but it's better designed at this point because now my colleague for instance can isolate his or her work to just the top of the file while I work on the bottom but frankly even that feels like it's inviting some trouble and we don't have to do that indeed will soon see we can factor this out to a separate file but you know this can be done even more cleanly let me show you css3 dot HTML and oh my goodness notice what's happened now I've really whittled down my HTML code to its essence I'd argue this is much more readable now because it literally just says header main footer with no visual distractions of style attributes at all or class attributes at all my text in grey John Harvard welcome to my home page and so forth really jumps out at me and I'm just using fewer characters so beyond the readability of it just took a less work to write that out but what have I done differently well up atop notice this it turns out that while yes CSS and HTML do support classes I don't technically need them in this context right classes are especially useful for larger webpages where you're reusing styles and you want to give them name so that you can use them as ingredients to your own web page and even share those CSS classes or ingredients with other people but here I really just want to text-align:center the body of my page I want to make the font size large for the header the font size medium for main and the font size small for footer and so notice the absence of any periods before these words I can also specify actual tags or elements in my webpage by their name I don't need to go to the trouble of adding classes unless that would be helpful for me I can just distill it as this and modify the aesthetics of my webpage using just those selectors as they're called and indeed if I open up this css3 dot HTML you to looks identical but now I'm gonna take it one step final and further in CSS four dot HTML I have really pruned this file down to its essence and notice here that there's no mention even of the style tag up in the header of my webpage rather in the head of my web pages only the title as we've always seen and also a link tag which confusingly named has nothing to do with like blue links you might click in a web page those again are anchors but rather link href so the attribute is unfortunately named the exact same thing but href CSS four dot CSS which happens to be the name of the file in the same folder the relationship to which is that it's a style sheet and then I'm closing that tag so here notice that I am specifying in the head of my web page hey browser please link to this other file called CSS four dot CSS with which I have a relationship that is that of stylesheet that is to say hey browser my stylesheet is called CSS four dot CSS and what is in that file literally the same thing that was in the page a moment ago so I factored out all of those lines from my HTML file and just put them in there own which is useful for a few reasons one now my colleague can go off on his or her own and focus entirely on that file send me somehow the latest version eventually and we'll merge our work together but two if I want to use these same settings in multiple web pages if I want to make them freely available open-source software I can now isolate all of those properties those aesthetics to one file and share it with anyone else at my company or the world I can even have different themes in fact if you've ever used software or WordPress or any other kind of blogging software that lets you have standard functionality with your account but it also lets you change the aesthetics like maybe you have a green theme or a blue theme or a minimalist theme or a very a 3d theme or any number of different aesthetic changes those are generally implemented in the form of just different style sheets so a website like WordPress might have one of these if everyone has to use the same aesthetics or two of these or ten of these or any number or maybe they even let you make custom style sheets to configure your site or your blog to look exactly as you yourself intend and so using CSS can we do exactly that's kind of customization so at the end of the day web development is really about writing code it's code in a language called HTML hypertext markup language which is really about the structure of your web page what is the head what is the body and what goes inside of each but then there's CSS cascading style sheets that allow you to fine-tune the web page and really control the aesthetics and I've not really made the prettiest of websites here but it turns out now that you have these building blocks you know what a tag is you know what an attribute is and you've seen some examples there of you're really equipped to bootstrap yourself to learning all the more about web development on your own from any number of online resources or tutorials or books because now you just need to build out your vocabulary you just need to know what other tags exist what other attributes exist for those tags and then you're off and running indeed what's important ultimately is these concepts the fact that a web page is nothing more than a text file written in CSS and HTML and maybe some JavaScript still and that file while most of today lives on my own Mac could certainly be dragged and dropped or somehow uploaded to a server so that it lives not a file colon slash slash slash but at HTTP or HTTPS colon slash slash and in order to get my website on the Internet I just need to make sure I have one of those servers and most of us don't go out and buy big fancy rack servers let alone have our own data center rather we just sign up for free or we pay someone a few dollars a month a web host so to speak who does have data centers like that who does have servers like that and what they create for me is a username and a password and they give me really just a folder at the end of the day into which I can put all of my files dot HTML CSS JPEGs and others so that now I can put my my work of art on the Internet at a specific URL and if I go to the trouble - of buying a domain name for a few dollars a year or a few dollars every several years and I can figure that domain name to know about to point at that web post and the IP address or IP addresses thereof now can I have my own custom domain name so now I am truly out there on the World Wide Web so all it takes is these building blocks all it takes is an understanding of HTTP and how this runs the top of the Internet so that ultimately you can not only get some pages from the internet you yourself can put them there		
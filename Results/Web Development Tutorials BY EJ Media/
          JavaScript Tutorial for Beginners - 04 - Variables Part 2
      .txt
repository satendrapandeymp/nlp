we're going to continue on with talking about variables in JavaScript and I want to talk about the concept of a loosely typed language and mainly the differences between a loosely typed language and a strongly typed language now languages like Java and c-sharp are considered to be strongly typed languages javascript is considered to be a loosely typed language in terms of variables and the main difference is that you do not declare the data types of the variables explicitly in JavaScript so if we take a look at this example that I use in the previous video this is an integer obviously but we do not have to declare it here we simply type var for variable now if we look at this same example in Java we have to declare the data type which is an int if you don't put that in there you'll get a compile error but in JavaScript you do not have to identify the type before the variable so that's why it is considered a loosely typed language is it defined as an int when we assign a value now let's run this and we'll run it in chrome and of course we get the message 35 years old and that of course is from our alert function which adds both of these variables up and it says 35 years old now even goes farther than that in JavaScript you do not even need to put this variable keyword here we can actually remove that and Java will still assume that this is a variable when it sees the equal sign and the value that's assigned to it it'll actually make an assumption oh I didn't find the var keyword but this still must be a variable and to prove that let's run this again actually we'll save this and we'll run this again and we get the same result now even though you don't have to put the var keyword in front of your variable I do not recommend that you do that so we're going to put it back and the reason is it's considered bad form not to put the var keyword in front of the variable in JavaScript because for one it makes it hard to read the code you may be used to that but if you have somebody else that needs to read your code it will make it harder for the person trying to enter your code also it's not a good practice to have JavaScript assume that this is a variable in rare instances it can actually lead to some problems where JavaScript gets confused and this is not treated as a variable so again I would recommend that you put the VAR keyword in front of your variable even though as I said it is not necessarily required ok that's going to do it for this video I will see you guys in the next video		
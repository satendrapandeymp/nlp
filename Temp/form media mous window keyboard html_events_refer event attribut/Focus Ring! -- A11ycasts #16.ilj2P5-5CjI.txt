[Music] every day what's up is Rob Dustin welcome back to the allagash show today we're going to be talking about focus rings so the focus ring is the indicator the browser uses on an element to indicate if it has focus and to indicate if that element is about to receive keyboard events now the focus ring is really really really important for keyboard users because you can think of it kind of like their mouse pointer it's their way of knowing which element they're about to click on or interact with using something like the spacebar now the problem with the focus ring and where I see some developers kind of running afoul here is the focus ring is kind of displayed inconsistently in the browser I'm probably over here in my laptop and I'll show you what I mean by that so I've got a few elements on screen here I've got an input text field I've got a button I read another button that I've actually styled to look kind of fancy and I'll zoom in and you'll see that when I click on this input text field I see a focus outline I see a focus ring right there but when I click on this native button I see the active State but I don't see a focus ring drawn on top of it and so already you're seeing that the browser is kind of trying to be smart here and it's trying to sort of differentiate based on sort of a heuristic between different elements so when the user clicks on a button or they tap on a button the browser is going to say well this user is they kind of know what they just went over and clicked on and they know what they just interacted with so I don't need to draw focus ring in that case but for something like a like a text field it can be really really helpful to have that focus indicator especially if you're working on like a long form and maybe you look away for a bit and come back and you want to kind of see where your places in the form right so there's an underlying heuristic that the browser uses to differentiate between mouse and keyboard focus on different elements the problem though starts to happen again follow me over eat of my laptop when we have custom controls and custom elements so this button that I've styled this is still a native button element when I click on it now I see a focus indicator and that's based entirely on the fact that I sort of changed the the default browser styling it at this point now the browser says I guess I'm just going to draw a focus ring you'll also see this if you create a custom control you know you create your own drop-down or something like that and you give it a tab index so opting something into the tab order now when you click on it it's going to display a focus ring and this throws a lot of developers for a loop they'll be building a UI widget suddenly this ring starts appearing they're not quite sure what to do because for the mouse users out there it's a aesthetically unpleasing right it's not something they're used to seeing they might not like the way that it looks and so you might have your art director or somebody coming down and saying hey that thing looks weird just remove it okay and if you go over to stack overflow or something like that you just Google stack overflow remove blue-ringed and there's an endless amount of answers here where people say oh yeah when you see that thing just use the CSS style outline:none and that will get rid of the focus ring the problem is it gets rid of the focus ring for everybody including your keyboard users and this is the real issue really what we need is the ability to differentiate between mouse and keyboard focus for different elements and so we can have kind of two different experiences ensure focus ring so focus ring is a brand new CSS selector just part of the CSS level for selectors spec and show that to you here on my laptop and what focus ring does is it says the focus ring pseudo-class applies while an element matches the focus pseudo-class and the UA or the user-agent basically the browser determines via heuristics that the focus should be specifically indicated on that element typically by a focus ring so basically what this means is focus ring gives you the ability to opt into the same heuristics that the browser uses when they differentiate between mouse and keyboard users for things like inputs and buttons now as of today there are no browsers that ship the focus ring pseudo-class it jiya slanted in aspect very recently but there is a polyfill which you can take advantage of in your application so you get hub comm /wi cg / focus - ring here's a polyfill created by my teammate Alice Boxhall and our friend Brian Cardell focus ring polyfill is going to apply a focus ring class to elements that sort of match the heuristics and so that way you can say ah this element should definitely always draw a focus ring it has this class so you know I can put my own style on it or I can I can opt out of that I'm going to show you an example here I've already downloaded the polyfill I've got some HTML this is that same page that I showed you so can input I've got a button just as a little world and I've got another button with a clasp on it so it looks like kind of a nice big material design button and what I'm going to do is I'm going to start by including the script for focus ring J s and what that's going to do is it's going to here'll actually walk you through focus ring jst so you can kind of see how it works so inside the JavaScript for this class the first thing it does is it tries to set a flag to indicate if a keyboard action has just taken place then it sort of defines a white list of elements and these are elements which should always display the focus ring so for instance something like input type equals text regardless of if that was clicked on with a mouse or keyboard we're saying it should always draw a focus ring just like what the native browser does today but you'll notice that button is not in this white list so if someone clicks on a button it's not going to display the focus ring class and therefore we can turn off the outline for our mouse users but still display it for our keyboard users if we go down to the bottom we can see that this element is actually or this class is going through and adding some event listener so it adds a key down listener and when someone presses a key it sets that keyboard flag and this way it starts kind of a little keyboard throttle timer of about 100 milliseconds so at that point if anything else receives focus within that window we're going to assume the user is a keyboard user and we're going to apply the focus ring class to that element so over here on my index file I've included focus range a s and what we should expect to see is this input should have the focus training class this button should not because it's not in the white list and the other buttons should not because it is also not in the white list over in my CSS file because I can't just outright use you know the colons focus ring pseudo class just yet what apply still is going to make available to me is just a regular focus ring CSS class I can use a selector that looks like this so what I'm saying here is for any male element that it's focused that does not have a focus ring class on it go ahead and remove the outline so what that's saying is anything that a mouse user clicks on essentially we're going to not display the outline or anything that is not part of our white list we're going to not display the outline anything but isn't the white list or anything that has been interacted with the keyboard has a surface ring class we will display the outline okay so let's see how that works we will go back over to the application that we were working with before I will open up this div so you can kind of see our elements here and as I click on the input you'll note that it gets a focus ring class added to it and so it also gets the native focus ring indicator when I click on these buttons though no focus ring class and so now this fancy R button that I defined before is no longer displaying a focus ring however when I use my keyboard to navigate the page I hit tab I see a focus ring class on the input at tab I see it on the first button hit tab and I see it on that last button as well so now we've been able to differentiate between our mouse and keyboard users we can have the right experience for each modality I also want to point out that there is another library out there called what input this does a very similar thing to the the focus ring polyfill what input has been around for a little bit longer you can find that at 10 1 7 / what - input on github again there's a very similar thing to the - the focus ring polyfill it's been out there for a bit longer so maybe you know tried both see which one you prefer they have slightly different api's but definitely try and give you know one or both of these a shot in your application figure out which one you prefer and and make sure you're not just you know removing focus outlines throughout your app if that's going to create a really gnarly experience for your keyboard users that about covers it for today if you have any questions for me as always can leave them in the comments below or you can hit me up on a social network of your choosing as always thanks so much for watching and I'll see you next time [Music]		
hey this is Ralph and in this video I want to play around with some audio and video controls for html5 so I got a blank page setup as you can see with a headline one let's look at my editor here there we go so html5 doctype definition meta character encoding I've got a little bit of style just for color nothing fancy and I've simply got a headline one so let's get started here so with html5 there is an audio tag and you've got a couple ways you can use this you can have an audio tag and you can put a source attribute right inside of that if you're going to refer to one particular file however audio file formats gets spotty support from different browser so instead of putting my source attribute inside of my audio tag I'm going to do an opening and closing audio tag and in between my opening and closing audio tag I'm going to have a source tag with a source attribute and my first source attribute is going to be take the lead mp3 ok so that's simply it's a guitar riff it's really kind of cool though I got it from the site called incompetent let me show you that site real fast thing I still have it up here we go so it's incompetent calm and they got a section of royalty free music different kinds of background music different styles that are so i'm using take the lead here i downloaded it as an mp3 file and then i used an audio conversion program in order to convert it over to an OGG format so I've got two formats of the same track we go ahead and copy this so I've got the mp3 format and the OGG format and the reason I'm using two different audio formats here is because some aren't one is supported by some browsers the other ones supported by the other browsers for instance mp3 is supported by Chrome Safari and ie9 but it's not supported by Firefox and opera so Firefox and opera support the OGG format so what's going to happen is the browsers will go through this list of files until it finds the one that it can deal with and that'll take care of that so there's the basic audio to play now I'm going to add an attribute here called autoplay which I'm not a big fan of but test it out anyway so now I've got this autoplay attribute inside my audio tag so I've got this saved jump back over to my browser where is my browser there it is all the way down there back over here refresh okay and my music is playing so let me jump back over to my editor now take autoplay out save browser refresh now it's not auto playing but I need to be able to control it so I'm going to add the controls attribute there we go oops wrong button close that save refresh so now I've got some controls here and I can hit the play button I can see the countdown timer and I can even control mute okay oh by the way these controls are going to look a little different depending on the browser in question so got that taken care of what else can you do well you can also loop the music if you want to and we put autoplay back in refresh excellent I can advance to different parts there we go so that's a little bit about the audio control now video works very very similar ok so I'm going to do an opening and closing video tag and in between those I'm going to have a source attribute with a source I'm sorry source tag with a source attribute and let's see I've got several video formats here HTML basics is a video tutorial I made and normally when I make a tutorial or a video for youtube it's in an mp4 format so I've got that one but for today I've also got an OG v video format and a web M video formats Oh a few different video formats basic same concept mp4 works for Chrome Safari and I and ie9 but it doesn't work for Firefox and opera Oh GV is supported by Firefox and opera now the web in format that's the one that you know that YouTube is starting to experiment a little bit more with and web M is also supported by chrome and opera so but not firefox so once again I'm using different video formats here same reason I used audio formats so that way all the top browsers get something that they like and here we go so I've got that taken care of but i also want to put in some other stuff so i'm going to go to my video tag and i'm going to put in width equals 500 for 500 pixels wide and i'll put in height equals 280 that's a pretty good HD resolution there and give me some controls we've seen those before i'm gonna go ahead and save those jump back over to the browser refresh oops got that music auto-playing but otherwise here's my video and I've got the controls and I can play that video so let me see what else we can do in addition to putting in some controls you can also do a preload there we go so I can put a preload attribute inside of my opening video tag you won't notice much of a difference here by the way let me go take that autoplay out so that doesn't keep kicking on take out the autoplay there we go so video say back to the browser refresh and basically this will be better over over the internet but preload will start downloading the video as soon as the page loads up and it doesn't have to wait for the person to literally hit the play button so that's pretty cool now you'll notice to this video is just putting in the opening frame of the shot well there's another attribute we can put inside of this opening video tag I can put in poster equals and in the name of some image image file I've got poster dot PNG okay already saved to my computer so the poster attribute will display a thumbnail image for your video so let me minimize oops let me jump back over to my browser refresh there we go so now I've got a thumbnail for that particular video so is it really slick so we've got we've got the audio tag and we've got the video tag and of course this is getting us away from those olden days when we had to use in bed tags or even object tags so this is the new latest and greatest way to get audio and video and your page no need to use flash you can use some relatively popular audio and video file formats you might have to use a couple in the short term until support gets really wide across all browsers but they're really easy to use		
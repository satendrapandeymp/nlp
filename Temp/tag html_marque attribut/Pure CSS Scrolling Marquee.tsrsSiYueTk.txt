depending on how long you've been the developer for you may or may not remember the marque this was a marquee tag in HTML that allowed you to scroll text from one side of the screen to another side of the screen what we're going to be doing in this video is we're going to be rebuilding this effect but we're going to be using css3 animations to do this so this is what it looks like you can see this scrolling across the screen you can do it either way you can change the text size you can even scroll something that isn't text if you wanted to but let's take a look at how we build this very very simple effect so inside my text editor I have a document here and I've linked in a main dot CSS stylesheet which is located within a CSS folder so if you don't already have these files created and you don't have a document layout created and you are following along go ahead and do this okay so the first thing that we want to do is actually markup this so I'm going to create an h1 tag here this can be any block level element to be honest I'm going to give this a class of mark key so inside of here then I want a span now this will become obvious later basically the reason for this is we can't actually move this h1 from left to right reliably we have to have the h1 as the outer container and then the span inside will be the bit that moves just because we need some kind of wrapper for this to determine where it needs to scroll to them from so I'm going to say this is a marquee remember me okay so that's all of the mark-up that we need so at the moment on the page we get the following you can obviously go ahead and customize the text like I said a moment ago you can do whatever you want with this with your styles so in main dot CSS now let's star the marquee container and then we'll look at adding in the keyframes for this animation so we have a marquee like this and this is a just a class selector and we're going to set a width of this to 100% now this will happen anyway because it's a block level element if we just go ahead and inspect this you can see here that we've got 100% width if we remove that it pretty much does the same thing but if you're not using something that's a block level element you might want to define this and in that case if you are using something that's not a block level element like an anchor or something like that you're going to want to go ahead and say display:block in this case I don't need to do this but let's include that property anyway so the next thing we want to do is we want to say white-space:nowrap that just means that we don't wrap the text on to the next line that's really important because we want this to scroll off the screen and then back in now more importantly what we also want to do is say overflow:hidden we don't want anything outside of this container to be shown so for example you were scrolling this maybe within a smaller container you know that even if you did if you did get any overflow or something you know came out of that container it would be hidden so now that we've got the marquee in place we need to decide how we're going to animate this and we're going to animate the actual span itself like I said inside of this element so let's say Marquis span so the span within the Marquis you could of course if this is a class name and apply that to this element but we'll just sort of tie this down to a span for now so now what we want to do is we want to display this as in line block now this is text but we want to basically treat it as a block level element so it's an inline block now what we're also going to do is we're going to set the padding on the left to 100% and this might seem a little bit odd but let's check out what this does and there we go we can see it's disappeared the reason that has disappeared is because we have padding that's pushing this away sorry on the span element is pushing this away so for example I was to reduce this to 20% you can see where we're going with this that's this is 20% this is 60% a hundred percent obviously pushes that so it's invisible so now we can actually animate this to go to the left and then it would look like it's scrolling and then if we repeat the animation that means that we just get this or infinite scrolling effect so we need to define the keyframes for our animation to easing css3 animations here obviously not supported everywhere so do be careful about how you do use this for reliability and what I'm only going to be demonstrating this with the WebKit vendor prefix you're going to want to include other vendor prefixes check out website like can I use just to see which ones you do need or and you also want to provide the non prefix version as well but for simplicity I'm just going to go with the WebKit prefix so we start this CSS rule with an app and then we use the WebKit then the prefix here so WebKit keyframes and then we give it a name after here so I'm going to call this scroll now if it wasn't been the prefixed you would obviously just get rid of this so if you were doing this for all browsers you would do something like the following so you'd say keyframes up here you would do maybe Mars for Mozilla but like I said I'm just going to use WebKit for simplicity but go ahead and test this out on other browsers just to make sure it works so we're going to be using is something a little bit strange we're going to using the WebKit transform property or the transform CSS transform property or if it's a vendor prefix with WebKit and we're going to be using the translate transform so a little bit about animations with CSS we give a percentage here and basically this means the the points in which it animates so for example if I was to do naught percent and then 10 percent and then 20 percent I will enter my CSS rules in here and that would at 10 percent do something different at 20 percent do something different in this case all we're doing is we're scrolling from right to left so we just need 0 to 100% if you want to do something fancy in the middle of this you could do so for 0% we're going to say WebKit transform so the CSS transform property and we're going to translate this so translate basically just move something around so let's take a look at how this actually does work so on the CSS property at the moment for this animation the animation hasn't taken place because we've not provided the WebKit animation or the animation property and telling it which animation to use but if I just do a little bit testing on here so I'm going to say WebKit transform and I'm going to translate like this and let's at first I'm going to choose zero zero so this is how the animation is going to start at the end what happens if I give a percentage for this first value here now that needs to be minus because we're bringing this back on itself so minus ten here all we're doing is translating the element which is basically just moving its position so here we're - in this if we were to do the same on this so minus 50% you can imagine that that would move up and down within the element it's in so within its container but we obviously want that one to stay at zero and we want to end up with the translate property here on the x-axis to be a hundred percent and that if we just reduce that sneaked out to the left there so we know that we want to start at zero and then what we want to do is we want to translate this to be minus 100% on the x axis so now what we can do is apply the animation to this span at the moment it's not working because we've got our animation up here defined but we need to say to this span will use this scroll animation that we created here so we say WebKit animate again you would have to use different vendor prefixes and then include a non prefix version as well so WebKit animate we choose the name of the animation the second is the time it takes for the animation to complete in this case I'm going to choose five seconds you can also choose a millisecond value as well in this case that will be too quick or you can also do 0.5 seconds like that or omit the zero so five seconds we want to loop infinitely so we say infinite like so if you want this to only loop say once you would just choose one here or any other number and then we want this to be a linear animation we don't want it to ease in and out you can choose something like ease in out for example but we'll just have linear you can go ahead and play around with those though so now when we refresh that oops let's change this to animation not animate and there we go so now we've got this going from 0% to 100% in its animation and it's it's it's restarting itself over and over again because we have infinite set it's linear and we're using that scroll animation here that starts translating at zero and ends with minus hundred on the x-axis so for example if you did want to use something like ease in out you could do and you'll notice the change here it sort of eases in and then as it gets to the end it just slows down that very little bit so you know you can play around with these things but basically that is how we create properly a marquee with css3 animations		
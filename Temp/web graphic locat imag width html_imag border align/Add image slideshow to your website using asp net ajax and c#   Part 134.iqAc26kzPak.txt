this part 134 of asp.net tutorial in this video we'll discuss adding image slideshow to your website using asp.net Ajax and c-sharp so this is what we want to achieve notice that I have this images folder which has got few images we want to display one image at a time on a wave form in an image control and the image that is displayed within this image control should be changed automatically every one second and that should happen without user having to post the page back to the server let's see how to achieve this obviously the first step here is to create an asp.net web application project which I have already done so here we have a new asp.net web application project I just named it image slideshow all I have done so far is created a new asp.net web application project okay and the next step is to add images folder to the project this folder is going to store the images that we want to display within the image control so let's go ahead and add images folder okay but for the purposes of this demo we're going to make use of the pictures that are shipped with Microsoft operating system and to get to those pictures click on the start button type pictures and then click on this link on this pictures link this should take you to library pictures where you should find sample pictures folder double click on that so there we go we have all the sample pictures that are shipped with the Microsoft operating system and if you notice the path is this one sequel and users public pictures sample pictures the same as what you see here ok so I'm going to copy these pictures and then I have already pasted them into images folder which is in my C Drive and then I have renamed these pictures to use you know numbers in sequence 1 dot jpg 2 dot jpg to 8 dot jpg so these are the original names of the images but I have renamed them to use numbers in sequence in a bit you will understand why we will have to rename them alright and then what I'm going to do I'm going to copy the and then paste them into the images folder so now you know the solution Explorer in our project is very much similar to what we have you know in this image here okay so the next step is to drag-and-drop script manager control onto the waveform you can find the script manager control under Ajax extensions within the toolbox so we need to drag and drop this onto this waveform but first of all let's get rid of this default content that's already there on this default dot aspx waveform okay so at the moment when we navigate to this you know it displays the default content but we don't want all this content so let's go ahead and get rid of this content from there and then let's drag and drop the script manager control onto the waveform now if you're wondering why you be using the script manager control this is one of the ajax extensions control now if we have to take advantage of asp.net Ajax extend Ajax then we need to have an instance of this control on that webform in a later video session we'll discuss more about the script manager control okay so the next step is to actually use the update panel but we'll come back to that in just a bit now we're going to drag and drop a timer control and an image control and in a bet you'll understand you know what we are going to do with those two controls now let me first a drag and drop this timer control which you can find again under Ajax extensions and then I'm going to drag and drop and image control because that's the control which we which we are going to use to display the image so there we go we have an image control and a timer control now this timer control let's flip this waveform to the design mode and this timer control if you get to the properties notice that there is an interval property now this interval property is basically in milliseconds look at the help here the duration between tick events in milliseconds so basically if I set this interval property for example to 1000 then every this is this interval is in Melissa so 1,000 milliseconds is equal to one second so every one second this control is going to raise an event called tick even just like how a button control has a click event timer control has got this tick event and this event is raised whenever this duration has elapsed so what's our requirement we want the image that is displayed within the image control to be changed every one second and for that to happen we have to post the waveform back to the server and when it gets posted back that's when we have to write the logic to change the image there so but the user shouldn't be posting the page back to the server we want that to happen automatically so this timer control is what is going to you know post the webform back to the server every one second okay and since we have specified thousand milliseconds here you know the stick event is going to be raised every thousand milliseconds that is every one second okay so the next step is to actually generate the event handler for the tick event so here we have the tick event we can either double click on here or we can double click on this control itself since the tick event is the default event for this time of control you know an even handler will get Auto generated for us okay now what we are going to do here we are going to write logic to change the image dynamically you know that's being displayed within our image control so what we want to do is we want to create an instance of a random class and let's call it R and so this random class has got a function called next you know which is going to generate a random number for us now notice the image names that we have we have images from 1 to 8 now we want to display an image within the image control at random okay every one second so I'm going to tell this random object to generate a random number between 1 and 8 for us okay so the minimum I'm going to use an overloaded version in a way we can specify the minimum random number that we want to generate and the maximum random number so the minimum is going to go on and the maximum is going to be eight so that's what we are going to specify here and then let's store it in a variable of type integer okay so if you look at the return type of this function it's an integer because it's a random integer okay and then what we are going to do here is obviously we have an image control and the idea of the image control is image one so we want to set the image URL property of this image control and we are going to do that so image one dot image URL is equal to now where are our images present they are present in this images directory which is present within the root directory of our web application project so to get to the root directory you still symbol for slash images forward slash we need to specify the name of the image so which image you want to display in a one two three now that's determined by this variable I so to this string I'm going to concatenate you know the value of Phi which will be the one two three four and then to that the extension of the image what is the extension of the image dot jpg so let's concatenate that okay so now if you look at this expression right here and it's going to give the path for the image that we are going to display within the image control okay now you might have understood the reasoning behind changing the names you know to use numbers in sequence because you know we want a random number and then you know the name of the image is going to match one of these random numbers that is generated that's the reason why we will have to use these numbers instead of these names okay all right so we have those images there and then you know basically look at this with this with all these changes if I go ahead and run this actually when the web form is first displayed you'll notice that it's not going to display any image so basically look at that you know you didn't notice that but when i refresh this page first one second notice that it then display anything so first of all as soon as the images waveform is loaded we want an image to be displayed so first let's go ahead and fix that so obviously in the page load event you know we need to invoke this logic so what I'm going to do I'm going to extract this into its own method so I'm going to reflect refactor this extract a method let's call the set image URL so we want that as the function name so and we want to call this function even in the page load so if it is the first initial get request so if not is post back so let's call this image function so that the first time when the waveform is loaded you know it immediately will display an image and then on the subsequent time this event gets raised every one second at which point it's going to load the image okay so let's run this so notice that as soon as the waveform loads it will display an image there okay now the problem is here the image size is too big we want we don't want you know this big image to be displayed let's say I want the image height and width to be 200 pixels so how do we adjust that simply go back to your default page and then set the height and width for the image so height is equal to 200 pixels and width is also going to be 200 pixels so depending on your project requirement you can adjust the height and width and the moment we do that look at that the image gets changed every one second but then notice that the problem here is that the screen flickers look at that you can see that there is a post back and then basically you notice that here you know the entire page is posted back to the server and the server sends the response for the entire webform back that's why you have a screen flicker there so here we are actually doing a complete a full page post back instead of that let's do a partial Paige postback I don't want to post you know the entire platform instead I just want to post back you know this portion because every time we post the waveform and come back only this portion needs to be updated okay so I just want to do a partial page post back in which case you know only this piece of content will be posted to the server the wave form does its processing and only the HTML you know corresponding to that region will be sent back as the response okay let's see how to achieve partial page post backs to achieve that we can use something called update panel so let's close all these windows so within each X extensions we have something called update panel so let's a drag and drop this update panel onto this platform so this update panel helps us achieve partial page postback so this control allows us to perform partial page post backs as opposed to a full page post back now the responsiveness of a page can be significantly increased using partial page postbag as only the data that is relevant to the update panel is sent to the server the server does its processing and only the corresponding data the corresponding data you know as far as the update panel is concerned that is sent back to the client so as a result of this the responsiveness of the page can be significantly increased and another greatest benefit of partial page post bacc is that you know they avoid screen flickers which are very common with full-page post bacc we have just clean scene you know how the page the wave form basically flickers on every post bacc let's see how we can avoid that using this update panel okay so you know we can put this timer and image controls within that update panel but then we can with an update panel we need to have something called content templates so all the content of the update panel must go inside that content template and there is something else called you know triggers which we will discuss in a later video session so let's format this HTML by pressing ctrl K ctrl D alright let's save all this and let's navigate to that default page now we should have a partial page post back and there should be no screen flickers look at that you know you don't have any screen flickers only this portion of the waveform is updated now this is happening every one second if you want that to be changed all you need to do is change the interval here now its thousand milliseconds which is one second if you want the image to be changed maybe every 100 milliseconds then you can change it to hundred but then you know look at the speed at which the image gets changed and obviously we don't want to do something like that let's say I want to change the interval to two seconds we can do that as well so now they made here is changed every two seconds alright now at the moment the problem with this code that we have written is that it displays a random image every 1 second now the images are not being displayed in sequence okay they are being displayed at random now let's save our project requirement is such that we want to display images in order that is from one dot jpg to do next - dot jpg next three dot jpg until eight dot jpg once it reaches number eight we again want to start from one so but always it has to display the images in order and also we want to display the number of the image that is being displayed so that we know the images are being displayed in order let's see how to fix these in our next video session on this slide you can find the sources face p.net C sharp and secrets of interview questions that's it for today thank you for listening have a great day		
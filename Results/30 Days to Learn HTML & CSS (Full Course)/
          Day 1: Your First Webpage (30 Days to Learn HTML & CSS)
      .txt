as you'll find with most programming languages whether it be HTML or CSS or JavaScript or PHP many of these you probably never heard of it's very traditional when learning them to do the first obligatory hello world example and this means we're going to find a way to get the words hello world typically on the page meaning within a web browser we want to see hello world to show that we are up and running and we can do that without using any tools other than maybe a simple editor even something like notepad or text that it will work just fine so if you are on Windows open notepad I want to Mac so I will search for TextEdit and open that up now TextEdit is traditionally for writing Word documents whether you're writing a story or a letter but it can also be used for a variety of things including creating HTML pages so we will use this for the first example and then I'm going to explain to you why you do not want to do this for your actual coding but let's go ahead and get hello world in a browser so to start we're not even going to use any kind of markup we're going to type hello world and then I will go to file and save it and we want to save it as an HTML page so rather than using the default RTF or txt extension we need to specify that this page should be rendered as HTML next I'm going to save it as index and this is pretty traditional to specify the default page so save that to the desktop and now you can see that we have this new file so if I would like to view this in the browser I can either open a browser like Chrome and I can go file open choose that file or in some os's like Mac I can take the file and drag it into the browser and you'll see that it works like so and it looks like I have hello world I so let's make our first edit I will come back and change that from hello world I to an exclamation point I will save that by pressing command S or you can go to file save and if we refresh we've made our first edit now notice we haven't added any true HTML here we've just added some words but nonetheless it's still showing up in the browser how is that and that's because even though it's not HTML the browser will make some assumptions and when you have hello world it's smart enough to know that you simply want to display text on the page that said this is something you will never ever do in your projects you want to use structured markup using HTML so let's do it the right way the very first step is we need to specify a doctype now I don't want this to confuse you I will go ahead and add it doctype HTML now what this does is it instructs the browser what version of the markup language is currently being used now if this looks confusing to you'll be surprised that years ago it was a long string because we had very different versions whether the strict version or a more flexible version now I don't want you to worry about this too much just know it's a way to instruct the browser as to the version of the markup language you're using don't let that confuse you though next let's bring up the text just a bit so I will bring that up to 18 like so next we need to specify where our HTML is and we can create HTML tags by doing it like so now note that we have this opening bracket or less than sign and then we have the name of the tag and then we close it out so if we just had it like this we could add some text but the problem is the browser will not know when you are finished with this particular tag so it will assume for as long as the document is this text will be within the HTML element or attack you can use those interchangeably so we should specify when we are finished with attack and we can do that by typing the same thing again but the only difference being before the actual name you do a forward slash and that way we designate that we are closing that tag off so now I'm going to remove this because you don't traditionally put text within an HTML tag the next step is we need to provide a couple details about the page itself for example let's open up chrome again and I want you to note if we go to a site like net touch do you notice that the title right up here within the tab says web development tutorials how do you specify that and that can be done within the head section of a page so let's do that now I'm going to create head and now we are going to specify what the title of our page is so I'm going to hit tab a couple times and we use as you might expect a title element and I will say my first website next remember if we simply hit enter and start typing again the browser is going to assume that all of this is part of the title element but it's not so we need to make sure that we close this off so that browser understands that only this text should be part of the title next we should specify the character type and again I don't want this to confuse you so I will go ahead and add this in and this is again another way to instruct the browser how to render specific characters because it will be different from country to country now I want you to know this looks a little bit different how come we have this forward slash at the end well let's dissect this first just like title we have a meta element or tag but next we need to provide some attributes of the tag and we can do that by doing the name of the attribute followed by an equal sign then within quotation marks we paste in the value so we could say name equals value attribute name attribute value now what's this forward slash right here well while we could do something like this you'll find that when there is not any text meant to be placed in between a tag it's very common to what we call self close the tag which means if there's never going to be anything here we can simply copy this forward slash put it at the ends and then remove it which saves us a little bit of space and what you'll find is most developers prefer to add a space right after that last equal sign however do note that this is optional years ago it was considered a best practice always close your tags but with HTML 5 which we'll learn a little bit more in the school course it's actually just okay to do it like so so whether or not you want to close it many developers have gotten into the habit of it they feel more comfortable doing so that's fine but if you'd like to leave it off that's fine too there's no right or wrong in this example so now we have an element with an attribute name of char set or car set and the value is utf-8 and again I don't want you to worry about this right now it'll just make sure that your symbols are rendered correctly so now we're done with the head section but remember we have to close that off so I will do forward slash head next we want to display that hello world but we don't do it like this instead it's traditional that you wrap the text the body of your page within an element called body so I will type that now and once again I have to specify the end of the body of my page so right at the bottom I will close that out like so so let's save that I'm going to go to file save and now let's reload the page so this time because the browser is open I can take the file and simply drag it in like so now we'll see that strangely it seems that our tag names are being displayed on the page in the same way that hello world was but certainly with the page we don't want to see these tag names and that's because with in TextEdit it's still being treated as actual text actual formatted text so I will go to format make plain text and then I will go to file save a version and notice how it's defaulted to txt so let's come back and change that to HTML and try to view it in the browser and now you can see that has changed so yes that is a little bit odd and that's because text edit is making assumptions and assuming that you want formatted text when you really want simple HTML so now you see only what was contained within the body element if you'd like to get to the mark-up that we created we can go to view developer view source now note within each browser this will be slightly different but you should be able to find it if you hunt around the menu bar and now if I load the source you can see this is exactly what we typed we specified the doctype which tells the browser what version it is we've specified where our HTML is next we've specified the head section now I want you to note if we come back it says my first website and that's coming specifically from the title elements next we specify the meta Carson don't worry about that too much right now and then we add our first hello world which is displayed on the page and this is good formatting this is the formatting that a pro would use it's nice clean we're following best practices so good job pat yourself on the back you just build your first web page doesn't do much just yet but you'll get there so in the next lesson I'm going to start showing you how to format this text		
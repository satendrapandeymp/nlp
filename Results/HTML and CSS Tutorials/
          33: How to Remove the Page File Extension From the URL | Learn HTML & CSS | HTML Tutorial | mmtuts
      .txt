how's it going everyone welcome back to next episode on how to create HTML and CSS now this episode a lot of you requested me to show you how to create a URL rewrite for a website which means that if you were to go to for example a mature Stinnett forward slash gallery dot HTML then instead it should say image which that net force last gallery without the extension behind it so that's what we're going to do in this episode and before I do that there are three things that I want to mention before I show you how to actually do it now if this is not the first time did you try to do this and you just want to see how it's done the new more than welcome to jump to the timestamp at the bottom here and see how it's done but again like I said if this is your first time doing this I really recommend you to hear what I have to say before you get into the how to actually do it so the first thing I want to mention is the fact that we will be going into our htaccess file inside our server now if you don't know what that htaccess file is i briefed you talked about in the previous episode but just in case anyone jumped into this course in the middle of it and didn't see the previous episode I will show how to create the htaccess file which is really easy to do so there's there's nothing to worry about there now the second thing I want to mention is the fact that I will explain every single bit of code that we're going to write inside the htaccess file and the reason I'm saying this is because I have a habit of searching on YouTube and on Google to see how many tutors exist already on the topic that I'm going to create for my next lesson on this channel here and when it came to creating a UL rewrite which we're going to do in this episode there is a lot of people who show you how to do it but they just tell you to copy paste the code into the 80s 5 without actually explaining what exactly does and I'm not sitting here saying that my lesson is going to be better than anyone elses I just want to say that at least to me it's very important when people watch a lesson or tutorial that you don't just show them you know how to do it but you also explain why you do a certain thing to do especially in this case since we're going to be messing around with an htaccess file for our website which is the server configuration file mean that if you make a mistake then your website is going to go down until you fix the mistake so it's very important to understand what it is you're inserting into the htaccess file now the last thing I want to mention before we get into this episode is the fact that the code that you're going to write it's going to look slightly different than most other people on the internet and I'm not saying that because I have a special way of writing it I'm saying that because if you were to go on the internet on YouTube or Google and search for how to do this then everyone has a different way of doing it for some reason and I'm saying this because a note is going to be people going to the comment field of this video and ask me why didn't I write in this way and again that way might work as well but the way I'm going to do it in this episode is in the most simple way I know possible so it's not going to be overly complicated so now that I said all this let's actually go and get started on the actual lesson now the first thing we're going to do is we're going to go ahead and first of all see the website I have in front of me here which is going to be the website that I'm going to make changes to so right now forward to go to my cases page up in the top right corner you can see that it says cases that HTML inside the URL now I wanted to say just cases without anything behind it so what I'm going to do is I'm going to go ahead and go inside my editor and I'm going to open up my index page and I did actually open my online version of the index page inside my editor so if I make any changes to it and save it it's going to upload it directly to my server just in case you had questions about that so if I were to go inside my index page and go down to where I have my link that says cases that HTML which is going to be the page that's going to open up I'm going to delete dot HTML behind it and my keyboard wouldn't react when I click the lead on it but it's ok now so I just want to say that you only need to have the page name inside the links inside your document so right now as you can see if I want to link to my cases that HTML page we only want to have cases inside the link name the extension we're going to grab and do something with later on inside the htaccess file so don't worry about that for now before change everything inside this document here and change all the extensions and remove them I just want to test out if this cases page link is going to work so I'm going to upload my new index page to my online server and then we're going to go and create a new document which is going to be the HT access page we need to have inside our root folder inside our online version of the website so I'm going to save this file and I'm just going to go ahead and save it as on my desktop for example which is here and I'm going to go ahead and save it as dot eight t-axis and that's it I'm just gonna replace the one I have here already and that's it don't call it anything else you don't have to call a file dot ATT axis because it's very important that you call it specifically punctuation HC axes and that's it otherwise it's not gonna work inside the HT Access file we can create code that is going to run on our server before it loads the website so the htaccess file is going to be a configuration file for your server we can write all sorts of things like showing a aro page a specific era page inside the website if they try to access a page the one looking for like I showed you in the previous episode or you can create the URL rewrite which we're going to create in this episode here so the first thing we're going to do inside the HT access page is we're going to go ahead and turn on this rewrite function which we call mod on the school rewrite so we're just going to go ahead and create a comment the way we do that inside the HT access files by creating a hashtag symbol then inside the hashtag we're gonna go ahead and say mod underscore rewrites um starts here to give you some kind of comments just so we know exactly what it does inside this document here then what we're going to do is we're going to go and create the code that will actually start the rewrite function and we do that by writing rewrite engine setting it to on now it's very important that you write this with the same uppercase letters as I do so rewrite is going to be with a big capitalized R and a capitalized EE otherwise it's not gonna work now the next thing we're going to do is we're going to write a bunch of conditions and a rule that is going to take care of this URL rewrite that we're trying to do here now it's very important for me to point out that the rule is the thing that actually changes what we see inside the website even though when we go to internet for / cases without the extension that it still shows the content from the cases that HTML page inside this link now the conditions is some think that has to be true in order for the rule to actually run and this is very important to have otherwise you might end up getting errors when we try to do this inside our website so you first create a bunch of conditions that has to be true and if they are then we can create the rule or then we have to run the rule inside the website if that makes sense now the first condition inside the htaccess file is going to make sure that if you have a folder called the same name as the document we're trying to access then it's not going to make an error because if I were to have a folder inside my website like I have here a folder called Emerson video inside my website if I were to have a folder called cases then it's going to give us an error because I'm trying to access the cases folder when I just write cases inside the UL and we don't want to have an error here so it's important to be write a comment that says I do actually have a comment over here I can go ahead and copy paste because I have notes on the side here um just soft rapid does not apply existing directories meaning that if the Foley exists in the server then we don't change anything and don't run the rule which comes later so and the way we do that the way we actually create this condition because remember this is just a comment is by actually writing rewrites hunt with a big R in the Big C then we want to say percentage curly brackets and inside the curly bracket we want to write request file name so we're going to check if the requested file name it's the same thing as one of the folders inside our directory so we're going to say - D which stands for directory now I want to make sure this is not true in order for to continue so I'm going to say exclamation mark directory which means that it's not going to be the same as one of the directories okay so if this is true then I want to continue with a new condition now the second condition is going to say that if the file we're trying to show inside the website doesn't exist then it's not going to run the rule so if we have cases inside the UL and we don't have cases dot HTML inside the server then is going to ignore this script here so I'm going to say that we want to check for file in the rectory with dot HTML extension like so and we're going to go and write the next condition here so I'm going to say rewrites cont with the D and then I want to make sure that we request the file name that isn't a directory but instead a actual file so I'm going to say we want to do the same thing percent it's curly brackets requests underscore file name and then we want to say space which is going to be a file now we do need to tell it what needs to be part of the file name so right now we have the file name which right now is cases inside our URL and it has to have a dot HTML extension behind it and we do that by saying we want to have a forward slash how do I create that on my keyboard forward slash had to cut there because I didn't know how to create a forward slash on my new keyboard here a forward slash and then we need to tell it dot HTML so we get the file name which is cases and then we need to add dot HTML behind it if that exists inside our directory or inside our website then it's going to continue to the rule that is going to run okay so now what we're going to do is we're going to create a rule there's a bunch of things include it inside the rule that I'm going to write that I have to explain that we haven't talked about yet which is something you typically see inside PHP or JavaScript or something like that but I'm gonna do my best to try and explain what exactly is going on inside the rule in a way that you can understand it if you haven't done these sort of things before so we're going to write the actor rule now there's a couple of comments I want to put in here so the first comment is going to be here we actually show the page that has the dot HTML extension okay let's just go and keep that come there for now if there's any other comments that will include it later and the rule is going to be written by us writing rewrites rule now the first thing we need to write inside the rule is going to be something called a regular expression now a regular expression it's not something we talked about before so in case you're interested in learning about it I do have a episode of my PHP course talking about it so if you want to learn more about it you can go ahead and watch that episode but I'm gonna go and try to do my best to explain what exactly the regular expression does when I start writing it here so the first thing I'm going to write this this upwards arrow which I'm not sure what is called in English but I will go ahead and copy this code and paste it inside the description of this video so you can copy the simple if you can't find any keyboard so this basically means anything before whatever condition I'm about to write now so I have a pair parentheses to group together a type of condition that has to be part of the search term they were trying to get here so inside the parentheses I want to say I want to allow anything which is set by a punctuation and I want to say multiply which means that anything and then anything repeated after that I will allow and then I'm going to end off the regular expression with a dollar sign so we're saying to want to grab the URL and allow any characters inside the URL which we grab because right now we just mm to that net force last cases I want to grab everything from the UL and not disallow any special characters anything I want to allow everything inside the URL and then I want to say I want to grab the result from this regular expression here by saying dollar sign 1 and then I want to tell it what I want to add behind what I grabbed from the UL which is everything so I want to add dot HTML behind the result we got from grabbing the UL and again just to explain what exactly we did here because this may seem a bit confusing what we did was we went ahead and said we want to grab the entire URL if these conditions up here are true and if they're true then we still want to show the UL as it is but the content on the page is going to be shown from the document we have called the same name l dot html' so that's what we're doing here now there's a couple more things I want to want to add at the end here which is a couple of conditions that also has to be true regarding the rule here which is the fact that I don't want it to matter if there's any uppercase letters are not inside the UL so if it were to go to let's say I'll go inside my website and I go to cases that HTML if I have cases with a capitalized a then I don't want it to matter inside the UL so the way we do that is by writing brackets afterwards and let me say in C which stands for it means non case which I had to look at my notes because it could remember it but it basically means that the letters inside the UL can be uppercase and lowercase and does really matter so the next condition here I want to write by saying comma is something called a Big L well it's not called a Big L but it means that the conditions we have before this specific rule are only going to be applied to this specific rule down here so if we at a later point below create other conditions and rules then these conditions are not going to account for the next rule would create later on in document in case that's something we want to do so again this is something that's optional but it's something I recommend it include inside your file here now I just want to find a couple of things out regarding what we're doing here but before we do that as you probably go ahead and test this out inside the browser to make sure it actually works so I'm gonna go ahead and upload my file here to my server so I'm gonna go and go to my desktop and I'm just gonna go and grab the file and paste it inside the server here so I'm just gonna drag and drop it in the main director of my website and then I'm gonna go and go inside my website go back to the front page and when I click cases it's going to show mm to that net force last cases but it's going to accidentally show the content of cases that HTML inside the page even though we have cases inside the UL so when I click cases as you can see it says internet forward slash cases but we have the actual constant we want to have inside the website so this is how we can do this specific thing one thing I want to add at the end here which is something I know I'm going get comments about in the comment area which is the fact that right now the URL says internet forward slash cases without a forge less in front of it now I noticed a lot of people online saying that it should have a forward slash in front of the link inside the URL and I just want to point out that I did go to Google and Google webmasters that says that it's very rare that a forward slash in front of the link does actually matter inside a website so if you're one of the people that worried about not having a forward slash in front of the link then don't worry about it because it's not really going to matter in majority of cases so that's it that's pretty much wanted to show you in this episode so hope you all enjoyed I'll see you next time [Music] you		
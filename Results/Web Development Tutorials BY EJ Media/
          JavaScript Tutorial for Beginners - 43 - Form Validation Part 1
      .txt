in this video we're going to cover form validation in JavaScript now you might recognize some of this code I am actually using the same code that we used in my series on CSS so we're not going to go over how that works in terms of creating these forms and how the styling of these forms work I covered that again in my CSS series so if you want to learn how to do that you will want to go watch my CSS series but what we are going to do is create the JavaScript to validate these forms now one point I want to make is that you should never use JavaScript alone to validate your forms you should use both JavaScript and either ASP or PHP to do server-side validation so you actually want to do both you want to do client-side validation with JavaScript and server-side validation with either PHP or ASP and we will cover that side the server side in one of my other series on ASP and PHP now think of JavaScript validation as sort of a way of being nice to your users in other words you are preventing mistakes from being submitted to the server that way the form doesn't have to make a round-trip to the server and then get validated there and then have to come back to the user where they have to fill it out again you want to stop it before it's submitted to make sure they fill out the form correctly before it is submitted to the server now in terms of the server this is where we would specify where to submit the form to now again we're not going to do server-side validation in this series so we're just going to submit it to an HTML this little message HTML that I've created and you will want to create this web page and place that in the same folder as our JavaScript and our index.html so it should look something like this we should have all four of these files in the same folder and as usual I will put all the code in the description of this video so again that's what this action attribute does now this method attribute has a couple different values one is post and one is get post submits the completed webform to be processed by our server and again in this case it's just going to our message HTML but that's what posts does you can also do a get but we'll talk more about that in the series on ASP and PHP and then of course we have our on submit event a new event that we're introducing to this series and this is the event that will submit the form so when we click on our button down here this submit button this event will get triggered and it will submit this entire form and of course right now we're going to call a validate textbox function which I created now right now that's empty and let's actually go ahead and just run this before we even fill that out and we'll hit submit and there you can see our message HTML came back and said your form has been submitted and that's because nothing has been validated right we can put anything in this form that we want well let's go back to that for a second and what we want to do now is ensure that the user puts in at least one character in this textbox so they have to fill in something we don't want an empty form submitted so we're actually going to prevent the user from submitting an empty form right now nothing's being stopped but we're going to stop it with JavaScript code so let's go over to the JavaScript code and here you can see we've got our validate text box function and so we'll start to fill this out now the first thing we need to do let's flip back to the code is we need to get ahold of the textbox that we're going to validate now we're only going to validate against one text box in this video now we'll do multiple text boxes in the next few videos but in this case we're just going to go ahead and work against this first text box in which the user will put in their name so remember we have to get ahold of that text box and we're going to use the ID and we've been using this many times the get element by ID method so I'll go ahead and copy and paste this code in here so we're going to create a variable called box and again we're going to use the document object we'll use the get element by ID we're going to use the ID of name which of course equates to right here that first text box so we got ahold of that now what we need to do of course is create our if statement where we're going to go ahead and check the value in the text box so I'll go ahead and copy and paste the first line here and actually you know what I ever had the closing bracket down here so that's good so what we're doing here's our if statement we're going to use our box object and here's what we're going to use the value property this will get us the that's inside of our textbox and what we're saying here is is this equal to null that's what this is right here we are saying no so what we're saying here basically is if the value of the textbox is equal to null then this condition is true that's the first thing I want to say and we'll talk more about that in a little bit but that's what we're saying null is true and I'll go ahead and copy and paste a second line here and what we're going to do is if this is true we're going to send an alert to the user and say the field marked in red cannot be blank so they have to at least put one character in for this to be false right so this seems a little bit strange doesn't it that we're saying hey we want this to be true and then if it's true this code will execute and this actually is the code that's going to stop the form from being submitted so that is a little bit weird isn't it we're saying hey if this is null then here's where we're going to stop it it doesn't seem like it should be the other way around again it's a little bit strange and again if the user enters one character this will be false and none of the code in here will be executed to stop the form from being submitted and of course the form will be submitted so now let's go ahead and save this up and let's go ahead and run this now so we'll go ahead and run this and there we've got our form now I'm just going to go ahead and minimize this here I want to actually do a split screen here so we'll flip over to the actually let's minimize this - now we'll do a split screen scenario here and there we go okay we've got this arrange nice and neat and let's actually pull this over a little bit more here okay good there we go okay and so let's flip back to our JavaScript code so what's going to happen here is I'm going to go ahead and put in one character so now this is going to test out to be false right this is no longer no it'll be false and so we should not hit this alert so let's hit submit and yeah the form was submitted good but now let's go ahead and get rid of that character and we'll hit submit and there you can see we got our alert it says the field marked in ed cannot be blank there's an okay button here now that's good right this tested out to be null there was a null in this first text box and then of course since this is true now our code within our if statement will be executed to stop this from being submitted and the first thing that happened of course is we got the alert so if we hit okay to that the form was still submitted now you might be asking well why was that why did that happen and the answer to that is we didn't stop the form still from being submitted yes this box came up but the alert in itself is not going to stop the form from being submitted this code executed and it was submitted to message HTML so we need to stop this form from being submitted and the way we do that is to use a return statement so we're going to type in return and then we're going to say false and by the way this return keyword here this is a boolean it can only be true or false if we say false that means that the on submit will be interrupted it will be stopped that will actually stop the on submit so that's what we do now that might seem a little bit strange that we're putting false in here but it doesn't equate to the if statement itself you know whether this is true or false all that stuff this is just a line by itself that we're saying hey return false and stop the on submit from submitting the form and so that's what we're doing there now we're not done yet we actually have to hook this up to our event on our HTML page so we need to actually put in the return keyword here and then this will be synced up with our JavaScript code and so let's go ahead and rerun this and so now if I hit the submit form and I haven't put any characters in here it should now stop us and how will we know that well we won't get this message dot HTML it will just stay on this index dot HTML won't go to here so let's hit submit and we hit OK and there you can see it stayed on the same page it stopped us so that's how this works so again now our function is actually stopping the on submit from submitting the form because of this return false we are returning false and the function is therefore able to stop this on submit from happening now let's go ahead and put in one character and if we hit submit this should work now right and it did because it came here and this of course tested out to be false isn't that strange this has to be false and then because it's false there's nothing to stop the form now from being submitted there is no return false that only gets executed if the condition is true while the condition is false now because our form was not null so because it's false then it gets submitted and so it seems a little bit strange like I said okay in the next video we're actually going to add another condition to check the address box so we're going to do multiple conditions and that involves using a logical operator so we'll talk about that in the next video		
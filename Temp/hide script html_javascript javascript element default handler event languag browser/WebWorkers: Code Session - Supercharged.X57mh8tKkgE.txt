it is Thursday it is 2:30 p.m. UTC it is time for supercharged hi i'm Surma I am medical and we are gonna do some wet burgers let's go so webworkers usually on supercharged we do more like bleeding-edge technology things that only work in Chrome Canary with like the web platforms like enabled but today with rapper course we're actually using something that has been around for years yeah and many browser I think even easily explore a multiple version have support for web workers so you can follow along and whatever browser you are today and that's new so Mariko welcome I'm very happy to have you here thank you before we dive in into code I think we should make sure that everybody like I'm not sure everybody knows what a web broker really is yes and even I'm not sure if I know the right definition of it why can you maybe bring us all oh okay cool sure should I do the picture if you want to so what would you describe with Volker if you were if somebody asked you like mine I would basically say it's a a actual second threat for JavaScript like proper parallelism in JavaScript and then you have some very simple ways to communicate with your original main thread as it rolled right so this one I had that explanation given to me and I was like what do you mean thread do the single thread exactly that's what already confuses people like yeah yeah so what I so I discovered what Volker when I was trying to make the very similar app that we were gonna try to make today ah and I wanted to make your performant and I discovered a book where and I was like what does that even mean it was like a leave you confusing so I pictured it for you I drew a picture you are known on the hood for drawing explanations of things I'm very happy that supercharged gets to enjoy these drawings of yours as well so imagine that your browser or the planet or if something you might know when the garbage collection is you know that's the garbage they schedule this garbage collection you know all the elements on the true planet because HCM element the web worker you can think of it something like Internet International Space Station okay it's something that you create from the browser the planet browser you launch it I like planet browser out of the world it's outside of the planet blauser but then from planet browser you send the data to do all kinds of scientific explanation like exploration that happens so they can do a lot of tasks but because it is outside of the planet browser they cannot touch the elements on the thing so in the web worker it makes little sense it does not have a lot of it does not have access to window object if it's not have access to document object basically you cannot do anything that touches what's on the screen but you can do a lot of JavaScript true and if we're gonna use today yes and so this was the first explanation probably of many to come because we are interesting some new concepts but if you have any questions new people watching us live in the chat ask them because I will be monitoring the chat or the hash tag supercharged on Twitter or my mentions on Twitter and I'll try to forward them to Mariko because she's the expert in all these things and she will hopefully answer your questions even if they are about coconuts Jake thank you for making sure that people believe us that this is actually live so um where should I start I'm sorry he Jake said in the chat that I should send thing about coconuts to prove that this is life oh yeah somebody who doesn't know Jake is our colleague live stream with me two months ago three months ago about serviceworker who would have thought okay so as I explained in order to like utilize web worker you kind of have to have like a lot of JavaScript to do like something that is not changing the visual or like a making of Dom element it's a lot of JavaScript so I have a plan for today that kind of thought up so like what if we so I know Matt did last supercharged it like a maze processing yeah but I don't know how to speak with GL but I know how to do to teach on this so what if we do a lot of our image processing in 2d canvas right and you do basically like image filters do a lot of using the bits thing and then that involves a lot of the bits thing nice thing yeah if you don't know what you're talking about I recommend you watch the previous live stream after we're done like watch us first then watch the other one because we have many live streams on this channel which you also should subscribe to so here's here's the very simple diagram what's in my head okay gonna build yeah I'm gonna have an input button that opens up the file dialog okay like I want to edit this image right that is loaded into the screen and a win dick that gets loaded into screen it does something let's say like it's kind of a getting stuck on filter right like yeah you know let's make it like a black-and-white or like you know any image processing yeah we sprayed it on the screen because I suspect that doing those filter thing hmm involves a lot of computation and yeah maybe it's a good example to put it into workers so let's get into first making that application before even we talked about yeah let's go alright so I have index.html and I start a simple server that is serving that file select okay and just they just see like you know I'm not lying let's say hi and then if I load it it just shows up as a hi so that's working so when I would you say we're done see you next time supercharged or you're even on brand that's so good so as I mentioned I need to have input button so in fact we have the first question for you on the chat what do you use to draw your diagrams I use iPad there you go pencil okay they do they care about the app that I use there's like a bunch of app that I can recommend later if you like once to do it yeah speaking of follow Mariko on Twitter as well yeah if you get one more have more drawings that's the place to go we have the link in the description cool so when you have an input for element you can specify what kind of input it is and in this case we're going to use file and then when you were doing the file input you can also specify what kind of file this input except yo accept and this time we want to only deal with emails like you don't want user to accidentally know Jason files on file or something interesting lol are everywhere like let's like you know do that so image helps image and then let's say star so that like in PNG JPEG bitmap anything except it I'm just cool all they do is the mind type not the file extension right okay ID because people said someone brought up that we are missing some meta tags in the header it is a good opportunity to mention this is my production ready code this is only supposed to work on Mariko screen just now it's more about the concept right she's gonna use yeah I explained to you you can then later on go to our repository on github grab the code and add all the meta headers that you want pr's welcome that's a good good that's a good PR for PR exactly so choose file or some things right so if I have that wool I should have four okay and let's meet all this file and then I have a filing bit that's right now it's very small so make it bigger yeah if I click it the folder I got dialog opens up and then I can select it image okay and then open it but and then the right house nothing happens right now why would it you haven't written anything nothing you're in there so let's before dive into it so do you have this thing where like you start doing this and then like unless you style it somewhat nicely you can't really move because like your motivation is not know I'm the exact the way around like I hate making my things pretty I just want to get the core functionality done and then give hand it off to someone else as you can see I'm a visual person you don't say the person who draws in Twitter I mean I'm not like no way they get design or anything but like I'm definitely drawn to like visual like a shiny thing so let me just styled it quick yeah go for it I mean I'm just gonna style a flatmate I'm you can take questions or oh I guess I can actually first of all I have a question for you Oh a question for me from I really want to have a ID selector on my CSS yes this keyboard does not seem to hover ah so you are actually usually in the New York office yes not here in London with me she just came over to visit specifically for this livestream specifically for this livestream so she's not used to UK keyboard shift and three is the combination for weight oh that one a flock ah there we go I'm sure oh the in the American people you have a separate key for the hashtag right uh well the where the British Pound signed is it is already listed as a Palin I see just I mean pound about like pound demeaning like a hashtag not our currency words are confusing all right keep styling styling um I wanted to quickly answer Tim's questions on the chat on the video as well because it is interesting we have been talking about modules on the chrome dev summit pretty much recently it's been on the top of the topic list for many frameworks switching over to modules or supporting modules and since we're using gonna use workers today it's probably important to mention that no browser yet has support for workers and for modules in workers the syntax has been specified how to load a module in a worker but no browser actually implemented it that's something that I guess all those have on the roadmap but I'm also assuming it's not a very high priority for most browsers because very few people actually use workers which is what I'm hoping to change with this live stream so maybe after this we can exert some more pressure on the browser people to speed the process up it so we have some more colors yes I never use the e/m type maybe I should use it more yeah that looks good so what I did was I hidden the like a default input button and then I made the label part as a quick of all huh that's a good old trick it yeah you have to be careful with accessibility on this one so I I prepared for this I know this thing I do front-end develop you go and explain this so right now if I tap it I can't get to the input element which should be able to because it is input element yeah and big but the one that is focusing input element is basically there with Stowers overflow here and that's a completely hidden and it's just a displays you know yeah taking over practically invisible right so I need to put a focus to this element so okay uh also when the input element is focused you're gonna change the style of the label tricky because a lot of people do is actually a display:none the input field and that is very bad for accessibility because then it becomes non focusable for people who use screen readers so this one is a different trick where you make it invisible by giving it a zero by zero size and then making sure the styles are propagated from the input field to the actual so I kind of cheated because I couldn't remember the order of like pixel thing but let's see if this works so if I tub it yes nice and then pop out so now I can select this so now I can see this is selected enter and then follow cool and then select it so cool now we have something something to sort ways and that's pretty much the only UI element we will have on this sounds good now we have to do something with it yeah I mean let me just change the color this is not let's say SVSU a three you're just making those colors up aren't you yeah let's go with that okay so now we get into a JavaScript part so the input element the native element well let us have the model for the file and then let us you know give the information about the file that we selected when we need to access that and we need to write a JavaScript for it so let's write a script and I apologize I'm gonna put everything on index.html yeah worried about that huh since you're thinking myself when sitting it's part of we haven't at supply on the stream in a long time have you heard of the s code yes just to be clear we hope before a flame war starts in the chat again your editor is fine as long as you press a key and that character appears on screen you're set for web development I don't care about anything else so if you use webstorm if you use sublime if you use nope let plus plus it all works for web development so don't ever get feel discriminated if you don't use a different editor from what you see other people using yep so whoa someone is putting the disclaimer about the editor I just put the I like the shout out to the old jQuery syntax oh so this is what I do so whenever I do reference to the Dom element or HTML that is already exist in the screen yeah then I even though I don't use jQuery I just put dollar sign so that it's mental note like it you know I can see like which element still with your element object still lives in the memory and which one is actually they display it on the screen so in this case input it's already on the screen so I just put dollar sign and add event so change event is fired whenever user selects two different files yeah so I'm not apology I'm gonna console.log the hell out of this code because that's how I cared yeah that's how the professionals I think that's perfectly here so let's see what kind event data that we get so let's tub select picture oh I need to do the dev tool don't I inspect console something is wrong oh yeah capitalization of that function call is always weird consistency is something that we don't have on the web all right so event usually you know usually it's like in the target where you want the data to be right yeah and I just happen to know that if it's file in the target there will be files ah so we actually get that's where all the little actual file types or something you can yep but the unit selecting a file is implicitly granting you ask the website a permission to read that file so we are already done we can now read this file and work on it which is what we want so that's cool so let's say the file that we want to access will be the first one now now we have access to all the information but we have to actually load it in the browser yes we only got the metadata yeah it's like presenting the file not the actual contents Rosa hasn't figured that out so in order to do that we make a file leader so oh I I have touched on the filereader api not on stream but I have used before not not the nicest API to use but I guess you'll see now so far leader it's name of the buzz it suggests it just leave the file and it comes with a lot of methods to beat so one way to lead a file is bead as data URL which basically returns basics if it's image basic c64 representation of the file ok so I created the file leader here I guess it's interesting to note it like most of you probably have seen data URLs somewhere like when you inline a little icon in CSS I think in most browsers these are limited to 2 megabytes so if you want to use in this case we might only load a bigger image later on so that would probably not be a good choice for us hmm we're gonna start with it yep so and then once you meet the file you have to do something once the leading is done because it is you know done what do you call it like asynchronous yeah you have basically have to listen to onload event oh yeah I would add a file leader so somebody asked why are you using Const is it necessary that's a good question I don't know I started using Const I started basically ditch every bar and exactly so I think on some string previously talked about this there used to be everything in Joseph used to be var and now there is let and Const with yes 2015 and I mostly used cons because it signifies to the next person who reads my code that the value of that variable is not going to change any more it's just something that makes it like you have to juggle sstate in your head when you read the code so I try to only use constantly and also the advantage is their block scoped rather than function scope which in JavaScript is the default and very confusing at times yep so I just created a file leader mediate as a data URL pasta file and the file leader I added event listener for load event so now if I load it I get playback back and inside of that then again I've been the target I get the result here which is a base64 representation of the image that beautiful I could practically see the image right so now we need to somehow put this data into the browser so that yeah I mean browser show stun image right yes your way to do it is making an image object so yes again image new image I just told who you deleted that semicolon you made a call even me about my code I did I personally am a big proponent of using semicolons in JavaScript Rico's not I disapprove I don't have any strong philosophical belief or anything I just walked in a company for two years that and I think that's the thing it's mostly quiet that's it the way you start coding yeah it's the way you're gonna keep coming if somebody makes me like you know you should like let's say like our team decides like everybody should write like semicolon like I would happily adopt it but like there's nothing no mandate here so I mean we have we have a Google yeeess lens you click configuration which will demand semicolons but you know I mean I have Islington on most of my projects but for this supercharged is a production ready code so who cares yeah so I created a major object on 31 line 31 and then now I assigned this be 64 any presentation of that let's say let's see this is 64 and then is our C much like attribute on the image ah image tag 64 and now once this operation is done then the load event will be fired for this image object so once that's done I need to append that image object into the screen right so the let's check if this works so document.body.appendchild image and let's see if this works we just loaded an image with a file selector yeah that's pretty damn cool yep for the leaves and that comes in later I'm just gonna wrap this in div so that again we could always add I just need to like kind of like I'm not a designer what I need to style something you know okay oh right so now that we have user selects a man's data images you know gloved from the memory weird it into browser let's put it into you don't so that we can apply the filter yeah always no plan right so I guess you can't do it on the image element but you get a canvas yes so um image element it's great but it doesn't have a finer way of like tweaking and thanks I know you can use a CSS to put like a filter but that's all the point today but like you know yeah that it's like very specified thing and then that's not the point you know that is like you're offloading this our math problem to CSS like we want to do the math on the JavaScript so that we can use web worker so let's make a canvas where we just recently published an article about how expensive a blur is and if you animate a blur you will probably see a lot of jank I'll link to it in the description later on if you want to read that and you should because I wrote it and I would appreciate you reading my articles yeah so that's and the point is today we want to use a web worker eventually to offload heavy work but that article basic explains why a blur it's so computation intensive even though it is like a simple effect in terms of what it looks like so I suppose I should explain this part if like somebody have not done canvas work so canvas much like any other HTML meant you just create a canvas time right in the other one yeah yeah and then you can reference it by ID or class or however you put the ID oops what oh there you go so so that's what's happening here a dollar sign preview however in order to do a lot of like computational work on canvas you have to tell kind of like define the language that they are speaking so and going with like a planet explanation let's say you decided to I don't know you are a master creator so you decided to create this planet right and I knew that I didn't know to do on Friday you decided to speak I'm gonna speak this one language which is WebGL and then yep so you were to say you know the WebGL use specific thing called shader and then that's how you communicate with this campus planet and this in my case I want to use 2d which is another set of language and that's called context so whenever you define that language part of the campus you you call get context and if you're trying to do the shaders you would say WebGL but this time I'm getting the 2d context and basically preview con CTX context context is the one you interact that's the actual manipulation API yeah so like you know the canvas you can maybe set the width and height of the canvas and that's about it that's pretty much yeah like if you do what you like and of us you get you know that all the functions to low triangles to the GPU to upload textures and in this case you get functions to draw lines draw circles whatever you want to do as a 2d operation so instead of loading image as in child element now I put a image into the canvas and call the method the helper method that canvas has which is draw image which basically takes an image element and put it into the canvas so let's do the thing and see if it shows up oh okay when you're drawing the image you first argument is the image object that you're putting to and then you need to give the location where do you want to do I wish that was just half sensible defaults but certain function does not so I want to draw a full size so I would say that top left corner has to be 0 0 X Y so 0 and 0 and hopefully this should draw a picture into canvas Hey so I mean part of them which is missing but you know it's inside of the canvas right you got a major element anymore so I know what this is missing because we only cleared it canvas and default size for canvas I think it's 200 pixel by 400 if you thought it was 300 150 Oh maybe like a knife I only remember one by two yeah so we just need to set the site so in here I would say could you with the name of the compass so ah so you're gonna resize the canvas before drawing the image which you have since um a lot of people apparently are very interesting the soldering iron it is real it's just was switched on and why would it be there would just be dangerous you would what sobbing why the solar in iron oh yeah yeah it is real I'll tell you that so now shows up on the great screen all right I'm gonna do me bad technique of putting I am disgusted because all i care is how it looks and that's how bad websites are born welcome to supercharge does it even work yeah the first later if I was pushing this I will clean up was nice partying and everything in the designer but for now right ah what I need to do oh yes so now that the data is in canvas we can also get the data out of canvas we can read back the pixels yep so let's just um switch up this thing and make it like a function so apply filter it's a function and then we will have another function I was about to say that's a function that you're gonna write it's sort of function yet right now it is how I can type you have the excuse of having to type on a foreign keyboard not only in terms of layout but also on our swimming laptop which you prefer this is the thing it's not showing up but the Enter key it's so small on the Buddhist thing it's bigger than on them I guess it's Haller but-but-but narrower yes yes American it's like wider but and whatever you're used to you will totally mess up once you're on the other keyboard it's horrible when I go to America I just I can't type anymore and for you especially the same just now yeah so canvas has this very handy method called get image data and put image data you wrote with here I think oh how did this work just by coincidence probably love it maybe yeah all right okay all right apply a filter in order to update to the chat in order to apply the filter you need to get the chunk of pixel data and then you need to analyze those pixel data and then change something about that pixel data right now we only interacting with the HTML iment we don't have that data element right so in order to do those canvas has a method called getting a 0 and put in a state yeah so the easier way to explain to me is like this so imagine this is the canvas right you know my canvas you go through a contacts write contacts start call get image data yeah and then you get on that parameter where you can specify where that should start and how big we can like it you can get like a sub rectangle or for argument and then you get data and I make it pretty on the data pretty and then you pass that data in to put image data method and then put it back into the screen ok so that's what we're gonna do so as you're gonna take the image out do some processing and then put it back in and that's how you do effects yeah so let's see what the data that we've been talking about you like so say I already have a contact so play your contr stop get your name data and 0 0 and it would we were using that yeah yep and let's see [Music] and so what exactly is like what is the image data is it like a special type or is it just an array or so image data is a special I guess it's an error [Music] I think the eye needs to be power yeah so it's a special what do you call it oh okay so you can see some weight keep going yep they have three data in their width and height and then inside of that data data is a array and the array like the rain heist array yep all right this is the future a lot of dev tools waken like how many 360,000 element array and you can inspect every single one of those cells so you can see here is the data a bunch of numbers okay but those are just numbers not really like how do what what do those numbers represent so yes this little since the image that's on screen here yes I'll load it on the canvas but it is a island in the certain way and it's a one dimensional whole bunch of numbers yeah and the way I think about it is so the it comes in the set of four so from zero to three is a data you need to be present one pixel ah okay then you might have just it it's all GB and alpha that's why every fourth layer just now it's 255 because we don't have any transparency going on okay so every group of four forms one pixel and then these four elements in individual groups from the R value the G value of the B value and the Alpha value as you might know from CSS so probably handling one thing that change from the CSS is in the CSS if you do LGB a to set the color the a the last value would be 0 to 1 but in the canvased case it will be 0 to 255 okay yeah because the the thing that we're using it is 2:55 so you may ask like but it's flat how do you know we're in position that that's located right so when you are writing redder to somebody and I don't know if you do this in German I suppose you grew up in Germany so in Japan if you're writing a paper or letter you were to get this graph paper it's like so each square is for one letter right yeah so in my head I'm thinking in the one dimensional right wait you're like hi Saaremaa it's like one dimensional i wouldn't think about like she was gonna be line break or anything that makes sense I am gonna write it from the top-left corner say hi soorma and then once I run out of the space I go to NEX low I fill in what's in my head are the one dimensional data right it's the same thing so from here the first four is a top left corner and the next one is the the first low but the second from the left it goes to the right until we reach the width which we have in our image data object so we know once we have 300 times four yeah all right and we go back to the first pixel the next line yeah all right yep because we have the width and height and a whole bunch of data we can deconstruct this okay we know where exactly which which number is 4 which pixel or which color Channel and now we can probably jumble around those numbers and make the image look different yep so let's see in order to do this this is very tedious part so as I mentioned we were just like explaining death we have to do this in code right so I'm smelling for loops yes so for loops so for everyone who has joined just a couple of minutes late then we started uh welcome this is Mariko hello Surma we are I mean we sat we're gonna do web burgers we haven't even touched the web workers yet so far we have been loading images from the hard disk and drawing them onto a canvas so that we then can process them and show I don't know Mariko's calling up me how would I know I'm offering the chat so you have questions just post them in the chat and I'll like I'll try to fall along you're very very many people today so it's kind of hard actually to keep track of what where I stopped reading I have to catch up but yeah keep sending those questions and Mariko will tell you how to do image processing in JavaScript and then later on what my practice has to do with it yeah so so okay we're doing the classical yeah if you got if you've done dealt with canvas this is like you know engraved into your heart that you were like oh yeah yeah yeah you don't do those things but I will explain what's happening in a minute are you sure Oh index um that's probably for right it isn't should the that also be at times another plus so my image processing we have done this before I mean not us but I've done pixels reversion on images before right so what's happening is the outer for loop is X so going through this direction and ignore all of is Y so going through this direction yes so in combination of those you get to do every pixel every pixel however every pixel remember has a four values so index has to be padded with four yes so if we increase the index by one we have to jump four fields and that's why it's times four yeah okay can I show off my drawing because I mean I would love for you to show off your drawings so here is the visual explanation of what I just said right so the outer loop is the green Oh in this case I actually did why sorry it doesn't matter yeah yeah so the green one goes down from top to bottom and then Oland one is the X and go from left to right and then inside of that you have index and you get to access each pixel by index plus 1 index past two index or three yes it's something called happen once you have access to those things we're gonna do the cool thing as well don't you worry so let's see let's say changing opacity maybe yes good so the last one is the opacity so alpha is image data that we have inside of image data we access data and then inside of that index + 3 is where all of the Alpha channel lives and then right now it's all 255 so I'm just gonna set it to 220 72 or 27 and then let's get to oh I need to put back into the data ok so now we have changed the fourth value in each pixel pack the a value 207 which is basically 50% opacity and it's +3 because as always in program we start at 0 so 0 is the first pixel and so yep + 3 is the fourth value so I just changed all of the value which is in the image data table data right and then I put that data back here on this line so hopefully this picture will come nice we just have done image processing yep so we can totally do the thing where let's see in woods changing the thing I think Matt did like a womb yeah he did a warm field or something so or is a red value so I think what she did was like increase all that value a little bit to make it like yeah I think he had like a factor and he would go a little bit add to the red and subtract from the blue depending on how high the warmth value was supposed to be okay well let's just do the simple thing of like red is where the first one so index basic you were gonna make Jake's face more red which is what he looks like once he has seen this - oh that's a good one and then literally there's 1.1 1.2 let's see right so because the first is the right value you're increasing the rhetoric okay and interesting fun fact because the image stated of data is a clamped you and eight array if we go above 255 it will automatically stick to a 55 and the same as zero you can't go negative with a clamp Q into 8 or 8 which makes it super handy for this kind of image data definitely more right definitely more land you seem like nicely turned color I never do in real life though so that's good yeah and this aim is working fine yeah you know in your life the cam the photo we take on the phone is like much much bigger that's true I mean that this picture I think we saw in dev tools was 300 by 300 we a nobody takes those phone no nobody does and I want to keep like I don't want to like a resize it to make it like fast yeah I want to keep the original size I basically want to be grateful don't worry insane wallet II just because he did some you know just some jokes yeah yeah so I have a big file the cat JPEG no once I open it visibly if it's very there's nothing happened oh it's just also like it didn't not work it just took that long to draw and process the image okay yeah that is a little bit long I have to say and also we wrote this on the main thread JavaScript so probably the browser just froze yeah so let's like investigate right so you might need to help me here cuz I'm not a expert on the thing but I was like hard you just hit record that is correct do something that you won't do the cord and wait for it to high so dev tools are still working it still hasn't appeared on screen there it is stop it and let's see what dev tools set dev tool says there is one massive red at the top you never want to see those red bars because that's what we call jank that is when the main thread is blocked and basically cannot react to user inputs like scrolling or clicking a button you never want to see those if you do you have a giant problem most likely and have to investigate how to fix them yeah so that screen so I think if you remember Paul Lewis he always had you have a frame budget of 16 milliseconds you cannot do you shouldn't be doing any more calculation in your JavaScript per frame in 6 milliseconds this was 6 seconds that's too much mariko yeah and I to be fair like I doubt it will go down to 60 frames per second no way it's 2d canvas the image is just there big thick what we can minimize this so that the user can have a kind of bleak point so that they can interact with okay why I say it's like a perception of the speed is faster okay thank you Tony I make it that's right that's that's what we call performance yes so let's do this the first thing that is very blocking and it's help me if you can point it the imploding the image part I mean there's the load event oh that's when it's already loaded right what are you looking for the image loading part I think I suspect this chunk is where we file leader yeah we were leading the file so I happen to know that it's not that new but it's oh you are then web worker true that the wane pretty much anything is northern web worker almost so uh do you know what it is that I'm going to use is it is it create image bitmap yes so there are there what do you call that API yes cui teammates bitmap which allow you to pass a file data and logically creates a image for you so this will allow us hope also to not only make the image decoding be a janky process but people also avoid the filereader api yep so I do not mean if I would neither API anymore is so much missing through the thing I don't need to listen to that image I still do maybe yeah you still want to know when the image right but I can delete the file leader and that's good for sure great bitmap clean image bitmap is a promise based so nice one I think I'm a big guy on of promises you call it with den mm-hmm we can use then it's completely valid saying do you want to do you want to do it this is your code the fur if I would take all right now the first thing I would have to do is add semi-colons to every line you're doing that you keep coding so bit month see now the return value from this create image bitmap promise should be the image right so you can append that to a man's dog yes I saw she wait no no no you directly go to the camera so let's let's just console like this I don't know what it was yeah so maybe you want to just see what kind of type you get yeah so let's just do this small one before we go into okay so maze bit man just as high DeWitt it's done and then I remember this API only expose with in height - yeah but they can be methods yeah it is a representation of the data right so I can directly draw that into canvas I think because it's already image and canvas already have a drawing image method okay so let's see I take this code here and then move it to inside of them so I actually don't need the image eventlistener yeah I think it's cool so maybe that would be the bitmap with okay and then the foot height will be bit my pipe and then pipe you see TX draw image be the bitmap I don't know console.log and fingers closed this is the fingers close this image roll load I have the greatest of faith in you huh still works good to go yep all right so we now have avoided the image elements we have avoided the fire Reader API which is good so create a match bit map um I think the reason that got introduced is exactly for this reason they can decode an image get get the image data without having to jank the main thread it's in Chrome it's in Safari it's in Firefox it's in Firefox but not supported in edge or Safari but they have it on their radar source I know I'm not sure if they have it under consideration or in development but they definitely know it's a thing and and no and they know it's a thing at the whatever one so as far as I know in chrome they do this cool thing where the decoding double image which is the most extensive part they do it off thread we off the UI thread so you can see those in our network record start recording do this thing stop and then you can see like less usually yeah like much smaller thing however this year the task and the render of foreground worker now that's a name that's great so that's basically your image decode so the image decode is hampering happening in a worker that chrome spun up which means it's on a different thread so it doesn't block the main thread and that's b1 yeah it's good for bigger images yeah I think I was like a year ago it was decoding image on the context that cold so if you called it from UI thread then it will decode it in the UI thread yeah if you call it from worker thread then it will record in Volkers red and I think Paul Lewis water helped our library to make it easier for you so that of course you didn't notice us and I think I'm sure you can find it on our github thing but chrome since then changed it so that like any image will be off the thread okay which is amazing so that was the one part of it but then we haven't figured out the apply filter part so yeah so the apply fell apart is the one that still makes it super slow yeah and look nice yep so apply filter we can delete this part and this is when we get to use our unity after a good amount of work we now have reached the point yeah where the workers come into play yeah so what we gonna do is as we saw it this part of going through each pixel and doing something what's the expensive yeah if you have like the other image is like what 4,000 by 3000 or something so it's like 12 million pixels that's gonna take a while in JavaScript yeah so so but this part the lucky part is that this doesn't touch the Dom this doesn't touch the UI this doesn't have to do anything it just needs to do the math it just has to have the array right right yeah so we can load these to the worker thread so the flasher of how worker works more drawings love it so again there is a two threads that we are dealing with one is a UI thread or main thread that you call it which is where you deal with the DOM and UI and then you spawn up a web worker thread look let me go dive into the code yeah I like the style of annotating the code and kind of like a picture of a code so let me explain what's gonna happen so inside of your application we are going to create a walker which is the new web worker and then you pass a name of the javascript file that you want to execute in the working thread now it's kind of like launching a International Space Station now you are starting we are launching International Space Station's something you can communicate with right so now go back to the Walker suicide if you want to use external library it's kind of a think it's similar to have a service worker by import scripts yes Ward you use too so just just to be sure service worker not supported in many people and all browsers like edge is just no work I think who knows Apple has announced they're working it Firefox has it Chrome has it workers without the service bit every browser even old in an explorer has these nope yes just to be very clear about this this is not like bleeding edge technology this is 2001 technology I think or something so yeah you create a walker genius with whatever that you want to do you launch it from your application side and then now it lives in a different thread of the memory how do you communicate those data right like in I'm sure we use satellite to send the data to well International Space Station in your life I don't know what kind of do they using today it's probably lasers anyway so that communication is done by postmessage yeah and all message event so from the application side you call post message with you know the data you want to pass and then on the worker side you listen to all message event yeah and I kind of like I drew it like you do all a quickie thing while expensive stuff happens on the worker side and once the worker is done then they use the same thing post message to send the new data or the information that they calculated back to the main side and now main site can listen to all message and like if you need to terminate it you can terminate it and I kind of like put it into like that's horrible we have this man made glorious object International Space Station you want to throw it into a black hole I could've come up with good ending for well I mean the employer would have been just sent into the Earth's atmosphere and let it burn like new frontiers kind of approach to things so let's go with it so let's create a web worker and then I need to pass the house I need to make new file mm-hmm what's the shift key for this every key is different here okay yes so now I can reference this with so we're basically just download the browser will go down on the file create a new JavaScript thread load that file in the tenant then you have control of a separate thread just for yourself yep so as I mentioned Walker takes a listen to on uh let's see the post message first so I created the worker I want to pass the data to Walker so that walking you can deal with it so Walker dot post this message M capitalized again API so hard for me so if you haven't used post message it's just what it sounds like it posts a message over to what ever your post messaging to and post message can send JavaScript objects but only objects so you will lose and it's called the prototype chain so if you have like a class instance it will not arrive as a class instance on the other side but as a simple JavaScript object but it's usually good enough if you have like just do a little like Jason style object we like this is what I want to do this is the my parameter stand which is you're probably right now um so I created a post message send image data as I mentioned this for loop needs to go to worker thread so let's go to worker thread look a file and this one will come into play later but let's create a message tomorrow how do you do would you do this self dot on message so what do you usually do I would usually just say and that's and I have to blame Jake for this because he bet he said self is unnecessary so I stopped using self I would just say add eventlistener message but if you want to use the on message I would probably use self on this do I need to reference and you think yeah or I know you can just oh interesting yeah I know right cuz I think I own the drawing I still use the self dot on message I think I just like use whatever the Google developer site explain it to me or maybe html5 locks explain there's probably HTML for frogs out there for them so message event will be fired and let's see so this let's call D should be the data we passed yeah and I want to see if what what this looks like actually so again console.log the greatest tool that's also something that is good to know if you want to work with workers the debugging story around workers is actually fairly good so console logs from your worker will just appear in your dev tools just as well as you will I'll be able to use this approach to debugging not working oh oh oh oh oh because we are not using that image anymore we're d likely loading that correctly so this should be the size of preview now because we set the width and height there so I can lift Reince it with canvas okay so let's hope this works message event and then inside of that I have a data where data is exactly the representation of the image data we dealt with yeah so inside of the worker I get to access data table data table data so this was a big image but transferring it was surprisingly fast why oh well supposed to be this shouldn't be fast true why was it fast either way so weird so the image data contains an array buffer mm an array typed array buffer and typed array buffers are JavaScript version of actual chunks of memory rather than you know abstract objects you can pass around and post but it has the ability to transfer those which means none of copying the entire image it will actually transfer them so no copying necessary the main that will lose access to this type of a buffer and the worker will get access to it right yep so basically like let's say you and I ha memory ya field right I have this image data here and then I want to pass it to a worker Nucor if i don't own this 146 if I don't have anything specified we don't be this is like literally copied into your field however if I specify argument which we'll get to then it will basically says just to move the pointer move yeah like you lose ownership I get ownership and no copying needs to happen yeah so that's good and it's the we already API were like yeah weird and like specify things so in this case image data don't data is the that's the truth array array dot buffer right because typed array buffer like there's array buffers which are the chunks of memory and then there's the typed arrays which are views onto these buffers because you can interpret the same chunk of memory as like a series of floats yeah or a series of 8-bit integers and we want to transfer the buffer not the interpretation of the buffer which is I guess the distinction which it's a little bit weird but maybe that's a good way to think about it yeah this is like a little cookie bit that when you're dealing with what girl that you have to encounter I guess unfortunately so inside of the worker the image data is the one that we want access so let's say data is the data right and then we can basically access same thing let's do the same computation of making a face read inside of the face read operation well every warm filter not the face ratified I like a like favorite operation much better hasn't it seems like better branding to me okay so I have a whole bunch of weird Allah friend stuff I need this so let's say with is inside of image data so with W is image data oh yeah just make it more readable that's good and data the the one that we are actually dealing with is your mangy dog okay so now I need to tweak this a little bit all right it's just data though yeah mm-hmm all right and now so now we copy so we sent the buffer to the worker the worker do the same thing as before like went through all the pixels did all the right manipulation now we just send it back yep okay we need to send it back on a post a message so wait so if you are in the other event listener how do you send it to post message isn't that a global just post I think in the workers is just a global soft are possibilities just go post message okay it gets more complicated if you talk about service worker because everybody can talk to this service worker but the soldier can talk to all the open web sites when actually to define which window to talk to and that's a whole different story in this case we have it nice and simple we just call postman yeah it's a weird for me too not like a friend self but I guess if Jake says self is not necessary then it's not necessary okay so supposedly we do all the things and then send the poor user post message to send the data that it was passed yeah because we manipulated inside of the data and that's all it is d the day touristy the event because you're not sending back the event anyone oh that's true so I have to do the image data yes and also have to transfer a bit again right sorry this this is where you can tell that the postage API is really old because it feels pretty inconsistent with the rest of the web but that is also you know the charm of the web kind of like that's how landed and that's how we got now - all works so we'll make it work yep so now sent it but then we need to listen to it so we can this is firing excited doing it would you do it outside of this function yeah you've done it so far why not just do the let's make a D and if this pattern is repeating the indeed of data image data alright how we have copying pasting lines now topical reuse and then put that data into the canvas all right well I'm nervous this works yes so it looks the same but something a whole lot different just happened I actually yeah let's let's do the performance right away so Betty what should what is going on now say we're doing the same thing as before but all the expensive processing is happening in a different thread meaning there shouldn't be any red bars if we do a performance analysis on this how's that okay that looks pretty short and we can see the dedicated worker thread is what we are using yep has some work to do yep so function call to workers is happenin dig dedicated worker thread okay so previously all of this right this part was clocked inside good mark reaches this shift by the way shifting click quick what shift click and hold a can mark region oh you can make up a white there Oh t IL performance protein so lemme see this whole chunk of yellow was living in here which means it was blocking users interaction if they want to click on something they want to do another JavaScript operation it was just bull walking yeah and now you put it done in to put it put it into Walker's Fred I mean the ultimate test is now load the big image right yep and see if we have a six second frame or if the frame rate thing going better right yeah so let's do the call recording got that cat in there that was also quicker yeah visually quicker so here's an interesting fun fact so the I recently learned if you look at the deft at the the bar graph at the top the you know the little mountains thing when something is striped it means it's off main thread so it means something is happening but it's not blocking dimension it's good as you can see there is no red bars because we are never blocking the main thread with this version because we're using decode image get image bitmap create image bitmap create image bitmap and a worker yeah so good yeah so who do you that's pretty much it right not gonna do anything to other things no I mean we're perfectly on time once again as on supercharged it is common thank you so much for traveling all the way just for this and we're gonna come as miracle promised cheese of course gonna clean up the code or just give it to me I'm gonna put it on the kind of repository which I'm gonna put in the video description once the video is up on YouTube thanks everybody for coming and talking to us in the chat been super active there I was really really happy to see that as I already announced on Twitter this is the last livestream for the 2017 season it's time for a little Christmas break but I'm gonna be back we're gonna be back in 2018 with many more things I want to try I hope you enjoyed this I hope you learned something if you have more questions you can ask mariko me or me you can ask me too yeah Twitter or the ask the chromium tip Twitter also go to chrome dev we're pretty responsive there yeah and actually we are the two active person who's mostly gonna get replies from in America if you wait for him death if you want to you know stay up-to-date with supercharged dreams micro tips maybe even totally tooling tips who knows subscribe to this channel so you get like a little notification let me put out a new video or we go live the next time thanks for watching and I will see you all in 2018 [Music]		
today we're going to focus on forms whether that's contact form or registration form what are the necessary HTML elements that we must use in order to display those types of elements let's first look at an example I'm going to refer back to net touch and here's an article if I scroll down to the bottom you can see that we have a contact form and this allows us to enter our name an email address a URL and our comments so that we can leave some feedback related to this article so I want you to note these are HTML elements this is a text box this is a text area and down here we have a submit button so how can we create these let's dig in we will open up our code editor we have a blank skin again and first we have to tell the browser that we do want to display a form so we're going to wrap it within a form element now a form will likely have two attributes minimum one will be an action attribute and the next will be method now method it's a little higher level than you are right now but it describes how the contents of your form meaning the values that you type into those inputs and those text there is our transmitted to your server-side language of choice by default this will be set to get meaning they are transmitted through the URL however there's also a method called post and you might do this in situations when you need a little bit more security for now though I don't want you to worry about this too much because it's beyond the scope of this course you'll want to take a look at a server-side language like PHP for processing form data here we're only focusing on creating the forms and the action attribute specifies when you click the submit button of your form where should that data be posted to by default it's going to post to the current page however if I decide I want to post that data to maybe contact PHP we can do that by specifying it right here for now I'm going to leave it blank and I'll leave it open like this so you remember there is an action attribute but it will post to the current page next we want to create a text box and we do that by creating an input element so let's go ahead and sell close it for the time being and see what we get when we viewed this in the browser and there we are as you would expect we get a text box which I can then click in and type now I see two big problems with this though one we can enter all the text we won but there's no button there so we can't submit the data and it can't be processed so that's the next step is we should create a submit button now we can do that believe it or not by using the exact same element input can be used to describe a text box a button or even checkboxes and radio buttons so in this case we're going to specify that the type of input should be a submit button now when I reload the page there's your button good notice how it says submit by default but what if you wanted to say something different such as go you can do that by specifying a value attribute value is going to be go now if I reload the page we've updated that accordingly now the next problem is we have our text box right here but the visitor to your website is going to have no clue what that text box represent are they supposed to enter their name their email address a search query you have to tell them so we need to provide some kind of label for them ok well let's use a label element and we'll place it right here before label and we'll say enter your name like so now if I reload the page there we are we have a label that corresponds to a text box next it's very common when you view a form your natural instinct might be to click on the label hoping that that will then trigger the text box so when you click on the label the text box then becomes active how would we do that well we need to associate the label with the input in this case we can say label what is it for what is it connected to and we can associate it by providing a value we'll say here name and now to connect it we're going to provide an ID to this input called name now if I save it and I reload the page when I click on label you'll notice that the text box instantly becomes active and this provides just a little bit more usability another thing you'll often find is developers will use an ID of name in this case and they'll set the name attribute not to be confused the fact that the value is name has no effect on the attribute name if we decided we wanted to change this to your name that would work too so don't let that confuse you when you're working with a server-side language they will often want to reference and inputs value according to its name or if you're working with JavaScript sometimes you'll use it this way as well so what you'll find as many developers will go ahead and set an ID attribute and a name attribute equal to the exact same value that way you're all set to go no harm done so now let's provide an option to enter some feedback so we don't use an input for that because this isn't going to be long enough we need a full area to write in in that case we use a text area element and this is a little different notice here our inputs we self close but a text area is like a label or a div so we need to close it like so and the reason we do this is because optionally you can add a default value so if I reload the page you'll see that we've added a text area and it's filled with the value that we placed between the tags in this case we're going to leave it blank so I'll do it like so once again though we have no idea what this text area is looking like and by the way we're going to make this look a lot nicer so don't worry if it looks a little crazy right now I'm going to come back and this time I'm going to add another label and this is going to be for and we'll say comments now in order to connect it I have to remember to add a ID of comments as well as a name of comments and lastly I will set the labels value to your comments reload the page and now we've provided a label for that one as well and I can click on it now let's begin styling it to make it look a lot better one thing that you will often see is developers will use ap tag to separate each set of label and input even though I must admit that I've done this myself as well I don't think it's a good practice but let's go ahead and see what it provides us we'll do this one and we'll wrap the input as well I reload the page you can see those are now on their own line so they do this because browsers natively provide a little bit of spacing or margin between each paragraph so it's an easy way to put your content on their own line and give a little bit of padding between each input however you have to think to yourself P tag references a paragraph now does that have anything to do with a label and an input as children maybe so maybe not my instinct is no so what you can think of though is this is simply a list of inputs or a list of information that the user needs to fill out so once again there's that keyword list why don't we try using an unordered list to wrap this and I will repurpose this indent it to make it look nice and neat and I'll do the same thing here like so and I should make sure I close out my unordered list as to well now if I load the page it's going to look similar but a couple differences one we certainly don't want those bullets so let's get rid of that immediately form list item list style get rid of the bullets next we need a little bit of breathing room because we've gotten rid of those paragraph tags that have the margin by default that's okay we'll add it in right now and we'll say margin bottom 20 pixels reload and that's looking a lot better now next it's sometimes cleaner to have your label on its own line so let's do that and we can do that by specifying that the label rather than its default display of inline it should be set to block so it will take up the entire width that's available reload and now you'll see there we go looks a lot better notice how this is a little odd we have this input that's all the way to the left and if we come back we can see the reason is we forgot to place this within our list so let's do it right now and I will just clean this up and get rid of the P tag reload and now that's been pushed over but that does bug the question what is this spacing coming from and if you remember from a previous lesson browsers will apply some default padding left to all unordered lists unless we override that you can verify this by clicking on the UL and right here you'll see WebKit padding start and this is for all intents and purposes I didn't chuckle to padding-left it's how the browser does it a WebKit refers to the engine powers browsers like Chrome and Safari now we can override this by explicitly stating that the padding-left should be zero and notice that that pushes all the way back so let's do that now form ul padding-left is zero notice i'm prefixing form because maybe within a blog posting for example we do want a little bit of padding for our UL however when it's in a form we certainly don't so I'm going to keep it like so if I reload that's looking a lot better so now we have our text area and that's still not a lot of room to type you can see very quickly you run out of room so why don't we set a width and a height and there's two ways to do this one is to apply it within your markup so you could go right here to the text area and you can specify rows and calls and you can think of these the same way you would think of in a spreadsheet for example rows will be the number of horizontal rows if I set that to a big number like 50 that's a huge number of rows why don't we bring that down to 20 if it's easier think of calls equals with rows equals height and I'll change that to 30 and now we've given them a lot more room to enter their comment now there's one problem with this you can do this but then again what if you decide down the line that you want to change the width and height of that text area we do that big no-no again where you would then have to go back to your markup and adjust it another way we can do this is apply a width and height directly to the text area within our CSS like so let's see how that looks refresh and now we're getting more or less the same effect but we're doing it all from within our CSS file now I think that height is too much so I will reduce that and increase the width to 400 and that's looking a lot better so now we can enter some information my comment here and if I click go watch what happens and pay attention to the URL right here click go and nothing happens why and it's because we've overwritten the default method and when it's post you're not going to be able to see it because the data is not transmitted through the URL if we change it to get it will reload the page and once again my name my comment and now look at the URL it's been updated notice that we specify it what we call a query string at the end of the URL there's a question mark and then the inputs name equals the value that was provided and you separate each input with an ampersand so name equals Jeff comments equals my comment and it's getting the word name and comments directly from the values that we provided right here and right here so notice that because we set the action to nothing it submits to the current page if we instead wanted to set the action to context dot PHP and if we came back and entered this information again it's then going to try to load contact dot PHP and it's going to take the information that was entered into that form and send it through the URL and then presumably with a server-side language you would capture those values and then maybe email and administrator or perform some kind of action maybe add that information to a database this is the essentials of working with a form now in this case again we're not working with a server-side language we're going to leave the action link so let's take a look at a couple more things before we finished up for the day and I hope you're working along because it'll really make it stick if you are what if we want to give the user a yes-or-no tag question in that case we can use a checkbox we'll create a label and this will say CSS and we'll say do you like CSS now once again we get to use an input element but we specify the type to be checkbox now we have to remember to apply a name of CSS more importantly an ID you can usually get away with removing the name although it is required in some situations now if I reload the page we have a label and we can click on it so watch what happens when I add my name and I check this and I click go you'll see that it is represented by the value on CSS equals on and that means it was checked but watch what happens if I do it again this time I leave it off notice that we have name equals Jeff comment equals nothing because nothing was added but we have no mention of this checkbox right here and that's because when it's not checked it will not be posted or sent through the URL and that's an important distinction to make it's not going to say CSS equals off there is no off only on and I also want you to note that in addition to clicking on the checkbox because the label is associated with it which we did right here for CSS we can click on the label and that will trigger that input or check it so it makes sense that we should also make the label element and we change the cursor to a pointer and that will change it to that little finger and that gives a little more feedback that it is clickable and if you want to do a little bit more maybe we make the color blackish and we'll set the font family to sans-serif and maybe we set a little padding below so there's some breathing room between the label and the input and we'll say 8 pixels just to clean it up a little bit more and you can see now you're building a good form and let's do one more before we finish up for the day what if you want to give the user a list of options so what is your favorite X we'll do it right here within a list item and our label will be favorite language and here we're going to create once again another input and this time the type is going to be radio and if I reload this quickly you'll see now we have a radio button but this is different from a checkbox and that you can't click it again to uncheck because it's expected that you have to choose one so generally you'll have things like CSS I reload can you see that show up and I'll repeat this a couple times you'll want to make sure that you add just as before a name and an ID I'm going to leave that blank for now because you know that you're supposed to do that JavaScript and the last one maybe Ruby reload and now we have a list of items so you can click one or more now it's important to note again you cannot uncheck a radio button once it's been checked if you want to give them that ability maybe you should be using a check box instead reload note I can click HTML but no matter how many times I click it here I can't remove it all right so a good job you've created your first forum and this is how anyone would create a static form in the next lesson I'm going to teach you about image replacement		
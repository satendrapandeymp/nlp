in a previous episode we noted how by default the browser will make anchor tags blue if you have never visited them before so let's learn how we can override it using the most basic way the way it was done a long time ago and that's by using an attribute called style so just as we can have a per F attribute or a target attribute for anchor text specifically we can also have style tags that will work on any of the elements that go within the body so let's try it now style equals and then quotations so notice it follows the exact same format the name of the attribute is style and the value is what and this is where we get to use CSS and CSS takes a specific shape of property name and property value so in this case if we want the color to be yellow why don't we do color followed by a colon then the value yellow now what we have here is considered a statement get the color make it yellow name colon value and then we specify that we are finished by ending it with a semicolon so let's save that and now if I come back and reload the page this text is now yellow and that's a terrible color please don't ever do that but let's say we want to make it black refresh now it's black let's say you come from a print background and you're used to using maybe RGB values okay I can do that as well RGB and this means red green blue so let's say 100 red 200 green 50 blue reload the page and now we get this nice green color we also have the option of using what's known as hex values so that would be a six digit sequence that references a specific color so for example if I wanted a greyish color I could do ìiî ìiî ìiî and notice that i prepend a pound sign to specify that this is a hex value now if I load the page sure enough we are referencing it like so so there are ways that you can specify a color and it's as simple as using the color name or if you need more control to RGB there's also something called RGB a which you're not quite ready for yet and then you can use a hex value and then there's HSL there's lots of different ways I encourage you to research them on your own but for now stick with simple declared colors notice how this anchor tag has an underline what if you do not want the underline well that is referenced by a property name called text decoration text decoration from the browser is set to and if we look here here's all the options that are available it's set to underlined by default I reload the page nothing will happen because that's already the default if you want to verify this once again right click or control click inspect element and now if we come to the right area right around here you can see default stylings that are in place so what we see right here is element style it is picking these values up from what we've specified right in here but we can also review anything that's set by default so notice user agent style sheet this is the default style sheet text decoration of underline using this selector and you'll learn about selector shortly just note that because it's crossed out that means it was over rided by something else and this is the cascading nature of CSS you can override previous values so that you can be more specific in this case we've overwritten it with our own so that takes precedence so now we know we can override the values so let's change it and now we're going to say text decoration should be none I don't want any kind of decoration now let's view it and there is no underline the first thing you may notice now though is very quickly with two properties alone our markup is starting to look really messy and this gets away from the basic idea of using markup to describe our content we're no longer just solely describing the content we are styling the content as well there should be separation there should always be separation and that's why it's better to create a style sheet we can create a style sheet by creating a new file and we will give this a name of anything we want I'll call it style and to specify that it is a CSS file it needs to end in an extension of not HTML but CSS now I will take everything we've declared here I'm going to cut it clean this up and if I paste it in let's see what happens with that alone when I come back reload the page and now it's no longer taking effect and why well we've created a new file but how would the browser possibly know that we want to pull in the styling from this file in a doesn't we have to link to it so would we link to it within the body you could but why would you it's not going to be displayed on the page it makes much more sense to link to your CSS files maybe your java scripts from the head so we'll do that we use a link element to link to a file now we need to tell it what's the relationship to this file it's a style sheet that we're linking to next where is it so we're going to use that familiar her F property that we learned with anchor tags the F is going to be style dot CSS it's in the same directory so I can reference it simply like so now there will never be text within the link so we can self close it the way we did with meta tags let's get rid of this and self close it or again it's just okay to do it like so as well just be consistent if I load the page once again it's still not taking effect why is that well let's view the source and figure this out when if you the source and you can link to specific pages so notice even though I'm in the source I can view the HTML page that we're not linking to correctly so now let's see if we are picking up style dot CSS click on it and yes it is pulling in that file so for some reason it's not picking that up and the reason is why we can use properties like this specifically within an or tag we can only do so because it's implied what the styling is associated with when you have style within here its implied that we're styling the anchor tag within a CSS file we need to be a little more explicit in this case if I want to reference a tag name like anchor tags I have to use a followed by a curly brace and then followed by a closing curly brace like so and now I can take everything here paste it in and again always indent for good practice so now what we're saying here is find all anchor tags any element that has a name of a in this case it's only referring to this right here then execute anything within the surrounding curly braces and here we're going to get the color make it red text decoration no underline let's try it now and tada now it is taking effect because we have explicitly stated what the styling is associated with now why don't we add a heading tag keep it like so reload the page and now let's say I want to change the font of the heading one tag okay well we can do that not by doing the style attribute even though you can get away from that it's a very bad practice I don't want you to do that always when you style something reference the associated style sheet and now I'm going to say find all heading one elements and execute anything within the curly braces in this case if I want to change the font I can type font and if you use a good editor lots of times they will give you code hints so if I say font family you can see here's all of the choices and you'll learn a little bit more about what fonts to choose in a future lesson just know you can't always use any font that's available on your computer because it likely won't be available on the computer of whoever is brows on your website so there are HTML safe fonts that will be available on the huge huge majority of all computers in this case I'm going to specify Helvetica and a fallback and that means if the user does not have Helvetica fallback to Arial and then there is a base value called sans-serif' and that will refer to without getting into it too much a very specific kind of fonts however a good tip to know is sans-serif will automatically use one of these spots if it's available as the default so what you can do if you want is set this to sans-serif and make sure you end it with a semicolon and it will automatically use the most appropriate sans-serif font I'm going to save it and now if I reload the page you can see in this case it seems to be using Helvetica so congratulations you've gotten your first dose of using CSS you can do some amazing things with CSS it's much more powerful than many might think in the next episode tomorrow I want to teach you a better way to organize your folder structures because already things are getting a little bit confusing so we'll do that in the next episode		
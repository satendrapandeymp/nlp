this is the fourth in a series of videos designed to teach you the basics of html5 in this video I'll be demonstrating how to add audio and video to your web pages using HTML s new audio and video elements one thing to keep in mind however is since the audio and video elements are new to html5 older browsers will not support them the good news is that the current versions of Internet Explorer Firefox Chrome Safari and opera all support the audio and video elements we'll start by looking at the audio element when using the audio element there are two different ways to specify the URL of the audio source file one method is to specify the audio source file using the source attribute as shown here this method has a drawback however at the time this video was made the major browsers do not all support the same audio file types here is the other method for specifying audio source files this method uses source elements the source elements are added in between the start and end audio tags you can add multiple source elements which allows you to specify multiple audio files with this method if the browser does not support the first audio type then it can try the next one so at the time this video was made the OGG audio file will play in the latest versions of Chrome Firefox and opera and the mp3 audio file will play an Internet Explorer Chrome and Safari let's take a look at the source element the source element does not have an end tag the audio file URL is specified by using the source attribute here you can use a relative or an absolute address here are some examples of relative addresses this one can be used if the audio file is in the same directory as the HTML document this audio file is in a subdirectory and this one is located one level up here is an example of an absolute address an absolute address needs to start with the protocol which is typically HTTP and that needs to be followed by a colon and two forward slashes an absolute address can point to your own website or to a different website in this example I'm using a relative address I'm also using the type attribute this is an optional attribute that can help the browser to determine if it can play the audio file before it's loaded you'll notice here after the source element that I added some text this text will be displayed in browsers that do not support the audio element so here is the HTML code that I'm going to be using and here is what it looks like in the browser let's take a closer look at the code I'm specifying two audio files using source elements the first audio file is an mp3 file and the second one is an OGG file so now in the browser when I press the play button I can listen to the audio file this control bar that you see here is present because I have the controls attributes specified in the audio element you can see this right here up until now during this HTML video series whenever I specified an attribute it looked like this I specified an attribute name followed by an equal sign followed by a value enclosed can quote ation marks for the controls attribute you can use a simpler method all you need to do is specify the attribute name which in this case is controls if this attribute is present then the audio control bar will be present in the browser if you remove the controls attribute then the audio control bar will not be displayed in the browser another attribute that you can add is the autoplay attribute and just like the controls attribute all you need to do is add the name of the autoplay attribute if this attribute is present then the browser will begin playing the audio file as soon as it can so let's try it I'll save the file and now when i refresh the browser it will start playing another attribute that you can add is the loop attribute if you add this attribute then the audio will start back at the beginning after it finishes plane now let's look at the video element I'm going to delete the audio element and paste in a video element the video element is similar to the audio element you can specify the video source URL using an attribute in the video element or you can use source elements inside the video element like you see here and just like the audio element at the time this video was made the major browsers do not all support the same video file types since I can specify multiple source elements it allows me to specify multiple video files if the browser does not support the first video type then it can try the next one so at the time this video was made the OGG video file will play in the latest versions of Chrome Firefox and opera and the mp4 video file will play an Internet Explorer Chrome and Safari let's look at this in the browser now I can press the play button and watch the video this control bar is present because I have the controls attributes specified in the video element this attribute is set right here you can also add the autoplay attribute if this attribute is present then the browser will begin playing the video file as soon as it can you can also add the loop attribute if this attribute is present then the video will start back at the beginning after it finishes playing the audio and video elements are welcome additions to html5 and this video has only covered the basics of using them but if you're interested in more details there is a lot of information out on the internet that can help you learn more well that concludes this video you can find the code used in this video at little web Hut com thanks for watching and please subscribe and leave a comment		
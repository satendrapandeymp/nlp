hi I'm Michaela Hutchinson a senior program manager on the xamarin platform team I'm excited to introduce you to visual studio for Mac a new member of the visual studio family we'll start with an overview of Visual Studio for Mac and then we'll jump right into the IDE for a quick tour we'll take a look at its core features including rapid development of high quality mobile app experiences with xamarin platform finally we'll take a look at developing cloud backends with asp.net core and sharing code between your mobile app and cloud back-end using dotnet standard Visual Studio for Mac is a full-featured IDE that should feel familiar to any Visual Studio developer however we also designed it to feel right at home on the Mac and it looks and behaves like a Mac user would expect it's not entirely new it's an evolution of xamarin studio from a mobile focus IDE to a true full stack development environment and it's a part of the visual studio family sharing not just as user experience but significant parts of its code its DNA if you will with its siblings visual studio and visual studio code Visual Studio for Mac is tightly focused on mobile-first cloud-first development and you can develop for the whole stack right from one place there's xamarin iOS and zerrin android for building native mobile app experiences in c-sharp with drag-and-drop visual designers to help you build high-quality user interfaces there's the cross-platform UI library xamarin forms to help you share more code between iOS Android and uwp with zamel UI markup and a live preview of how it will look on various devices and since nearly every mobile app has a cloud back-end we've also included asp.net core and dotnet core for developing your apps back-end developing and consuming dotnet standard libraries is fully supported so it's easy to share models and logic but between your Zaman mobile app and its asp.net cloud back-end in addition to these projects there are all the other core features you'd expect to see in an IDE there's rich c-sharp intellisense powered by Roslyn with refactorings code analyzes and fixes Visual Studio from AK uses the MS build project format and build engine so it's projects and solutions are compatible with Visual Studio and developers on Mac and Windows can easily work together integrated NuGet package management gives you access to the universe of NuGet packages and components for use in your apps there's a powerful debugger for zahrain and for dotnet core integrated get source control helps you manage your work and there's much much more let's jump right in and take a look when you open visual studio for Mac you'll see the welcome page which should be immediately familiar to any Visual Studio developer to create a new project you'd go to file new solution and here you see the range of new project types that we create in the multi platform section you have a range of templates to create multiple projects at once such as the connected app which creates an eye and iOS project an android project and an asp.net core server back-end for that project you also have options for creating Zirin forms apps or individual iOS TV OS android dotnet core Mac or a few other types as well for now I'm going to skip out of this and go straight to a project that I've already created up here you can see the information about the project loading this is the notification bar and it's where pretty much any message about things that are going on is shown to you such as building or restoring packages up here in the toolbar there's the run the run button on the left and also your options for picking your current build configuration here in the solution view you have the solution Explorer on the right which shows all of your projects and the files in them and then you have the source editor in the center there's also a number of other pads around the sides such as the toolbox and the outline which can be docked and auto hidden there are a number of additional pads you can add from the menu up here in the tool bar you can see the run button your option for what project you're currently executing when you run your build configuration and if your project supports different kinds of devices your target device I'm going to take a quick look at the iOS project now so here we have our iOS project with a lot of very iOS specific files the main storyboard is the UI definition and if I open that it opens up in the iOS designer so here in the storyboard designer you can see the various pages that make up this app there's the tab bar controller the table view navigation controller there's a whole bunch of different things here we have a sign a sign and screen and the storyboard defines how the flows take place between these this is specific to iOS the other platforms have their own ways of doing things and here here we have the toolbox you can drag and drop controls you can select them and edit properties right here we have the outline where you can see the structure of the view but for now I'm going to go back and take a look at the server app so here we have our program entry point our asp.net core entry point and you can see in this file that some of these usings are actually grayed out and there are some lists and little markers on the bar here this is because we have wrought Rosalyn powered code analysis and in fact if you right-click on this and do quick fix it will give you an option to remove them and clean up those unused usings there let's take a look in another file the item controller is our asp.net core Web API controller and here you can see all the different methods that the service defines for the app to call now we're going to go and make a few changes to this so that you can see that it's a real demo so I'm going to go and take a look at what this item repository is and you can see when I click that it highlights all of the instances of that all of the references to that symbol in this file so I click on that and go to declaration and this takes me to this takes me to where that symbol is defined so actually I wanted to go to the to that interface so I go to that using the command D shortcut all of our shortcuts have been designed to feel native on Mac though if you if you want shortcuts the closer to vs on Windows then we do have an option to switch here's the interface and going to go navigate find the right symbols and here we have the actual implementation so here we see we have the repository where the server stores the data in this list of items so here we have when the repository is initialized we add a new item saying that C sharp is very sharp which is true I'm going to just do alt shift up to select that expression fold enter - to refactor it and I'm going to introduce a local which appears right there and I get in line rename and there we go and I'm also going to duplicate that line using command C command V without a selection and I'm going to add another item Mac Visual Studio is on Mac and I'm going to just rename that and you can see the c-sharp it in telecenter powered by Roslyn and so here we have this I'm going to build it with command K you can see it building up in the open state ed spa there if you don't know all the keyboard shortcuts they are also available in the menu and now I can run it so if I go into the solution options here you can see I have a run configuration which is like a build configuration but for running your app and this run configuration is set to launch both the iOS app and the service and this configuration is called app and service now if I go and switch this here to make that app and service configuration my current run target now when I run this it will launch both the service and the app and debug them with the Zahran debugger and the.net core debugger it takes a moment to build and then it launches the iPhone simulator okay and here is our app and you can see that it immediately hit that add method because our simulator app will call the server and server initialize this controller so I'm just going to continue and continue those were the two out the two items that we added in the constructor and now when you go back to the sim simulator you can see that our app has fetched these items from the server now I'm going to add an item here and save this and you see that it hits the breakpoint in the server app and when we inspect this item here in the locals pad we see that this has needed the description and text that we entered in the app today we saw how Visual Studio for Mac enables you to create xamarin mobile apps and asp.net core server backends using C sharp on a Mac you can find out more at akms /v s mac where you can download the preview today we're releasing this preview because we want your feedback so that we can make it better I encourage you to download Visual Studio for Mac give it a spin and let us know what you think if you run into any problems you can use the report a problem link in the IDE to let us know about them so we can fix them and if you have any suggestions about things you'd like us to add or do differently the provider suggestion link will take you to our user voice where you can vote on your favorite suggestions to help us prioritize what to focus on thank you for watching I hope you enjoy exploring the Visual Studio for Mac preview and I look forward to hearing from you all		
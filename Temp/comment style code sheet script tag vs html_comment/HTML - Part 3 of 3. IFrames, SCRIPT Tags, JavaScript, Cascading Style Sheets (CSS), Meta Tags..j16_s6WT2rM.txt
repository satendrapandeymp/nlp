html5 also includes the iframe tag iframes allow one HTML page within another much like the older frame and frameset tags do in addition to this capability iframes add new attributes and features for browsers that do not support iframes plain HTML text can be placed between the open and closing iframe tags and this text will be displayed to those non supporting browsers instead of the HTML document that would otherwise be embedded within the parent HTML document here is an example of a basic HTML 5.0 iframe here we have the opening iframe tag followed by the attribute source which specifies the page to load Mad Zelda fanned out HTML and then the width and the height then we add some text and a closing iframe tag and if the user browses this page with the browser that does not support iframes I'll simply see the text sorry it appears your web browser does not support iframes next here's an example of an iframe that has no border and is used as the target of a hyperlink in order to create this first we had the opening iframe tag we'll specify the width and height and no border by setting frame border to be 0 finally we have to give it a name in this case display window so that we can later reference it from a hyperlink now we'll add some text in case a user browses the page that does not support iframes and a closing iframe tag finally we have to construct the hyperlink and in this case we're going to write a href mad Zelda fan at HTML we're going to specify the target as the iframe with the name display window that we previously coded here's an example of some HTML source in this case with two iframes and I'm gonna use NetBeans to highlight so you can see the open and closing iframe tags notice we have a width and a height attribute frame border is set to zero so they'll be no border here whereas down here frame border is set to 3 so on the second iframe it will have a visible border also what's important is the name attribute because this is what you'll include and the anchor tags the hyperlink or href attribute and you'll have to reference that this to load a page and the iframe so in this case display window 1 and display window 2 are important for us to keep in mine all right so what there's two iframes defined let's look at how would we get to those iframes so in this case we have a hyperlink and and we click the hyperlink it's going to target display window one and so we're gonna load in this case j2 underscore HTML underscore tables at HTML into the target display window one well that's this iframe right here right display window one and then here when we click this hyperlink it's gonna target in this case display window two which is the name of this iframe and so it's gonna load the web page into this iframe so now that we've taken a look at the HTML source code let's load it up in Firefox and see how it looks all right so notice this iframe has a visible border and this iframe is invisible it has no border but when I click the link watch what happens okay and so it loads the page videos and all into this iframe okay and then I can play the videos or whatever alright so it's actually embedded within the document I'm gonna click on the second link and it's going to load this page inside of the iframe with the border and again here's that page next we're gonna look at script tags HTML script tags allow you to embed other programming languages within an HTML document an example one we're gonna embed script programming within the HTML itself to do this we'd add open and closing script tags and we must specify the language in this case the most common language embedded within HTML is JavaScript then we would go ahead and type our JavaScript code in this case we're declaring a variable we're writing onto the page dynamically the phrase random numbers and then within a for loop that's going to iterate 20 times we went to generate a random number between 1 and 6 so basically we're rolling the dice 20 times or a six-sided dice well all of this code goes in open and closing script tags and that lets the HTML document know that at least for that part of the document it's JavaScript that it needs to interpret and not HTML an example too we're embedding script programming from an external file and this can be useful for organizing your projects when you have a lot of JavaScript because you can write your JavaScript code in separate text files and then simply include them with the source attribute some of the words you'd write out the script tag in HTML you would set the language attribute to be JavaScript and then you would use the source tag to load the page in this case we're recursing up one directory and loading menu gjs which is the file extension often given to txt files that contain javascript then we would add the closing script tag the next examples just like it a script tag the language attributes specified as JavaScript the source recursos up one directory and loads the file validate j/s and then a closing script tag again here's an example of embedding script internally within the HTML so within the open and closing script tags we would type the JavaScript code and in this case we're creating a function in JavaScript that will simply detect the screen size and then point the user in the right direction based on that and far off on alert note one of the most common language is used with HTML script tags is JavaScript they're not the same as Java JavaScript syntax is similar to it's compiled bytecode namesake and therefore it is both object-oriented and versatile javascript is used for many client-side processing tasks such as form validation menu configuration special effects and games javascript was created by Brendan Eich while working at Netscape in 1995 under the codename mocha it was designed to complement compiled Java development with a non compiled and interpreted scripting language of similar syntax javascript was initially called live script until after its release with Netscape's 2.0 browser afterwards it was renamed to its current title and has kept that ever since Microsoft first supported javascript with their 3.0 browser and later named their version jscript referring to HTML and javascript documents as the HTML or dynamic HTML when you combine both javascript and HTML javascript was standardized in 1996 under the official title emc a script no we don't have enough time in this video series since it's only a brief introduction and review of HTML but in another video series we will explore JavaScript and much more detail here in this first example we have some HTML document code and JavaScript is what we're loading here the language is JavaScript and you can see the open and closing script tags and what this tells the web browser is that from this opening script tag all the way up to the top hTML is HTML and from this closing script tag all the wood on the bottom is HTML but everything that comes between the open and closing script tags is not HTML it's JavaScript and like ways we could also specify other languages like VB scripts or you know there's lots of other languages you can embed inside of HTML but javascript is probably one of the most once so within these script tags we have you know we're declaring a variable in Java we're going to dynamically write out the phrase 20 random numbers we have a for loop so this is going to iterate or loop 20 times and within that for loop we're going to generate a random number between 1 and 6 and that will happen again 20 times now JavaScript is a comprehensive language and we'll do a whole nother video series on that as we get the time so this is just going to kind of be a brief introduction that the focus of these videos is simply on HTML and you know how would we embed languages in HTML so I'm going to go through a couple of examples of JavaScript but you know if it seems a little bit confusing or a little bit much don't worry about it because you know JavaScript is a whole nother language in and of itself and right now you just want to kind of keep your focus on HTML so rather than worrying about the language even though I'll describe you know what it does and explain the code a little bit instead focus on the HTML tags that allow you to use that language because it could just as easily be some other language so let's see how that looks or how it works in Firefox if I load it up you can see it generates 20 random numbers and again if I reload the page notice how the numbers change because each time they are random let's look at another example and again an HTML script tags are embedded within the HTML document is some JavaScript and this does something similar to the last example it's going to generate a random number between 1 and 6 and it's going to do it 20 times but I wanted to show you how JavaScript can dynamically write other HTML into the page and so in this case it's going to go ahead and create a table it'll start the table with the caption and then the table row here and then inside this for loop as it iterates to the loop it's going to write out the table cell tags then close the table row and start another table row now it's only going to be the row if you know modulus 5 is 0 so in multiples of 5 so in other words it'll do 5 columns across and then add another five columns across an atom in the room and also we have to make sure that it's not at the end so we have to say I is not equal to 20 and the logical end and again if that seems odd or confusing to you don't worry about it because that's a whole nother language that we haven't covered yet right now I'll just worry about the HTML but I just want to show you how you can embed other languages in HTML with script tags and what they can do and also once we get into PHP and active server pages we'll be doing the same thing will be using PHP to dynamically write out HTML in different circumstances as we process things and the PHP page and let's see how this looks and we're going to load it pretty much the same as the last example but now it's putting the random numbers in a table and I'll reload you can see a few times we'll just make some new random numbers now here's an example where we're using script tags and the language is still JavaScript but instead of embedding the code directly in the page we're loading the code from an external file and we can do that using the source attribute so in other words when this page loads embed it within the head tags our script tags that will then turn around and load the source file you three underscore JavaScript underscore guest number script J s and that J s is the usual extension for an external javascript file and I'll show you what that code looks like I'll load it up here in NetBeans you can see that there's no HTML on this file it's just all JavaScript ok and this basically just simulates or emulates the rolling of some dice in a craps game all right so we have some variables declared here Global's and here's a function and again if this is confusing or seems odd to you don't worry about it all right now you're studying HTML you're not studying JavaScript we'll do a series of JavaScript videos later and we'll examine that spend a lot more detail but you know we're trying to keep this brief and and I just want you to see how you can embed a language like JavaScript or VB script or you know within HTML using script tags so anyway here's what the source code looks like there's the play function and there's the roll dice function generates a random number and this file here this external file is being loaded into the HTML document via the script tags here and the source attribute that's kind of a neat way to make your code you know to organize your code more and you can that way you can separate your JavaScript into separate files and you don't have to you know embed it directly within the HTML I don't know I guess it's a matter of preference whatever you like better but to just see how that looks it would run the same as if we had embedded it directly in the document and if I roll the dice player wins roll dice to play again roll again roll again well again I'm just firing off message alerts player wins click roll dice to play again so you can see how that works here's another example of an external javascript file rjs fault embedded within HTML using script tags and the source attribute and it's also gonna make use of this paragraph tag here in this case the IDB is set to message and we'll use that ID message as an identifier to reference this object where the text is here welcomes all the fans from the jas fall from the javascript file so we see the script tags and now let's take a look at the JavaScript and again without going into too much detail here because this is a whole nother topic and subject we'll cover later we have Global's here we have a start method and we have a run method here and this is sort of implementing you know threading and we're going to wait at a specified interval of milliseconds and we're simply going to change the color of the text and we're going to change the font size of it so that it will appear to grow and then shrink grow and then shrink okay so this is the JavaScript code that will be embedded in the HTML document and loaded via these script tags so let's see what that looks like in Firefox you can see the font is growing and then the color changes and the font is shrinking I'm also changing the font face but you know the color changes fine is growing and the font is shrinking so you can see I can use JavaScript to do special effects in it you know simple animations and things on a web page there's another example and once again we're loading JavaScript from an external file using our script tags and what we're gonna do is just simply give the user the ability to change the color of the webpage to any color they like just to show you how you can do that with JavaScript so it loads this file let's take a look at the source code real quick and in the start method it's just simply going to have a little window pop up you know prompt and then we'll get a string from them and return it and store it inside selected color and we'll use document body style background color and change it to whatever color they choose all right and to see how that looks or how that works hold it in Firefox and we do notice this pops up and for the color that we want we'll use purple then it just changes the background to purple or if I load it again I'll type red change the background to red or load it again green changes the to green cascading stylesheets cascading style sheets or CSS provide an alternate means of coding the style and presentation of HTML documents in addition to providing many new features and capabilities that transcend the collection of attributes available if your HTML alone cascading style sheets offer a means of modifying the style and presentation of an entire website by editing only one document historically CSS began as CH SS our cascading HTML style sheets which was proposed to the World Wide Web Consortium our w3c in 1994 by Hakan William line working with Bert Baz ly continued to develop CSS until 1996 when it was finally published in its first level 1 specification and officially adopted by w3c since then CSS 2.0 was published in 1997 followed by CSS 3.0 in 1998 you may embed CSS code directly within an HTML document here's an example first we're gonna have open and closing style tags and we'll specify the type as text CSS then we're going to add our style code in this case for an anchor element and a:hover so for an anchor such as a hyperlink the color will be lavender and there'll be no underline because we set the text decoration to none however when you hold the mouse over the link the hover color will change from lavender to red hence the property in the style tag you may also include an external CSS fault and an HTML document with the link tag the advantage of the above method is that if you include the Sam stylesheet in each page of a website you need only edit the CSS file and in so doing your changes will be reflected throughout the entire site which HTML page includes the stylesheet the rel attribute defines the relationship the stylesheet has with the HTML document when set to stylesheet the CSS becomes too persistent or preferred style once set to alternate stylesheet it may be selected by the user as an alternate configuration notice that in the link tag we specify the relationship the next attribute is href which is the file name of the cascading style sheet file usually post fixed with that CSS and then of course type which is text CSS pure honest HTML document we're using open and closing style tags to embed a cascading style sheet our CSS could directly within the HTML document itself and so you can see that for the body of the document and also for table cells these are the attributes that will be set by the cascading style sheet the font family will be Calibri we're gonna set the scrollbar color and now the scrollbar at some of these attributes will only work in Internet Explorer and some work in Firefox and I'll show you that in a moment down here anchor tags will have a text color of lavender and text decoration is set to none so although normally a hyperlink is underlined an anchor tax we use a trough it will not be underlined so that's how we can get rid of the default underline for hyperlinks also we're going to create a mouse-over effect by supposed to find that the hover color is red so whereas the text color and the anchor tag would be lavender if we move the mouse over at the hover color will be red all right so this is embedded directly within the HTML page instead of being loaded from an external CSS file but it's still CSS code and let's see how it looks on Firefox so we can just run that right out of NetBeans because I set up as my default browser and you can notice that when I move my mouse over it the link changes color okay now let's see how that looks an Internet Explorer you also notice that you know the scroll bars didn't change the color they're a bit on the other hand if we look at this page in Internet Explorer notice that the scroll bar is black and the background of the scroll bar has changed color and of course it has the same mouse over effect so different browsers may respond differently with cascading style sheet cascading style sheets but you can see some of the attributes of a style sheet embedded directly within an HTML document in this next example I'm loading an external cascading style sheet our CSS file and the way to do that is with the link tag and you would usually place that inside of the head tags of an HTML document so within the head tags opening closing head text I have the link tag and this attribute rel stands for relationship and there's style sheet and alternate style sheet but in this case I want it to be a persistent style so I'm going to this five style sheet and then basically just like a hyperlink reference I'm using the href attribute and loading the file v2 under square CSS underscore file dot CSS or cascading style sheet and of course the type would be text CSS so when I do that that's going to turn around and load this file and it's pretty much just the same code that was in the previous example except the previous example was embedded in the web page and here the CSS code is in its own separate file and the neat thing about this method is that I could turn around and use this link tag and embed this in every single web page of my website say I had a hundred web pages and the cool thing is is that if I just modify this one file only once those 100 web pages would all reflect the changes they would all be updated since simply because they're all loading this one cascading style sheet fall so I could change all kinds of things color and font and different attributes in this one file and then there's 100 web pages would be automatically updated so using cascading style sheets in this manner as an external file and then loading that external file into web page with the link tax is a very efficient way of managing large websites let's see how that looks in Firefox and it looks the same but we'll go ahead and load it and you can look at it anyway and again notice how the hyperlink tag changes color and it also and here actually wasn't the external when we lived this one here and Sam finally we have HTML meta tags meta tags recovered last are actually one of the most important parts of your web pages they are necessary for your pages to be spider by the search engines correctly they include keywords and content so that your pages once indexed can be found on the web by these search engines here are some examples in this case I've included the names for description keywords and author some of the most important meta tags you would normally place these at the top of your HTML document within the head tags and after a description you would include content in this case whatever your web page is about and then keywords which would be keywords that people might type into a search engine so for instance C++ Java Cisco Linux Active Directory whatever for pages on my website and then author which would be you or whoever's creating the web page no because of this it is recommended that you carefully code pages with HTML and keywords and use flash judiciously at the front of a website on a website's front page if you want your pages to be spidered correctly by the search engines web sites that are all flash and have no meta tags don't get promoted well and here's an example of a typical web page with minitex notice that you normally placed them within the open and closing head tags of the HTML document and of course they would start with the meta tag and the name attribute some common ones our description keywords and author and then of course another common attribute is content so in this case the description that might show up and a search engine would be programming networking tutorials the keywords which would be you know what would cause this page to appear when different we're looking for it in a search engine would be C++ Java Cisco's Linux Active Directory and of course the author Charles Germany and looks like I have a funny character there let me just let me know the way its color coding there you go all right so this kind of gives you an idea of meta text but although it's not even a visible part of the web page very important for getting your web pages indexed and the search engines the rabbit hole goes much much deeper Elif remember you can embed JavaScript and cascading style sheet could within HTML you can embed Jam plaits and outputs created with Java and flash swf falls into HTML you can embed operating specific scripting languages like VB script and database sequel within HTML but these topics are covered in other videos for another place at another time		
welcome everybody this is another Chris course with your host Chris and in this episode we're going to be coming to the html5 6 so you may have come across a site in your lifetime where you notice that it possesses some kind of cool stylistic background and when you hover over this background you notice that the background is actually interacting with the mouse based on the mouse's position and this may of taking you back a date you may have been like whoa it's actually pretty cool I didn't even know this sort of stuff was possible on the web and this kind of stuff it takes you by surprise it's intriguing pulls you in a website it gives this site a unique feel that makes it stand out from the rest now if you're thinking to yourself well I'm like for my site to have unique impression or I just like know how to create it has visuals because I think it's really cool well then this is going to be the perfect course for you we are going to be covering the technology used to create these pieces called html5 canvas now there are a lot of tutorials out there on the web already like cover HTML canvas but they only take things so far they only cover one aspect such as either drawing on the canvas or animated canvas but they don't really put everything together as a whole and that's what I'd like to fix with this course is to show you guys how to put all the main base pieces of canvas together to create really interesting visual pieces as a result now HTML canvas is just an HTML element as soon as we insert it within our HTML at canvas is created for us in which we can bend drawn and manipulate the pieces within it so let's start off with the basics to create any good-looking canvas piece you're going to need to know four essential skills still number one is you need to know how to create a canvas first off and then you need to know how to resize it depending on your projects requirements still number two is you need to know how to draw elements on the screen there are a lot of elements we can draw but we need to know what kind of elements can we draw in the first leg and how do we do it skill number three is we need to know how to animate these elements skill number two drawing the elements will only pick us so far because we're drawing static artwork on a screen but we want to make this artwork more intriguing so we need to know how to move elements from one location to another and make it a smooth transition in the process skill number four is we need to know how to interact with these elements whether it be Mouse move a mouse down a mouse click or maybe even a touch on your phone or even a tilt on your phone we need to know how we can get the canvas to interact with any of use event listeners that we have at hand so these are the four essential skills you need for any html5 canvas piece once you know these skills you're going to be able to create badass visuals on the web you're going to be able to pull people in your say and people are going to be amazed with your work so let's go ahead and get started on skill number one trading and resizing your canvas all right welcome everybody we are going to be covering step number one of becoming canvas pro creating and resizing your canvas it's very important that we know to do is from the start because first we need to know how do we create a canvas and then second we need to know how do we resize it based on our projects needs not all projects are going to be the same width and height so we need to make sure we know how to resize this canvas correspondingly so let's start off from the very beginning let's go ahead and open up a Finder window and create a new project directory so I'm going to right click within this Finder window click new folder and this project directory is going to be called canvas - resize so now that we have our project directory we now need to create the files that we're going to use to create our canvas piece and we need two files we need an HTML file and we need a JavaScript file so to create these I'm going to go ahead and drag my project directory over to sublime text and let me go ahead and drag that on over here it's on my other screen and you can see that we have our project directory open sublime text now to create a file what we're going to do is hit file new file and that's going to create a new file for us but now we need to save this as an HTML file so we can just hit command S and we're going to save this as index.html so now we have our HTML file but like I said every canvas piece needs to specific files we need an HTML file and we need a JavaScript file so the next thing we need to do is hit file new file and we are going to go ahead and save this one as canvas not Jes so we now have the two basic files we need for pretty much any canvas piece you can do a lot with just these two files so let's go on over to index.html and add some HTML boilerplate some template code that we're going to need for much any canvas piece you'll see that if I type HTML : 5 tab that I have a snippet that creates HTML boilerplate for me now if you do not have a snippet or something along lines that go ahead and pause the video right now and copy down the code you see right here and when you're ready to go we'll go ahead and continue so let's change this title to canvas resize and then within our body we're going to add an h1 tag and within this h1 tag let's add some dummy text just hello world because we tell a basic the reason we're adding this is we want to make sure that we can test this out in the browser we want to make sure that we can see this text and that is being read by the browser correspondingly so in order to do that we're going to go ahead and click index.html and I'm going to drag over my browser window and you can see that it is indeed being read by the browser which is perfect but this is not an HTML tutorial this is a canvas tutorial so we don't really want to deal with an h1 element not at the moment at least we want to deal with what's known as a canvas element what a surprise at canvas element or at canvas course so we want to deal with a canvas element and as soon as we entered this and save this within our HTML file and refresh the page over here in our browser you're not going to see anything but the canvas element is still being inserted on the screen you'll see that if I inspect our browser our canvas is there it's just hidden because it's blending it with the background the canvas by default is white and our background by default is white so it's basically just blending in it's there though but we want to make sure that we can see it without having to inspect our actual canvas so in order to do that we're going to add some style tags within our head and we're going to select our canvas element like so and we're going to give it a border of one pixel a solid border and this is going to be a black border so we're going to go ahead and save that refresh the browser and then you can see okay this is our canvas element this is where we can draw shapes anime shapes and then later interact with them only within this area here right now we can't interact with it in this other white space because that is not part of the canvas we can only interact with in this canvas right here so we want to make sure that this canvas expands the entire width and height of the screen well how do we do that you may be thinking well can't we just add some CSS thank you to the height of 100% and a width of 100% well let's see what happens when we do that so you'll see I have a height in width 100% if i refresh the page over here if not it does expand the width to what looks like a hundred percent but it doesn't actually expand the height to 100% that's because the HTML tag of the entire document doesn't actually take up the full height of the screen so in order to alleviate this we aren't going to set our height and width through CSS we're actually going to set our height and width through our JavaScript file if we set it through our JavaScript file that we can assure that the height and width of the canvas will always be the entire height and width of this full browser window so all the way from here all the way to this bottom right corner we can share the canvas is taking up the entire thing so let's go ahead and resize our canvas so it does just that we're going to head on over to canvas JSL and let's make sure that our HTML file is reading code from canvas J's first so in order to test out canvas dot Jess we're going to add a console.log statement we're going to put some dummy text in here anything you want what's something good to eat here let's say let's give a shout-out to Reddit our place because that's a pretty cool web development feature if you haven't checked it out it's basically collaborative drawing where you can only add one pixel every five seconds or so if I'm Craig then people have created some really awesome drawings on there anyway that's beside the point so we're going to give a shout out to our place and if i refresh the browser over here on the right hand side you're going to see that we're not actually reading our console.log statement and that's the problem we want to make sure that index.html is reading whatever is here within canvas dot j s so in order to do that we are going to add a script tag right above her body and right below our campus so I have a snippet for my script tags but you're going to want to create script tags like this and we're going to add a source the source is going to be equal to our JavaScript file so it's going to be equal to Java here in execution it's going to be equal to canvas Jas so now that we're pulling in our JavaScript file if we refresh the page over here you can see we are now console logging out our string that we had over in canvas J's so the two are connected that's perfect now we can get to manipulating our canvas so how do we do that well the first thing we're going to do is we're going to create a variable called canvas and we want to be able to select our HTML element and put it within this JavaScript variable so how do we do that with JavaScript well we want to first select a document object and then we want to say query selector and within this query selector function we need to specify what kind of element we want to grab so we want to grab an HTML tag called canvas so that's all we're going to put here and add a semicolon to the end of this so what's happening right here is basically we're going to be searching our entire HTML document and we're going to be looking for an HTML element of canvas so it's going to search through all this and once it hits canvas it's going to place that right inside our canvas variable and we can test that this is working by console logging out the canvas variable just like so and refreshing the page and you can see that it is indeed working if I hover over this you can see that our canvas is being hover which means that our canvas is successfully being placed within this variable perfect so now we need to actually alter the width and height of this canvas well how do we do that well we're going to select our canvas our canvas is width and then we're going to set this to the windows the window inner width and if i refresh the page you're going to see the canvas is expanding the full width of screen almost full width - this little margin right here we'll get to that in a second so all that's happening here is we're grabbing the windows inner width and the inner width of the window is all the way from here to here and we're setting the canvases with equal to that that's very simple we're pretty much as grabbing the window widths and putting it directly within our canvas so now that we're setting our canvases with we also need to set our canvases height like so and this is going to be equal to not the windows inner whip but the windows inner height and if we refresh the page now you can see the windows digamma almost a full height and with this screen but there's still a little issue here we have this little bit of margin on top and on the left now what's up with that well by default some elements have some default styles apply to them if we go ahead and inspect their body you'll see that body by default has a margin of 8 pixels what we want to make sure that this isn't there so we're going to head on over to our Style section and we're going to select our body and set its margin equal to zero and with this in place we now have a canvas taking up the full width and out of the screen without any issues and we can test this by adding a background to our canvas let's just say red for now you can see that red is taking out the entire screen perfect alright so now we know how to create a canvas and we also know how to resize it so it takes up the entire width and height of the screen but there is a lot more that goes into it obviously we want to be able to draw in this canvas and that is going to be skill number two which we'll be learning is how to create all the different objects canvas possessive so we can skip to drawing circles squares and other shapes as well you can draw linked characters that's one of my first projects with creating a drawing of link from the wind waker which is Bezier curves lines and colors with canvas so there's a ton that we can draw here but let's go ahead and get started with just drawing a simple box that's going to be the first step and I don't want to leave you hanging without actually drawing anything on this canvas so we're going to head on over a JavaScript file and we are going to create a new variable called C and the C variable is going to stand for something called a context we are just going to shorten it to C because we are going to be using this variable so very often that it's going to take a long time to type context out over and over and over again so just know C within canvas is always going to stand for context so we're going to say C is equal to canvas get context to D all right so what is going on here well basically in technological terms what's happening is we're returning a drawing context to a variable called C but that can be a little confusing what I want you to think of this as is within C we're creating a super object we're basically passing a ton of methods and functions in which we can use to actually draw within our canvas think of it as our magic paintbrush to draw circles squares and so forth only within a 2d stage we can't draw alex fears or boxes or anything like that but what we can draw our 2d elements that can be manipulated within a 2d space so once we do that we now have access to all these methods and functions which we can draw on the screen with within this variable called C so the first function I want to show you guys is called fill rect and fill rect takes four arguments it takes X value Y value a width and a height so it's pretty self-explanatory here X&Y are going to determine where on the screen this rectangle is going to be and the width and height is going to determine obviously the width and height of the rectangle so let's go ahead and give it an x-coordinate of 100 y-coordinate of 100 and it should be noted that this is going to be relative from the top-left of the screen the coordinate system so this is going to be a rectangle that's hundred pixels from the left of the screen and 100 pixels from the top of the screen and now all we need to do is specify width and height so let's just go ahead and give it one hundred one hundred hundred and with this in place if we refresh the browser you're going to see okay now we have a box being displayed we're actually drawing on the screen and we can create multiple boxes in different locations if we'd like you see if I go ahead and manipulate these coordinates over here that we're going to be creating multiple boxes across the screen and I want you to play around with this it's actually pretty pretty fun even if it is just drawing simple boxes because essentially we're going to be manipulating this we're going to be animating them we're going to have it bounce off walls and so forth but this is going to be the first step we first need to be able to draw the actual objects on the screen so that's going to be for those from folks we successfully learn how to create a canvas how to resize it based on our screens width and height and the next one we're going to cover all the different objects that we can draw on it using our magic C variable over here so stay tuned everyone and I look forward to see you in the next episode later [Music]		
what is going on guys welcome to part 2 of using the canvas in html5 and in this story we're going to be drawing some simple shapes but first please if you're watching this tutorial and you haven't watched the last one then make sure you have a JavaScript file and make sure you set up your canvas just like mine right here so now once you do that you're ready to go ahead and start writing your JavaScript code so what I'm going to be doing is I'm going to be making one and only one function that's going to be responsible for drawing all the shapes and stuff so I'm going to call that function do first because you know it's my first and only function and that's what I want to do so now what we're going to do is we want to call this function as soon as our web page is done loading so we need to add a window and we actually need to add an event listener on our window so window add event listener and this takes a couple parameters the first parameter is when do you want to call this function as soon as my windows done loading aka my web page is done loading what do you want to do well I want to call this du first function so I'm going to throw that right in there and for the less parameter just always write false so unless I tell you guys otherwise not important to explain that right now so what I want to do first is I want to store this canvas in a variable basically I want to be able to reference this canvas in JavaScript so the very first thing I need to do is make a variable I'm going to call mine X now in order to reference HTML elements you need to reference them through their ID so that way if we add you know 10 different canvases on our web page each one of them would hopefully have a unique ID and we could reference them all in separate variables in JavaScript so just write document get element by ID and as the parameter for this you write the ID name which was canvas and now the variable X basically represents this canvas right here so I know what you're saying you're probably saying ok so to make shapes on this you write X um you know like a draw circle or something like that well you're kind of right but you're like once ahead of me there is one thing that we need to do first and let me explain this now that they're making html5 they're making a bunch of awesome features that like they're still in development right now and one of the awesome things they're going to let us do is they're going to let us not only draw 2d shapes like circles and squares and triangles but they're going to make the ability to draw 3d shapes like spheres in pyramids and cylinders so they have different canvases set up for this so whenever we make our canvas we need to say what type it is so now that 3d is still in development it isn't a standard yet we only have that 2d capability so why did I tell you guys all that well whenever we set a reference to our canvas so we need to specify this is the 2d canvas so we write that reference to our canvas which is X and we write get context now as a parameter in here just go ahead and write 2d and this basically means okay we want to have a canvas and we want to be able to draw 2d shapes on it so now we are ready to reference this canvas through the variable canvas and it's set up to draw 2d shapes on but I know what you're saying oh oh Bucky you're going to get an error because you forgot to use the VAR keyword in your JavaScript now did I forget and am I going to get an error no I did that for a reason there are two different ways that you can make variables in JavaScript you can use this keyword var or you can make a variable without it now it isn't like the same thing you can just take your pick whatever you want to do if you're feeling lazy just don't use it they actually made this for a reason whenever you use the VAR keyword if you remember my Java beginner JavaScript tutorials this makes it a local variable and whenever you make a variable without the VAR keyword this makes it a global variable this means that you can use this canvas variable anywhere inside this javascript file even outside your function right here if you want to so the reason I didn't use that var is because I might use this canvas in the upcoming solos so anyways I recommend making this global I actually recommend making all your canvas just global it's going to make it a whole lot easier so now with that being said all the background information let's go ahead and start drawing some crap on here so in order to draw crap on your canvas you just go ahead and reference your canvas right like that and there are different functions for drawing different shapes I'm going to show you how to draw a really simple rectangle stroke right now what this does is it draws the outline of a rectangle and it takes four parameters the first two parameters are pretty much the x and y coordinates of where on the screen do you want to start drawing your rectangle and I'm just going to head it go ahead and write ten ten and what this means is remember like I said your canvas is basically like a coordinate system with the top left being zero zero so whenever we write 10 10 right there it means okay start drawing my rectangle 10 over and 10 down and that's the starting point aka the top left of our rectangle is going to be 10 pixels over and 10 pixels down so now it says okay I know where to start but how big do you want that rectangle well let's go ahead and just make it like 100 by 200 so 100 by 200 pixels if we go ahead and save this and refresh it check it out and okay I messed something up let me see what I meant oh I see I didn't capitalize event right like there so hopefully when I save this now and refresh there we go we get a nice weird-looking triangle so as you can see stroke erect basically took that canvas and it drew a outline of a rectangle on it now the positioning as you can see is 10 over and 10 down and that's where this top left of the rectangle is so that's where we gave it the position of where to start drawing it so if we go ahead and actually well I'll keep that for now let me go ahead and finish explain this so now the third parameter is how why do you want the rectangle to be well this rectangle is a hundred pixels wide because that was the parameter we gave right there and the height of it is 200 pixels so we want to draw a rectangle that's 100 by 200 and we want to start drawing it at 10 over and 10 down pretty sweet huh so that is how you draw a simple blank rectangles but what if you wanted to draw a solid rectangle or rectangle that had color inside it well instead of a stroke correct you would you're excuse me you would use a function called fill correct and this draws a rectangle that's filled with color instead of just the outline of a rectangle in other words it draws a solid rectangle just like this pretty awesome huh so now that I have time I didn't think I was going to have time for this but I want to talk to you guys about one more function that's actually pretty cool and that is something called clear rect so let me go ahead and draw a clear rectangle and you're saying okay a clear rectangle what's the point of that is it just like a rectangle that's invisible well a clear rect let me just go ahead and draw it clear rect is like a rectangle eraser whenever we draw a clear rect say we wanted to draw a clear rector right here what it would do is it would sit on top of here and it would subtract pixels from whatever was underneath it it's kind of like an eraser so let me go ahead and figure this out okay I want to start at 2020 which basically says okay we want to start right around here and how big do we want this clear ectopy let's just make it like 50 by 90 so let me go ahead and save this in refresh and check it out what we did is we basically erased part of our black rectangle by making a clear rect on top of it we started at 20 over 20 down which is right here it's 50 wide in 90 high now anything that's underneath it it's going to subtract those pixels in other words it's going to take a chunk out of this black rectangle so that is three simple functions stro correct which basically makes the outline of a rectangle fill rect which basically makes a solid rectangle this black rectangle right here in clear rect which is basically like an eraser which whatever is underneath it takes a chunk out of it technically it's called subtracting pixels from the area but I just call it a rectangular eraser so those are three simple things that we can do with the canvas in html5 but trust me guys we haven't even cracked the shell yet there so much stuff to cover with the canvas it's super powerful and it's a super amazing feature so for now thank you guys for watching and we got a lot of stuff to cover so I'll see you guys in the upcoming tutorials		
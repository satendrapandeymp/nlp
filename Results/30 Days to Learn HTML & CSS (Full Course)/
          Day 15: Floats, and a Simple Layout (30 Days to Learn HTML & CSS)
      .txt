today I'm going to teach you about CSS floats the finicky CSS floats so we can use floats to create the effect of columns and while this is an ideal and there are some ways with CSS to make it easier they're not going to be supported in all browsers because they are somewhat new so best to learn the basics first here I have a div with a class of wrap for our website and a simple heading and what I want to do is create our main content area and then I would also like to create a sidebar section that maybe has navigation links or it could have a list of categories for our blog you're familiar with sidebars likely so here let's first do our main content here I'm going to use an ID of content though you could equally use a class of content if you imagine using the styling again within here I will write this is my blog and that should be fine mostly we're going to be focusing on CSS and next I would like to create a sidebar so there are two ways to do this one of them will be to continue using a div and you'll see this quite a bit especially in older websites you apply a class of sidebar and this doesn't do anything magical the word sidebar doesn't do anything we could call it anything we want but this gives us a way to target the sidebar and style it accordingly now there are new html5 elements that we can use that allow us to keep from using divs over and over because remember divs don't have any semantic meaning at all they're simply wrappers so if we can use elements that have meaning we should always elect to do so in this case we're going to use an aside element now this doesn't only refer to a sidebar it just means information on our web site that is connected that should be placed aside to some content so while we can use it as a top-level sidebar it could also be within perhaps an article within your blog you could have an aside section within here I'm going to use an h2 and right sidebar and then I'm going to add a list of links and if we're going to do a list link's we want to make sure that we use an unordered list so first within a list item I'm going to use an anchor tag in here we're going to use the generic pound sign because we aren't blinking to anywhere specific in our case and we'll say home and then I will copy this a few times and we'll change this to about and contact and then if we wanted we could continue with our sidebar but I think it's fine for now and also within our content section maybe I'll say main content heading just some gibberish so that we have something to work with this is a fine website so now I'm going to come back and reload the page and here we have it so now our job is to figure out how to get this sidebar to the right side of our main content area so that it looks like a real website we browse the net cuts you can see if i zoom out a few clicks we have our main wrapper and then we have our main content area and then we also have a sidebar that's pushed off to the right let's try to recreate this first we're referencing our style that CSS file and now we can get started the first step is to if we come back reference this class of rap as we learned in the last lesson the quiz lesson we can apply a width of 600 pixels in a margin of auto to Center our website on the page the next step is let's use background colors so we can easily see where each section begins and ends and this is important to remember these are just boxes so for example if I come back and we want to reference div with a class of content I do period content background red and then if I want to reference all the sides on the page I could say background brown now let's refresh and you can see these are all just boxes if we were to apply a background color to the wrap of yellow these are terrible colors but you'll see again this is a big box the yellow is cutting off because the sidebar is filling up the rest of the space and that will be stacked a little bit higher in terms of the Z index for the z axis so let's get rid of the yellow and we'll stick with our colors here but we want to make the sidebar lesser and width and pushed all the way to the right and we can accomplish this by using floats so first I'm going to target the main content area and specify that it should float to the left and now you can see it automatically reduces now keep in mind there is no dedicated width here it's going to take up all available space that it requires so for example main content heading watch what happens if we come back and if I were to duplicate that to make a longer heading it's going to take up all of that space as well so that might be okay for you but probably you want to have a very specific width we come back to style at CSS our rap is 600 pixels so why don't we specify a width for our main content area of 500 pixels now if I come back and refresh it's taking up exactly 500 pixels regardless of how wide our headings are and now that I look at this I'm thinking our sidebar is a little bit too narrow so why don't we fix that come back and let's make the width of our content area 450 instead refresh and now because we floated our main content to the left and specified a width anything below it will jump up the next step is we want to simulate more of an actual website and it's difficult to do so when you don't have much content so why don't we adjust the height of each of these so that we can see a little bit more here I'm going to target the content and the aside and we're going to set the height to 600 pixels now we need to know two things here but first let's make sure it works refresh and sure enough the height has been increased now number one rather than pasting height in here and here we can reduce that by targeting both elements using a comma and next you want to stray away from using Heights very very rarely will you use an actual height on especially a wrapping element and that's because you want to let your content determine what the height is in a real website you wouldn't want all of this spacing down below also as soon as this content takes up all of the 600 pixels it may be cut off so in general try not to use Heights on your layout but it's okay in this case so that we have something to work with next I want you to take note of these bullets here why does it seem as if they're coming outside of the sidebar I'm going to right-click and choose inspect element in Google Chrome and if I hover over the UL I want you to note how it seems as if it's taking up space within the main content area as well if I hover over the list item you'll see the same effect and this is something you should be careful with if we're floating the content area and this is being pushed up why don't we float the aside as well I'm going to float that one to the left or you could also do the right in this case we can push it up to the left as well that's better and now you can see if we hover over it it's only taking up that specific area as it should next I see that the list items are pushed over to the edge and we don't want that why don't we make them line up with the sidebar and the reason they're pushed over is again because that browser is applying some defaults for you now this is easy to trip you up at first because you don't know what is being applied by default in this case it's adding padding left to the unordered list so I'm going to revise that by setting padding left to zero and I need to make sure I only target the unordered list that is within the aside element refresh and now that's being pushed back over and if you wanted you could adjust it slightly so you could maybe make it 18 in this case or if you wanted to get rid of the bullets entirely you could say list style what kind of style for the list elements and we're going to say no styling at all and that will get rid of the bullets entirely and then if we adjusted the padding left back to zero that'll push it up against the edge like so and you have the beginnings of what would be an actual website now I want you to note if we try to resize this it stays the same width no matter what what if you wanted it to adjust well another way is to use percentages to declare your width so why don't we try it this time and I'm going to say I want the width of the wrapper to be 80% of the width of our entire browser window next here I'm going to set the width of our content area equal to perhaps 70% of this containing element and then I'm going to set the aside and we'll keep that like so for the time being now if i refresh I can resize and notice that the elements will resize as I adjust the browser window now you might be wondering why the sidebar is staying the same and that's because again it's taking up only give space that it requires here so it takes up as much space as to fill that longest word sidebar if you want to explicitly state a width you could say with 30% 70 plus 30 equals 100 now if I've refreshed you'll see that that's taken up 30% of the entire width if you want to adjust this you could say 90 for content and 10 for the sidebar and now we have a much more flexible content area but now we have a new problem it's fine here but if soon as I scroll all the way down you'll see that the width of our sidebar is too small because at this point 10% of a width of around 400 pixels is very little only 40 pixels so what if we wanted to set some minimums and why don't we try that we have a width of 80% and we'll set minimum width to around 600 pixels and why we don't have to it's easier for me to read if I first see first we're going to have a minimum of 600 but then the width can be as much beyond that as it needs to in order to be 80% but it can't go lower than 600 pixels now if i refresh it seems the same for the big window but now watch what happens when I reduce it it's going to get to a point right here it's not going to get any more narrow and we can do the exact same thing for our sidebar so if we want to set 2080 refresh that looks good and we want to make sure that no matter what the width is appropriate good so now you have a more flexible website people browsing and lower my solutions can access your site and then for a larger resolution you can provide a different set of options maybe you want to display more at the top you can do a lot of stuff here now we need to go over one more thing for today watch what happens when I apply a background color to our wrapping div right here background equals green what do you think is going to happen refresh and isn't this odd the background color for our entire wrapping element seems to only be taking up a heading element and why is that and the only reason is watch what happens when we've removed the floats refresh now it is taking up all of the available space so it seems that when we apply floats it takes these elements out of the flow of the documents now this is only partially true but for where you are it makes sense when you float an element you're saying I no longer want you to have a block display where you're going to take up as much space as you can I'm going to rip you out of the flow of the document and when it does that the background color for the wrapper assumes that there's nothing below it so this is a problem and this is something that gets people tripped up quite a bit there's lots of ways to fix this one of them in the most traditional way is to use a CSS property called clear so let's imagine right here we had a footer and this is a new element for you it designates the footer of a particular section whether it's a blog posting or a website and I'm going to say my footer now if i refresh notice how it seems to trigger the wrapper and the only reason it's doing this is because both of these elements this one and this one are floated so they're out of the flow of the document but our footer is not so that triggers the wrapper to contain it it's a way of clearing it footer and we're going to clear anything that occurs above it so if there's any floated elements this is going to clear it now if we refresh you're going to see the same thing but if you ever find yourself in a situation where it seems like an element is way up here into a different section and make sure that you're clearing it so it clears any floats that are above it now another way that we could potentially solve this we had no footer we come back we're still with this problem is by using a trick called overflow:hidden overflow and set that to hidden and I don't expect you to understand why this works for now just except that it's a way to trigger the browser into containing the elements with n whatever you're specifying here so just accept that is a little trick to make sure that it contains it so good job we've covered a lot in this lesson if you need to go back and watch it again do so because these techniques are going to be vital in your web design career		
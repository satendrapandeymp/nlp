Wow yo guys what the hell is going on you're watching CSS for beginners lesson for you want and in this lesson we're going to talk about block level elements that's coming up Wow okay so first of all just to recap what the box model is essentially the box model controls the spatial properties of all block level elements and those spatial properties are margin this blue bar here the padding the green the width the yellow and height the yellow as well as this border here so those five properties margin padding border width and height they the properties that the box model governs and it applies to all block level elements and I've not really described or explained what block level elements are so I thought in this lesson that's what we'd go through Wow all right mean just so I'm back here in the code and I've just added some new tags here I've got a couple of divs in fact we'll do three I'll just copy and paste that one small and those divs are given a class of block and then I've got three span tags as well and those are all given a class of inline ok so we've got the block styling here for all the block classes we give them a margin of 10 pixels and a padding of 10 pixels as well as a one pixel border which is black exactly the same styles for the inline classes which of these spun tax yet so this is already saved but let's just save it again to make sure and then just have a look what this looks like in a browser ok so these three here are the div tags and they are block level elements okay so a div tag is a block level element and you can see that these block level elements they occupy the whole width of a row one on top of another a bit like building blocks okay and that's how block level elements work they to take up a whole row a whole block in the document so there's many different types of block level elements div tags are just one of them I've got opener the list here of all the block level elements there may be some have been omitted from this list but if you do a quick Google search you can find them all I'll also provide this link in the video description down below so we can see here the div tag is right there or the block level elements the P tag all the heading tags list tags pre address block wall div egg etcetera etc ok there's quite a lot of them so that is what the block level elements look like and if we right-click and inspect one of these we can see the orange is the margin that's being applied the green is the padding and we've not applied a width and a height but we can do here down in the the dev tools we can say with 400 pixels height 200 pixels and now we can see these blocks here have been given those width and height properties so they are block level elements and that is what the box model governs they can govern the spatial properties of block level elements I'm just going to refresh this page to get rid of those changes and it revert back to this and then we're going to take a look at inline elements these are inline elements and if you remember from the code they are span types so span sites are an inline element we've given exactly the same properties to those a margin of 10 pixels of padding of 10 pixels and a border and at first glance you can look at those I think well I'm gone yeah they're given a margin a border and a padding inside the box so yeah there are being via the box model rules as well now yeah at first glance it looks that way but if we look under the hood the first thing we'll see is that they don't occupy a full row they stack next to each other in line hence why they're called inline element because of this they don't kind of display any vertical spatial awareness so yeah they might get this padding and yeah they might get the margin if we inspect this we can see the padding in green is 10 pixels all around the element the margin is only being applied if you look at the element to the left and the right not to the top in the bottom and that's because they cannot be controlled by via the box model properties vertically okay they take up a space in line not vertically so horizontally but not vertically and to demonstrate this point I just want to go back to the code and I'll add a few more spun tags just copy all those and paste them in a few times I'll save it we'll go back to the browser opening Chrome right and look at that now they're all kind of mushed up on top of each other so the display:inline going across going across until the end this one's cut off halfway and it carries on down here below and then they go in line in line again but this here this vertical space this margin is not applying to them if we inspect the element you can see the vertical margins nowhere to be seen the padding that we applied is kind of overlapping onto the line above so it's not obeying no it box model properties as we would like them to okay so how did we get around this well we could change their display type okay so we'll go back to the code and the way we change a display type is by giving it a display property so it's just display and then we can DUP's we can change it into a block level element by supplying the value of block so if we save this again and view it in a browser let's open with Chrome and now what they're displaying exactly the same as those div tags above they're all block level elements now because we've specified that specifically but I mean they're no longer stuck in from left to right and say we want Matt say we want them to snap from left to right but we also want them to have those box model properties the margin and the padding so they don't mush up onto each other well we can do that as well and we'll minimize this and go back here and the way we do it is by giving them inline properties as well as block level properties and we do this by specifying a value of inline - block so that there my friends is saying okay the display type for this is inline-block give me all the inline positive attributes that inline elements have and all the positive attributes that block level elements haven't merged them together and let's see what this does for us all right cool there we go so now they have all the inline properties of stacking left to right like this but they also obey those margin and padding properties that block level elements do also so that's great and this is a really good way we can control things like navigations user navigations I'll show you what I mean let's jump back to the code and I'm gonna delete all this here and what I'm gonna do is just add in some a links we won't give them any particular link for now we'll just do anything we'll just call it a link and a oops and then we'll copy and paste this a few times so say we give all the a tax we want to star the like buttons like a navigation so we'll give them all the padding of 10 pixels we want imagine of 10 pixels because we don't want the right next to each other we'll have a background color of I don't know and we'll just say a gray color you don't need to understand these hex codes I'll go through that later and we'll give them a border one pixel solid and a slightly darker gray we'll give them a text color of black and we'll take away the underline by specifying a text decoration of naught and we'll save that so first of all an egg tag is an inline element so by default it's not going to show those block level properties it's no Kibeho was padding and margin properties okay so let's just see what this looks like in a in fact place just to demonstrate this inline thing first of all we'll just double the links and we'll right-click open in a browser okay they look fine there and this is the reason I tried to add a lot of links let's just double this again like that and view once more so when they have the display type of inline which is by default they look like this which is pretty cat yep but we can change this to inline block display:inline-block and it should now look fine perfect and I know you're not going to have this many links in your navigation your top-level navigation most of the time that looks a bit silly but I mean when you start working with other content underneath the links it's going to be greatly beneficial to you to use something like this okay and the good thing about display:inline-block is that these days it's widely supported by browsers and days gone by we use a half there kind of fudge this a little bit so that we supported in different browsers but now if we take a look at this website this is kinda use calm and great website to kind of see whether you can use certain CSS properties within modern browsers and how far they got back to all browsers anyway I'll talk more about kind of browser support in later videos but for now I just want to show you that you can see here that ie Firefox Chrome Safari all these different browsers green it means it's supported so that's brilliant so yeah go away practice with these have fun if you have any questions whatsoever feel free to throw a comment down below otherwise please subscribe share or like these videos and I'll see you guys in the next one		
operating systems allow us to navigate to the files of a computer and to create store and execute commands the dawn of Apple when the Mac operating system enabled computers to be used by average families and the Windows era pushed that use even further in this video I'm going to explain how operating systems work and I'm going to show you how to make your very own basic operating system operating systems are programs that allow users to interact with computer hardware they're made up of hundreds of thousands of different commands that tell a computer what to do these commands are known as a programming language and while operating systems can be written in many different programming languages for our operating system we're going to be using one called the assembly programming language the first thing that we're going to need is something to put our operating system on we'll be using a fobby disk since it's the simplest interface for constructing a booting operating system from the ground up since I don't have a floppy disk or drives I'm going to be using a version of VirtualBox running Windows XP so all I have to do is download an image of a floppy disk from here and then go to devices floppy devices and load the floppy image now i can use VirtualBox to create and test my operating system then from within VirtualBox you'll need to download and install NASM and open up the installation folder this is where we're going to store our project this tutorial assumes that you already have working knowledge of the assembly programming language if you don't you can check out these resources to find out more information about it if you're watching this video thinking that you can write an operating system without putting any work or research into it then you're going to be terribly frustrated and disappointed because that's pretty much impossible the operating system that we're going to be writing is based on the mic os project created and developed by Mike Saunders you can find his original version of the code here and if you want to follow along with this video you can download my customized version of the code here the next thing that we need to do is make sure that the computer can boot to our floppy disk we can do this by writing some code to the first sector of the floppy disk that tells the computer to execute the code that we write this is called a boot loader or boot strap if we open up a command prompt we can see the floppies current boot record by typing debug and l space 0 space 0 space 0 space 1 to copy the disk contents into RAM then if you type D space 0 it will display it you can see how it labels the das version and the format type this is known as the Boot Record and if you type D space 180 then you can see what it will currently display if we were to boot to the disk right now this is the bootloader and this is what we're going to rewrite now you can type quit to quit the debugger along with preserving the Boot Record of the disk the bootloader has a bunch of other different functions as well and I'll explain those as we go along if you want to follow along with creating the bootloader you can use the boot ASM file found in the project folder for reference open up notepad and begin typing this code which sets it to 16 bits and tells it to jump past the disk description this section is the disk description and you can customize the disk label and om name to fit your preference next is the bootloader section where we create the space to launch our code prevent any Hardware conflicts and get the boot device number these next few sections read and search the floppy disk for the file that we wish to load then it loads it and sets up the file allocation table from it next we need to create the subroutines that we referenced and jump to earlier in the code here's where we create the variables for the file that we're trying to find which we'll call Colonel Ben and we'll create any error strings for errors lastly we'll end the boot sector and start the buffer now save it as boot ASM to your national directory then double-click on NASM path bet and type nasa m-- space boot ASM space - Oh space boot bin to convert it to a bin file now we need to write it to a disk so type debug and then type in space boot bin and then type L space 0 to write the contents of the file into memory then type W space 0 space 0 space 0 space 1 to write the file to the first sector of the floppy disks what we've just done is written a new bootloader onto the disk that tells the computer to boot to it and then searches the disk for a specific file this file is going to contain our operating system commands and it will let us run and call other programs in the coding community this is called a kernel and here's how you make it you can use the kernel ASM file from the project folder if you want to reference it and follow along so let's open up notepad again and let's set the file to 16-bit and set the memory size to load our kernel into next we're going to go ahead and call all of our functions so we create a spot for them in memory now we're going to go ahead and start writing our main program first we're going to check for any hardware conflicts and set the text output settings and then create a random number generator next we'll search for a file called auto run bin and if that isn't found we'll search for one called Auto run bass after that we'll set up a dialog box that prints our welcome message sets the color and ask the user they want to continue here's the messages that were called using the code above so you can change them to fit your own preferences now we'll create a main interface set the color get the files on the disk and list their file names then if the user selects a file that ends and dot bin will execute that file but will prevent the kernel from being executed and will prevent any files that don't end in dot Ben or dot bass from being executed next we'll set the system time and date programs and will list all the files that the kernel will use these files are other assembly files that perform separate operations like keyboard functions math functions sound functions and so on we could go into that but that would take way too much time so for now you can find all these files in the project folder in a folder called features so just copy that entire folder over to both the NASM directory and on to your floppy disk the last thing that we need to do is compile the kernel and load it on to the floppy disk so save this file as kernel dot ASM to the nassima directory then double-click on NASM path dot bat and type NASM space kernel ASM space dash o space kernel dot bin then type kernel dot bin space copy space a colon backslash kernel dot bin to copy it to the floppy disk now when you restart VirtualBox you should see your new operating system you can view the contents of the disk and then selecting run dot bin files if you want some fun programs that you can run using your operating system if you look inside your project file you'll find a folder named programs just copy the contents of this folder over to your floppy disk you'll find programs like a text editor hangman white cycle racing and a file manager and more all written and provided by Mike Saunders if you have any problems getting this to work be sure to double check your code with the code provided in the project folder be sure to check out tinkernut.com on Facebook and Twitter alright that's it for this tutorial for more go to tinkernut.com		
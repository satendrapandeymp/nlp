what's goin on guys and welcome to your 30th HTML and CSS tutorial and I have decided to create a complete tutorial on display CSS property because it is that much special so let's see what this place is this property is and why I am stressing a lot on this property so to start with let me give you a brief introduction again to some of the tags we have used in the past so we have used div we have used span we have used P we have used heading tags from h1 h2 h3 all the way to at 6 and then we have used let's say we have used we have used a tag we have used IMG tag and the list goes on so let's see I'll write a line ABC and I'll write another line d EF and when I have viewed this in the browser I get a b c and d EF in two separate lives and why is that now when I write let's expand ABC and I write span de f now when I reload this page now you will see that I got these two words in different tags within different span tags in the same light now why is the sole y in first case I am getting these two words in separate lines and these two words in different lines now in CSS we have a model a box model which we'll be discussing in future tutorials but for this tutorial let's learn what is display and what are the various kinds of display property you could give and the default properties of the display CSS default values of the display CSS property now for the div each diff whenever you type a div by default this div would occupy the whole width of the screen and let's scroll this down a bit and let's really further with the CSS let's give div emergent top off ten pixels so that we can separate the background colors and let's say background should be red so now let's reload this now you can see that each of the div no matter how small or large its content is is occupying a full 100% width and the gap you see right here is the body margin by default which is applied by the browser CSS and we can reset it by giving margin:0 to the body tag now this margin which appears right now is given default by the Google Chrome browser on every page so let's reload this and now we have got a b c and d EF separated by a 10 pixel top and this gap is because of this line right here margin top and I can make a margin bottom to even remove that top gap so now we have got a 10 pixel gap between these two and you can see that this div is occupying full hundred-percent width and the height of the content so the gist is not same with the span ones now let's do similar thing with span and we don't need any margin on that let's give it a background of green and let's reload now you can see that in div we have got a full width content covered no matter how small or large is the content inside the div tag but with the span we have got only the width which is required by the content itself and that's the main difference between the inline elements what we call the inline elements and the block elements and now remember these two terms there are many more to come but in line and block technically means that the block block elements would occupy all the space of the parent container so for example in this example right here the parent container is the body and body is obviously hundred percent in width so div being a block level element would occupy all the hundred percent width of its parent element which is the body element right here and the span being the inline element would occupy only the width which is required by its content itself and would give the rest of the width in the same line to other inline elements so by default block would automatically get a new line for themselves unless they are floated or something like that which we'll discuss in the next tutorials but the inline elements would by default just occupy the width which they are assigned by their content inside themselves and would leave the rest of the space for other inline elements so if I do like another block level inside the two in line then what would happen is this span would say okay I've got my space then I'll leave just leave this rest of the space for another element but div being a block element says no I would like my own line and I would just ignore the space which you have left for me and I'll just create a new space for me they would appear under this ABC and again since there is no space for spanned because they've already occupied all the space for its online then span would appear on the next slide let's reload this and now you can see that ABC occupies only a little bit of space we can see that by applying in the background de f says nope I would take my own space and hang on a sec okay so I'm back was a call from mom and just she was saying saying to eat something because you know I'm such a nerd haha so anyways coming back to our tutorial let me summarize what I was teaching you and yeah okay so we were here that the span tag would by default only get our only adopt only that much of width which is required by the content inside it so if I increase the content then the width would also increase itself but it's not with the block level elements so with the block the width would obviously remain same which is the hundred percent the maximum width of the parent and we can increase the content so what the heck am i teaching you all this stuff now this when you get out of this tutorial series you would actually thank me for teaching all this stuff because this is one of the most useful concepts while designing your webpages and modifying the layout of the web pages so let's see how we can and would expand to a block level and remember these terms the block level element would occupy 100% not the hundred percent yeah you can say 100 percent of the parent with so if I have a let's a div div ID my parent and I close this dev right here and down here in the CSS if I do my parent background should be transparent so that it doesn't inherited inherit this background Alice a wait do just be 600 pixels and I guess my windows less than 600 so let's drop it down to 300 pixels and Alice reload this now you can see that my parent is 300 pixels right here and the wait for this div the hundred-percent wait for this tip would be the parent width of its parent and that is 300 pixels so this div is right now occupying 300 pixel width because 300 pixel is the width of its parent so I hope your understanding and span is still just occupying only the width required by its contents so now we have a property in CSS called display now display would convert your block level elements to a line elements and in line to block level so let's see how it works so by default for div the property is something like this in the browser so browser always displays div in the block and span by default has the property this now this in line means that occupy only your inline element width and just leave the all the next space and what happens when we switch these two values and now let's see what happens thus we know this and war you can now see that we have got a whole new other stuff right here so now what you see is span by default is adopting 100% of the width of the container and div is just restricted to its own width just like we had spanned previously and now you guys if you are intelligent enough to understand that we had applied it 300 pixel width on the my parent and I told you that VAR AV has switched the properties of div and spanned by applying block and inline so why the heck is span spanning a hundred person with Y when it should span only a 300 pixel width so the answer to this question is that my parent itself is a div and we are applying div display:inline so span actually becomes free of this width and we would discuss more on how this inline property and block level property makes a huge huge difference on other properties and other elements in the future tutorials but let's see how to fix that for now so what we'll do is we'll apply a display:block property to this my parents so that this dev right here is block and all the diffs inside that now let's reload this and we have got a nice little span inside its limitations which is the 300 pixel right now so that was about the dis display property of CSS and we would be requiring this property a lot in our future tutorials so in the next tutorial I don't know I would I would be teaching you but that would be awesome so I'll see you there next time and don't forget to subscribe thank you for watching		